(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell["InstallMCPServer", "ObjectName", CellID -> 10257982],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "InstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/InstallMCPServer"
            ],
            "[",
            "\"\!\(\*StyleBox[\"application\", \"TI\"]\)\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]installs a predefined Wolfram MCP server for the specified application.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "InstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/InstallMCPServer"
            ],
            "[",
            RowBox[
             {
              "\"\!\(\*StyleBox[\"application\", \"TI\"]\)\"",
              ",",
              StyleBox["server", "TI"]
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]installs the ",
        Cell[
         BoxData[
          ButtonBox[
           "MCPServerObject",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
          ]
         ],
         "InlineFormula"
        ],
        " specified by ",
        Cell[BoxData[StyleBox["server", "TI"]], "InlineFormula"],
        ".\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "InstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/InstallMCPServer"
            ],
            "[",
            RowBox[
             {
              RowBox[
               {
                ButtonBox["File", BaseStyle -> "Link"],
                "[",
                StyleBox["\[Ellipsis]", "TR"],
                "]"
               }
              ],
              ",",
              StyleBox["server", "TI"]
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]installs the MCP server to the specified file."
       }
      ],
      "Usage",
      CellID -> 19094789
     ],
     Cell[
      TextData[
       {
        "The value for ",
        Cell[BoxData[StyleBox["server", "TI"]], "InlineFormula"],
        " can be one of the following:"
       }
      ],
      "Notes",
      CellID -> 701239966
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"\!\(\*StyleBox[\"name\", \"TI\"]\)\"",
          Cell[
           TextData[
            {
             "the name of an existing ",
             Cell[
              BoxData[
               ButtonBox[
                "MCPServerObject",
                BaseStyle -> "Link",
                ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
               ]
              ],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[{"<|", StyleBox["\[Ellipsis]", "TR"], "|>"}],
          Cell[
           TextData[
            {
             "an association corresponding to an ",
             Cell[
              BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[
           {
            ButtonBox["LLMConfiguration", BaseStyle -> "Link"],
            "[",
            StyleBox["\[Ellipsis]", "TR"],
            "]"
           }
          ],
          Cell[
           TextData[
            {
             "an ",
             Cell[
              BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[
           {
            ButtonBox[
             "MCPServerObject",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
            ],
            "[",
            StyleBox["\[Ellipsis]", "TR"],
            "]"
           }
          ],
          Cell[
           TextData[
            {
             "an ",
             Cell[
              BoxData[
               ButtonBox[
                "MCPServerObject",
                BaseStyle -> "Link",
                ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
               ]
              ],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 565390
     ],
     Cell[
      "Some predefined MCP servers that can be specified by name are:",
      "Notes",
      CellID -> 160459376
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"WolframAlpha\"",
          Cell[
           "an MCP server that is optimized for retrieving information from Wolfram|Alpha",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"WolframLanguage\"",
          Cell[
           "an MCP server that is optimized for writing and evaluating Wolfram Language code",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Wolfram\"",
          Cell[
           "a blend of Wolfram|Alpha and Wolfram Language functionality",
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 8640607
     ],
     Cell[
      TextData[
       {
        "Additionally, any other MCP servers you have created with ",
        Cell[
         BoxData[
          ButtonBox[
           "CreateMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/CreateMCPServer"
          ]
         ],
         "InlineFormula"
        ],
        " can be referenced by name."
       }
      ],
      "Notes",
      CellID -> 676868825
     ],
     Cell[
      TextData[
       {
        "Some possible values for ",
        Cell[
         BoxData["\"\!\(\*StyleBox[\"application\", \"TI\"]\)\""],
         "InlineFormula"
        ],
        " are:"
       }
      ],
      "Notes",
      CellID -> 16022026
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"ClaudeDesktop\"",
          Cell[
           TextData[
            ButtonBox[
             "Claude Desktop",
             BaseStyle -> "Hyperlink",
             ButtonData -> {URL["https://claude.ai/download"], None},
             ButtonNote -> "https://claude.ai/download"
            ]
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Cursor\"",
          Cell[
           TextData[
            ButtonBox[
             "Cursor",
             BaseStyle -> "Hyperlink",
             ButtonData -> {URL["https://www.cursor.com/"], None},
             ButtonNote -> "https://www.cursor.com/"
            ]
           ],
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 822744168
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "See Also",
        Cell[
         BoxData[
          TemplateBox[
           {
            "SeeAlso",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related reference (function) pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "SeeAlsoSection",
      CellID -> 12280518
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "CreateMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/CreateMCPServer"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "UninstallMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "MCPServerObject",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        Cell[
         BoxData[
          RowBox[
           {
            Cell[
             TextData[
              StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"]
             ]
            ],
            DynamicModuleBox[
             {
              nbobj$$ = 
               NotebookObject[
                "9179ba90-6301-6042-a7ba-ccd1d07c0d49",
                "8ed368e0-72b6-684b-8625-c989204b546f"
               ],
              cellobj$$ = 
               CellObject[
                "ec435cdb-3f35-fd46-9eaf-e15416866d40",
                "22dd334a-5f76-4640-ac90-0a86e255d580"
               ]
             },
             TemplateBox[
              {
               GraphicsBox[
                {
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  CircleBox[{0, 0}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{0, 0.62}, {0, -0.62}}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{-0.62, 0}, {0.62, 0}}]
                 }
                },
                ImagePadding -> {{1.0, 1.0}, {2.4, 1.0}},
                ImageSize -> 16,
                PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}},
                BaselinePosition -> Center -> Center
               ],
               nbobj$$,
               cellobj$$
              },
              "InlineListingAddButton"
             ],
             Initialization :>
              (nbobj$$ = EvaluationNotebook[];
              cellobj$$ = EvaluationCell[])
            ]
           }
          ]
         ],
         "InlineListingAddButton"
        ]
       }
      ],
      "SeeAlso",
      CellID -> 232538245
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 651200433
     ],
     Cell["XXXX", "Tutorials", CellID -> 527661061]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 669140456
     ],
     Cell["XXXX", "MoreAbout", CellID -> 261427081]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 2563630
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 13526417]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 293292919
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"RickHennigan`MCPServer`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 212002675
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 858458711
     ],
     Cell[
      "Install the default MCP server for Claude Desktop:",
      "ExampleText",
      CellID -> 12425924
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[{"InstallMCPServer", "[", "\"ClaudeDesktop\"", "]"}]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 335891485
        ],
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[
            {
             TagBox["Success", "SummaryHead"],
             "[",
             DynamicModuleBox[
              {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
              TemplateBox[
               {
                PaneSelectorBox[
                 {
                  False ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                         ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                        ],
                        Appearance -> None,
                        BaseStyle -> { },
                        ButtonFunction :> (Typeset`open$$ = True),
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      FrameBox[
                       StyleBox[
                        "\"\[Checkmark]\"",
                        StripOnInput -> False,
                        LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FontSize -> 25,
                        FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                       ],
                       ContentPadding -> False,
                       FrameMargins -> {{0, 0}, {0, 0}},
                       FrameStyle -> None,
                       StripOnInput -> False
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            RowBox[
                             {
                              "File",
                              "[",
                              TemplateBox[
                               {
                                "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                               },
                               "FileArgument"
                              ],
                              "]"
                             }
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                      ]
                     }
                    },
                    AutoDelete -> False,
                    BaselinePosition -> {1, 1},
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                   ],
                  True ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                        ],
                        Appearance -> None,
                        BaseStyle -> { },
                        ButtonFunction :> (Typeset`open$$ = False),
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      FrameBox[
                       StyleBox[
                        "\"\[Checkmark]\"",
                        StripOnInput -> False,
                        LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FontSize -> 25,
                        FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                       ],
                       ContentPadding -> False,
                       FrameMargins -> {{0, 0}, {0, 0}},
                       FrameStyle -> None,
                       StripOnInput -> False
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            RowBox[
                             {
                              "File",
                              "[",
                              TemplateBox[
                               {
                                "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                               },
                               "FileArgument"
                              ],
                              "]"
                             }
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[
                             {"\"MCPServerObject\"", "\": \""},
                             "RowDefault"
                            ],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            InterpretationBox[
                             RowBox[
                              {
                               TagBox["MCPServerObject", "SummaryHead"],
                               "[",
                               DynamicModuleBox[
                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                TemplateBox[
                                 {
                                  PaneSelectorBox[
                                   {
                                    False ->
                                     GridBox[
                                      {
                                       {
                                        PaneBox[
                                         ButtonBox[
                                          DynamicBox[
                                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                          ],
                                          ButtonFunction :> (Typeset`open$$ = True),
                                          Appearance -> None,
                                          BaseStyle -> { },
                                          Evaluator -> Automatic,
                                          Method -> "Preemptive"
                                         ],
                                         Alignment -> {Center, Center},
                                         ImageSize ->
                                          Dynamic[
                                           {
                                            Automatic,
                                            Times[
                                             3.5,
                                             Times[
                                              CurrentValue["FontCapHeight"],
                                              AbsoluteCurrentValue[Magnification]^(-1)
                                             ]
                                            ]
                                           }
                                          ]
                                        ],
                                        GraphicsBox[
                                         {
                                          Thickness[0.005979],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {25.0, 97.147},
                                               {92.882, 165.03},
                                               {102.25, 174.4},
                                               {117.45, 174.4},
                                               {126.82, 165.03},
                                               {136.2, 155.66},
                                               {136.2, 140.46},
                                               {126.82, 131.09},
                                               {75.558, 79.823}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {
                                              {
                                               {0, 2, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0}
                                              }
                                             },
                                             {
                                              {
                                               {76.265, 80.53},
                                               {126.82, 131.09},
                                               {136.2, 140.46},
                                               {151.39, 140.46},
                                               {160.76, 131.09},
                                               {161.12, 130.73},
                                               {170.49, 121.36},
                                               {170.49, 106.17},
                                               {161.12, 96.794},
                                               {99.725, 35.4},
                                               {96.601, 32.276},
                                               {96.601, 27.211},
                                               {99.725, 24.087},
                                               {112.33, 11.48}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {109.85, 148.06},
                                               {59.648, 97.854},
                                               {50.276, 88.482},
                                               {50.276, 73.286},
                                               {59.648, 63.913},
                                               {69.021, 54.541},
                                               {84.217, 54.541},
                                               {93.589, 63.913},
                                               {143.79, 114.12}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ]
                                         },
                                         ImageSize -> 24
                                        ],
                                        GridBox[
                                         {
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"Wolfram\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                         BaseStyle -> {
                                          ShowStringCharacters -> False,
                                          NumberMarks -> False,
                                          PrintPrecision -> 3,
                                          ShowSyntaxStyles -> False
                                         }
                                        ]
                                       }
                                      },
                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                      AutoDelete -> False,
                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                      BaselinePosition -> {1, 1}
                                     ],
                                    True ->
                                     GridBox[
                                      {
                                       {
                                        PaneBox[
                                         ButtonBox[
                                          DynamicBox[
                                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                          ],
                                          ButtonFunction :> (Typeset`open$$ = False),
                                          Appearance -> None,
                                          BaseStyle -> { },
                                          Evaluator -> Automatic,
                                          Method -> "Preemptive"
                                         ],
                                         Alignment -> {Center, Center},
                                         ImageSize ->
                                          Dynamic[
                                           {
                                            Automatic,
                                            Times[
                                             3.5,
                                             Times[
                                              CurrentValue["FontCapHeight"],
                                              AbsoluteCurrentValue[Magnification]^(-1)
                                             ]
                                            ]
                                           }
                                          ]
                                        ],
                                        GraphicsBox[
                                         {
                                          Thickness[0.005979],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {25.0, 97.147},
                                               {92.882, 165.03},
                                               {102.25, 174.4},
                                               {117.45, 174.4},
                                               {126.82, 165.03},
                                               {136.2, 155.66},
                                               {136.2, 140.46},
                                               {126.82, 131.09},
                                               {75.558, 79.823}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {
                                              {
                                               {0, 2, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0}
                                              }
                                             },
                                             {
                                              {
                                               {76.265, 80.53},
                                               {126.82, 131.09},
                                               {136.2, 140.46},
                                               {151.39, 140.46},
                                               {160.76, 131.09},
                                               {161.12, 130.73},
                                               {170.49, 121.36},
                                               {170.49, 106.17},
                                               {161.12, 96.794},
                                               {99.725, 35.4},
                                               {96.601, 32.276},
                                               {96.601, 27.211},
                                               {99.725, 24.087},
                                               {112.33, 11.48}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {109.85, 148.06},
                                               {59.648, 97.854},
                                               {50.276, 88.482},
                                               {50.276, 73.286},
                                               {59.648, 63.913},
                                               {69.021, 54.541},
                                               {84.217, 54.541},
                                               {93.589, 63.913},
                                               {143.79, 114.12}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ]
                                         },
                                         ImageSize -> 24
                                        ],
                                        GridBox[
                                         {
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"Wolfram\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox[
                                              TagBox[
                                               DynamicModuleBox[
                                                {boxObj, cellObj},
                                                TagBox[
                                                 TagBox[
                                                  ButtonBox[
                                                   TagBox[
                                                    "\"{\[Ellipsis]}\"",
                                                    BoxForm`Undeploy,
                                                    DefaultBaseStyle -> {Deployed -> False}
                                                   ],
                                                   ButtonFunction :> {
                                                    CopyToClipboard[
                                                     "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                    ],
                                                    NotebookDelete[cellObj],
                                                    FrontEndExecute[
                                                     FrontEnd`AttachCell[
                                                      boxObj,
                                                      Cell[
                                                       BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                      ],
                                                      {1, {Center, Bottom}},
                                                      {Center, Top},
                                                      "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                     ]
                                                    ]
                                                   },
                                                   Evaluator -> Automatic,
                                                   Appearance -> {
                                                    "Default" -> None,
                                                    "Hover" ->
                                                     FrontEnd`FileName[
                                                      {"Typeset", "ClickToCopy"},
                                                      "Hover.9.png"
                                                     ],
                                                    "Pressed" ->
                                                     FrontEnd`FileName[
                                                      {"Typeset", "ClickToCopy"},
                                                      "Pressed.9.png"
                                                     ]
                                                   },
                                                   BaseStyle -> { },
                                                   DefaultBaseStyle -> { },
                                                   BaselinePosition -> Baseline,
                                                   FrameMargins -> 2,
                                                   Method -> "Preemptive"
                                                  ],
                                                  EventHandlerTag[
                                                   {
                                                    "MouseEntered" :>
                                                     (cellObj = 
                                                      MathLink`CallFrontEnd[
                                                       FrontEnd`AttachCell[
                                                        boxObj,
                                                        Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                        {1, {Center, Bottom}},
                                                        {Center, Top},
                                                        "ClosingActions" -> {"ParentChanged"}
                                                       ]
                                                      ]),
                                                    "MouseExited" :> NotebookDelete[cellObj],
                                                    PassEventsDown -> True,
                                                    Method -> "Preemptive",
                                                    PassEventsUp -> True
                                                   }
                                                  ]
                                                 ],
                                                 MouseAppearanceTag["LinkHand"]
                                                ],
                                                Initialization :> (boxObj = EvaluationBox[]),
                                                DynamicModuleValues :> { },
                                                UnsavedVariables :> {boxObj, cellObj},
                                                BaseStyle -> {Editable -> False}
                                               ],
                                               Deploy,
                                               DefaultBaseStyle -> "Deploy"
                                              ],
                                              "SummaryItem"
                                             ]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox[
                                              TagBox[
                                               GridBox[
                                                {
                                                 {
                                                  "\"WolframContext\"",
                                                  "\"WolframLanguageEvaluator\"",
                                                  "\"WolframAlpha\"",
                                                  "",
                                                  ""
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                               ],
                                               "Grid"
                                              ],
                                              "SummaryItem"
                                             ]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"BuiltIn\"", "SummaryItem"]
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                         BaseStyle -> {
                                          ShowStringCharacters -> False,
                                          NumberMarks -> False,
                                          PrintPrecision -> 3,
                                          ShowSyntaxStyles -> False
                                         }
                                        ]
                                       }
                                      },
                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                      AutoDelete -> False,
                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                      BaselinePosition -> {1, 1}
                                     ]
                                   },
                                   Dynamic[Typeset`open$$],
                                   ImageSize -> Automatic
                                  ]
                                 },
                                 "SummaryPanel"
                                ],
                                DynamicModuleValues :> { }
                               ],
                               "]"
                              }
                             ],
                             RickHennigan`MCPServer`MCPServerObject[
                              <|
                               "Name" -> "Wolfram",
                               "Location" -> "BuiltIn",
                               "Transport" -> "StandardInputOutput",
                               "ServerVersion" -> "1.0.0",
                               "ObjectVersion" -> 1,
                               "LLMEvaluator" -> <|
                                "Tools" -> {
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframContext",
                                   "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                   "Parameters" -> {
                                    "context" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                     "Required" -> True
                                    |>
                                   },
                                   "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ],
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframLanguageEvaluator",
                                   "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                   "Parameters" -> {
                                    "code" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "The Wolfram Language code to evaluate.",
                                     "Required" -> True
                                    |>,
                                    "timeConstraint" -> <|
                                     "Interpreter" -> "Integer",
                                     "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                     "Required" -> False
                                    |>
                                   },
                                   "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ],
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframAlpha",
                                   "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                   "Parameters" -> {
                                    "query" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "the input",
                                     "Required" -> True
                                    |>,
                                    "steps" -> <|
                                     "Interpreter" -> "Boolean",
                                     "Help" -> "whether to show step-by-step solution",
                                     "Required" -> False
                                    |>
                                   },
                                   "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ]
                                }
                               |>
                              |>
                             ],
                             Editable -> False,
                             SelectWithContents -> True,
                             Selectable -> False
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox["\"InstallMCPServer\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                      ]
                     }
                    },
                    AutoDelete -> False,
                    BaselinePosition -> {1, 1},
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                   ]
                 },
                 Dynamic[Typeset`open$$],
                 ImageSize -> Automatic
                ]
               },
               "SummaryPanel"
              ],
              DynamicModuleValues :> { }
             ],
             "]"
            }
           ],
           Success[
            "InstallMCPServer",
            <|
             "MessageTemplate" :>
              MessageName[
               RickHennigan`MCPServer`MCPServer,
               "InstallMCPServerNamed"
              ],
             "MessageParameters" -> {"Wolfram", "Claude Desktop"},
             "Location" ->
              File[
               "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
              ],
             "MCPServerObject" ->
              RickHennigan`MCPServer`MCPServerObject[
               <|
                "Name" -> "Wolfram",
                "Location" -> "BuiltIn",
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1,
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "WolframContext",
                    "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                    "Parameters" -> {
                     "context" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                      "Required" -> True
                     |>
                    },
                    "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframLanguageEvaluator",
                    "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "code" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "The Wolfram Language code to evaluate.",
                      "Required" -> True
                     |>,
                     "timeConstraint" -> <|
                      "Interpreter" -> "Integer",
                      "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                      "Required" -> False
                     |>
                    },
                    "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframAlpha",
                    "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "query" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "the input",
                      "Required" -> True
                     |>,
                     "steps" -> <|
                      "Interpreter" -> "Boolean",
                      "Help" -> "whether to show step-by-step solution",
                      "Required" -> False
                     |>
                    },
                    "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>
               |>
              ]
            |>
           ],
           Editable -> False,
           SelectWithContents -> True,
           Selectable -> False
          ]
         ],
         "Output",
         CellLabel -> "Out[1]=",
         CellID -> 245509191
        ]
       },
       Open
      ]
     ],
     Cell["Uninstall it:", "ExampleText", CellID -> 259865962],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {"UninstallMCPServer", "[", "\"ClaudeDesktop\"", "]"}
          ]
         ],
         "Input",
         CellLabel -> "In[2]:=",
         CellID -> 737154476
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            InterpretationBox[
             RowBox[
              {
               TagBox["Success", "SummaryHead"],
               "[",
               DynamicModuleBox[
                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                TemplateBox[
                 {
                  PaneSelectorBox[
                   {
                    False ->
                     GridBox[
                      {
                       {
                        PaneBox[
                         ButtonBox[
                          DynamicBox[
                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                           ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                          ],
                          Appearance -> None,
                          BaseStyle -> { },
                          ButtonFunction :> (Typeset`open$$ = True),
                          Evaluator -> Automatic,
                          Method -> "Preemptive"
                         ],
                         Alignment -> {Center, Center},
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        FrameBox[
                         StyleBox[
                          "\"\[Checkmark]\"",
                          StripOnInput -> False,
                          LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FontSize -> 25,
                          FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                         ],
                         ContentPadding -> False,
                         FrameMargins -> {{0, 0}, {0, 0}},
                         FrameStyle -> None,
                         StripOnInput -> False
                        ],
                        GridBox[
                         {
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              RowBox[
                               {
                                "File",
                                "[",
                                TemplateBox[
                                 {
                                  "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                 },
                                 "FileArgument"
                                ],
                                "]"
                               }
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaseStyle -> {
                          ShowStringCharacters -> False,
                          NumberMarks -> False,
                          PrintPrecision -> 3,
                          ShowSyntaxStyles -> False
                         },
                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                        ]
                       }
                      },
                      AutoDelete -> False,
                      BaselinePosition -> {1, 1},
                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                     ],
                    True ->
                     GridBox[
                      {
                       {
                        PaneBox[
                         ButtonBox[
                          DynamicBox[
                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                          ],
                          Appearance -> None,
                          BaseStyle -> { },
                          ButtonFunction :> (Typeset`open$$ = False),
                          Evaluator -> Automatic,
                          Method -> "Preemptive"
                         ],
                         Alignment -> {Center, Center},
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        FrameBox[
                         StyleBox[
                          "\"\[Checkmark]\"",
                          StripOnInput -> False,
                          LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FontSize -> 25,
                          FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                         ],
                         ContentPadding -> False,
                         FrameMargins -> {{0, 0}, {0, 0}},
                         FrameStyle -> None,
                         StripOnInput -> False
                        ],
                        GridBox[
                         {
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              RowBox[
                               {
                                "File",
                                "[",
                                TemplateBox[
                                 {
                                  "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                 },
                                 "FileArgument"
                                ],
                                "]"
                               }
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[
                               {"\"MCPServerObject\"", "\": \""},
                               "RowDefault"
                              ],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              InterpretationBox[
                               RowBox[
                                {
                                 TagBox["MCPServerObject", "SummaryHead"],
                                 "[",
                                 DynamicModuleBox[
                                  {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                  TemplateBox[
                                   {
                                    PaneSelectorBox[
                                     {
                                      False ->
                                       GridBox[
                                        {
                                         {
                                          PaneBox[
                                           ButtonBox[
                                            DynamicBox[
                                             FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                            ],
                                            ButtonFunction :> (Typeset`open$$ = True),
                                            Appearance -> None,
                                            BaseStyle -> { },
                                            Evaluator -> Automatic,
                                            Method -> "Preemptive"
                                           ],
                                           Alignment -> {Center, Center},
                                           ImageSize ->
                                            Dynamic[
                                             {
                                              Automatic,
                                              Times[
                                               3.5,
                                               Times[
                                                CurrentValue["FontCapHeight"],
                                                AbsoluteCurrentValue[Magnification]^(-1)
                                               ]
                                              ]
                                             }
                                            ]
                                          ],
                                          GraphicsBox[
                                           {
                                            Thickness[0.005979],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {25.0, 97.147},
                                                 {92.882, 165.03},
                                                 {102.25, 174.4},
                                                 {117.45, 174.4},
                                                 {126.82, 165.03},
                                                 {136.2, 155.66},
                                                 {136.2, 140.46},
                                                 {126.82, 131.09},
                                                 {75.558, 79.823}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {
                                                {
                                                 {0, 2, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0}
                                                }
                                               },
                                               {
                                                {
                                                 {76.265, 80.53},
                                                 {126.82, 131.09},
                                                 {136.2, 140.46},
                                                 {151.39, 140.46},
                                                 {160.76, 131.09},
                                                 {161.12, 130.73},
                                                 {170.49, 121.36},
                                                 {170.49, 106.17},
                                                 {161.12, 96.794},
                                                 {99.725, 35.4},
                                                 {96.601, 32.276},
                                                 {96.601, 27.211},
                                                 {99.725, 24.087},
                                                 {112.33, 11.48}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {109.85, 148.06},
                                                 {59.648, 97.854},
                                                 {50.276, 88.482},
                                                 {50.276, 73.286},
                                                 {59.648, 63.913},
                                                 {69.021, 54.541},
                                                 {84.217, 54.541},
                                                 {93.589, 63.913},
                                                 {143.79, 114.12}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ]
                                           },
                                           ImageSize -> 24
                                          ],
                                          GridBox[
                                           {
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"Wolfram\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                           BaseStyle -> {
                                            ShowStringCharacters -> False,
                                            NumberMarks -> False,
                                            PrintPrecision -> 3,
                                            ShowSyntaxStyles -> False
                                           }
                                          ]
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {1, 1}
                                       ],
                                      True ->
                                       GridBox[
                                        {
                                         {
                                          PaneBox[
                                           ButtonBox[
                                            DynamicBox[
                                             FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                            ],
                                            ButtonFunction :> (Typeset`open$$ = False),
                                            Appearance -> None,
                                            BaseStyle -> { },
                                            Evaluator -> Automatic,
                                            Method -> "Preemptive"
                                           ],
                                           Alignment -> {Center, Center},
                                           ImageSize ->
                                            Dynamic[
                                             {
                                              Automatic,
                                              Times[
                                               3.5,
                                               Times[
                                                CurrentValue["FontCapHeight"],
                                                AbsoluteCurrentValue[Magnification]^(-1)
                                               ]
                                              ]
                                             }
                                            ]
                                          ],
                                          GraphicsBox[
                                           {
                                            Thickness[0.005979],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {25.0, 97.147},
                                                 {92.882, 165.03},
                                                 {102.25, 174.4},
                                                 {117.45, 174.4},
                                                 {126.82, 165.03},
                                                 {136.2, 155.66},
                                                 {136.2, 140.46},
                                                 {126.82, 131.09},
                                                 {75.558, 79.823}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {
                                                {
                                                 {0, 2, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0}
                                                }
                                               },
                                               {
                                                {
                                                 {76.265, 80.53},
                                                 {126.82, 131.09},
                                                 {136.2, 140.46},
                                                 {151.39, 140.46},
                                                 {160.76, 131.09},
                                                 {161.12, 130.73},
                                                 {170.49, 121.36},
                                                 {170.49, 106.17},
                                                 {161.12, 96.794},
                                                 {99.725, 35.4},
                                                 {96.601, 32.276},
                                                 {96.601, 27.211},
                                                 {99.725, 24.087},
                                                 {112.33, 11.48}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {109.85, 148.06},
                                                 {59.648, 97.854},
                                                 {50.276, 88.482},
                                                 {50.276, 73.286},
                                                 {59.648, 63.913},
                                                 {69.021, 54.541},
                                                 {84.217, 54.541},
                                                 {93.589, 63.913},
                                                 {143.79, 114.12}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ]
                                           },
                                           ImageSize -> 24
                                          ],
                                          GridBox[
                                           {
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"Wolfram\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox[
                                                TagBox[
                                                 DynamicModuleBox[
                                                  {boxObj, cellObj},
                                                  TagBox[
                                                   TagBox[
                                                    ButtonBox[
                                                     TagBox[
                                                      "\"{\[Ellipsis]}\"",
                                                      BoxForm`Undeploy,
                                                      DefaultBaseStyle -> {Deployed -> False}
                                                     ],
                                                     ButtonFunction :> {
                                                      CopyToClipboard[
                                                       "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                      ],
                                                      NotebookDelete[cellObj],
                                                      FrontEndExecute[
                                                       FrontEnd`AttachCell[
                                                        boxObj,
                                                        Cell[
                                                         BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                        ],
                                                        {1, {Center, Bottom}},
                                                        {Center, Top},
                                                        "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                       ]
                                                      ]
                                                     },
                                                     Evaluator -> Automatic,
                                                     Appearance -> {
                                                      "Default" -> None,
                                                      "Hover" ->
                                                       FrontEnd`FileName[
                                                        {"Typeset", "ClickToCopy"},
                                                        "Hover.9.png"
                                                       ],
                                                      "Pressed" ->
                                                       FrontEnd`FileName[
                                                        {"Typeset", "ClickToCopy"},
                                                        "Pressed.9.png"
                                                       ]
                                                     },
                                                     BaseStyle -> { },
                                                     DefaultBaseStyle -> { },
                                                     BaselinePosition -> Baseline,
                                                     FrameMargins -> 2,
                                                     Method -> "Preemptive"
                                                    ],
                                                    EventHandlerTag[
                                                     {
                                                      "MouseEntered" :>
                                                       (cellObj = 
                                                        MathLink`CallFrontEnd[
                                                         FrontEnd`AttachCell[
                                                          boxObj,
                                                          Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                          {1, {Center, Bottom}},
                                                          {Center, Top},
                                                          "ClosingActions" -> {"ParentChanged"}
                                                         ]
                                                        ]),
                                                      "MouseExited" :> NotebookDelete[cellObj],
                                                      PassEventsDown -> True,
                                                      Method -> "Preemptive",
                                                      PassEventsUp -> True
                                                     }
                                                    ]
                                                   ],
                                                   MouseAppearanceTag["LinkHand"]
                                                  ],
                                                  Initialization :> (boxObj = EvaluationBox[]),
                                                  DynamicModuleValues :> { },
                                                  UnsavedVariables :> {boxObj, cellObj},
                                                  BaseStyle -> {Editable -> False}
                                                 ],
                                                 Deploy,
                                                 DefaultBaseStyle -> "Deploy"
                                                ],
                                                "SummaryItem"
                                               ]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox[
                                                TagBox[
                                                 GridBox[
                                                  {
                                                   {
                                                    "\"WolframContext\"",
                                                    "\"WolframLanguageEvaluator\"",
                                                    "\"WolframAlpha\"",
                                                    "",
                                                    ""
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                 ],
                                                 "Grid"
                                                ],
                                                "SummaryItem"
                                               ]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"BuiltIn\"", "SummaryItem"]
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                           BaseStyle -> {
                                            ShowStringCharacters -> False,
                                            NumberMarks -> False,
                                            PrintPrecision -> 3,
                                            ShowSyntaxStyles -> False
                                           }
                                          ]
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {1, 1}
                                       ]
                                     },
                                     Dynamic[Typeset`open$$],
                                     ImageSize -> Automatic
                                    ]
                                   },
                                   "SummaryPanel"
                                  ],
                                  DynamicModuleValues :> { }
                                 ],
                                 "]"
                                }
                               ],
                               RickHennigan`MCPServer`MCPServerObject[
                                <|
                                 "Name" -> "Wolfram",
                                 "Location" -> "BuiltIn",
                                 "Transport" -> "StandardInputOutput",
                                 "ServerVersion" -> "1.0.0",
                                 "ObjectVersion" -> 1,
                                 "LLMEvaluator" -> <|
                                  "Tools" -> {
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframContext",
                                     "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                     "Parameters" -> {
                                      "context" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                       "Required" -> True
                                      |>
                                     },
                                     "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ],
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframLanguageEvaluator",
                                     "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                     "Parameters" -> {
                                      "code" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "The Wolfram Language code to evaluate.",
                                       "Required" -> True
                                      |>,
                                      "timeConstraint" -> <|
                                       "Interpreter" -> "Integer",
                                       "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                       "Required" -> False
                                      |>
                                     },
                                     "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ],
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframAlpha",
                                     "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                     "Parameters" -> {
                                      "query" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "the input",
                                       "Required" -> True
                                      |>,
                                      "steps" -> <|
                                       "Interpreter" -> "Boolean",
                                       "Help" -> "whether to show step-by-step solution",
                                       "Required" -> False
                                      |>
                                     },
                                     "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ]
                                  }
                                 |>
                                |>
                               ],
                               Editable -> False,
                               SelectWithContents -> True,
                               Selectable -> False
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                            }
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaseStyle -> {
                          ShowStringCharacters -> False,
                          NumberMarks -> False,
                          PrintPrecision -> 3,
                          ShowSyntaxStyles -> False
                         },
                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                        ]
                       }
                      },
                      AutoDelete -> False,
                      BaselinePosition -> {1, 1},
                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                     ]
                   },
                   Dynamic[Typeset`open$$],
                   ImageSize -> Automatic
                  ]
                 },
                 "SummaryPanel"
                ],
                DynamicModuleValues :> { }
               ],
               "]"
              }
             ],
             Success[
              "UninstallMCPServer",
              <|
               "MessageTemplate" :>
                MessageName[
                 RickHennigan`MCPServer`MCPServer,
                 "UninstallMCPServerNamed"
                ],
               "MessageParameters" -> {"Wolfram", "Claude Desktop"},
               "Location" ->
                File[
                 "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                ],
               "MCPServerObject" ->
                RickHennigan`MCPServer`MCPServerObject[
                 <|
                  "Name" -> "Wolfram",
                  "Location" -> "BuiltIn",
                  "Transport" -> "StandardInputOutput",
                  "ServerVersion" -> "1.0.0",
                  "ObjectVersion" -> 1,
                  "LLMEvaluator" -> <|
                   "Tools" -> {
                    LLMTool[
                     <|
                      "Name" -> "WolframContext",
                      "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                      "Parameters" -> {
                       "context" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                        "Required" -> True
                       |>
                      },
                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ],
                    LLMTool[
                     <|
                      "Name" -> "WolframLanguageEvaluator",
                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                      "Parameters" -> {
                       "code" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "The Wolfram Language code to evaluate.",
                        "Required" -> True
                       |>,
                       "timeConstraint" -> <|
                        "Interpreter" -> "Integer",
                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                        "Required" -> False
                       |>
                      },
                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ],
                    LLMTool[
                     <|
                      "Name" -> "WolframAlpha",
                      "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                      "Parameters" -> {
                       "query" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "the input",
                        "Required" -> True
                       |>,
                       "steps" -> <|
                        "Interpreter" -> "Boolean",
                        "Help" -> "whether to show step-by-step solution",
                        "Required" -> False
                       |>
                      },
                      "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ]
                   }
                  |>
                 |>
                ]
              |>
             ],
             Editable -> False,
             SelectWithContents -> True,
             Selectable -> False
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[2]=",
         CellID -> 123756569
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 165373023
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Scope", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 41740382
        ],
        Cell[
         "Install a Wolfram|Alpha-specific MCP server:",
         "ExampleText",
         CellID -> 449301050
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "InstallMCPServer",
               "[",
               RowBox[{"\"ClaudeDesktop\"", ",", "\"WolframAlpha\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 150383749
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframAlpha\\\" for Claude Desktop.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframAlpha\\\" for Claude Desktop.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframAlpha\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframAlpha\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframAlpha\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframAlpha\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {"\"WolframAlphaContext\"", "\"WolframAlpha\"", "", "", ""}
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframAlpha",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframAlphaContext",
                                      "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframAlpha",
                                      "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "query" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "the input",
                                        "Required" -> True
                                       |>,
                                       "steps" -> <|
                                        "Interpreter" -> "Boolean",
                                        "Help" -> "whether to show step-by-step solution",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"InstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "InstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "InstallMCPServerNamed"
                 ],
                "MessageParameters" -> {"WolframAlpha", "Claude Desktop"},
                "Location" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                 ],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframAlpha",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframAlphaContext",
                       "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframAlpha",
                       "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "query" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "the input",
                         "Required" -> True
                        |>,
                        "steps" -> <|
                         "Interpreter" -> "Boolean",
                         "Help" -> "whether to show step-by-step solution",
                         "Required" -> False
                        |>
                       },
                       "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 313779972
           ]
          },
          Open
         ]
        ],
        Cell["Uninstall it:", "ExampleText", CellID -> 399936197],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "UninstallMCPServer",
               "[",
               RowBox[{"\"ClaudeDesktop\"", ",", "\"WolframAlpha\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 198080673
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframAlpha\\\" for Claude Desktop.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframAlpha\\\" for Claude Desktop.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframAlpha\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframAlpha\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframAlpha\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframAlpha\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {"\"WolframAlphaContext\"", "\"WolframAlpha\"", "", "", ""}
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframAlpha",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframAlphaContext",
                                      "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframAlpha",
                                      "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "query" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "the input",
                                        "Required" -> True
                                       |>,
                                       "steps" -> <|
                                        "Interpreter" -> "Boolean",
                                        "Help" -> "whether to show step-by-step solution",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "UninstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "UninstallMCPServerNamed"
                 ],
                "MessageParameters" -> {"WolframAlpha", "Claude Desktop"},
                "Location" ->
                 File[
                  "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                 ],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframAlpha",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframAlphaContext",
                       "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframAlpha",
                       "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "query" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "the input",
                         "Required" -> True
                        |>,
                        "steps" -> <|
                         "Interpreter" -> "Boolean",
                         "Help" -> "whether to show step-by-step solution",
                         "Required" -> False
                        |>
                       },
                       "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 198269203
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             InterpretationBox[
              Cell["\t", "ExampleDelimiter"],
              $Line = 0;
             ]
            ],
            "ExampleDelimiter",
            CellID -> 5261232
           ],
           Cell[
            "Install a Wolfram Language MCP server for Cursor:",
            "ExampleText",
            CellID -> 120840969
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "InstallMCPServer",
                  "[",
                  RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 22630592
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = True),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = False),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"MCPServerObject\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  InterpretationBox[
                                   RowBox[
                                    {
                                     TagBox["MCPServerObject", "SummaryHead"],
                                     "[",
                                     DynamicModuleBox[
                                      {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                      TemplateBox[
                                       {
                                        PaneSelectorBox[
                                         {
                                          False ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = True),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"WolframLanguage\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ],
                                          True ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = False),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"WolframLanguage\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     DynamicModuleBox[
                                                      {boxObj, cellObj},
                                                      TagBox[
                                                       TagBox[
                                                        ButtonBox[
                                                         TagBox[
                                                          "\"{\[Ellipsis]}\"",
                                                          BoxForm`Undeploy,
                                                          DefaultBaseStyle -> {Deployed -> False}
                                                         ],
                                                         ButtonFunction :> {
                                                          CopyToClipboard[
                                                           "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                          ],
                                                          NotebookDelete[cellObj],
                                                          FrontEndExecute[
                                                           FrontEnd`AttachCell[
                                                            boxObj,
                                                            Cell[
                                                             BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                            ],
                                                            {1, {Center, Bottom}},
                                                            {Center, Top},
                                                            "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                           ]
                                                          ]
                                                         },
                                                         Evaluator -> Automatic,
                                                         Appearance -> {
                                                          "Default" -> None,
                                                          "Hover" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Hover.9.png"
                                                           ],
                                                          "Pressed" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Pressed.9.png"
                                                           ]
                                                         },
                                                         BaseStyle -> { },
                                                         DefaultBaseStyle -> { },
                                                         BaselinePosition -> Baseline,
                                                         FrameMargins -> 2,
                                                         Method -> "Preemptive"
                                                        ],
                                                        EventHandlerTag[
                                                         {
                                                          "MouseEntered" :>
                                                           (cellObj = 
                                                            MathLink`CallFrontEnd[
                                                             FrontEnd`AttachCell[
                                                              boxObj,
                                                              Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                              {1, {Center, Bottom}},
                                                              {Center, Top},
                                                              "ClosingActions" -> {"ParentChanged"}
                                                             ]
                                                            ]),
                                                          "MouseExited" :> NotebookDelete[cellObj],
                                                          PassEventsDown -> True,
                                                          Method -> "Preemptive",
                                                          PassEventsUp -> True
                                                         }
                                                        ]
                                                       ],
                                                       MouseAppearanceTag["LinkHand"]
                                                      ],
                                                      Initialization :> (boxObj = EvaluationBox[]),
                                                      DynamicModuleValues :> { },
                                                      UnsavedVariables :> {boxObj, cellObj},
                                                      BaseStyle -> {Editable -> False}
                                                     ],
                                                     Deploy,
                                                     DefaultBaseStyle -> "Deploy"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     GridBox[
                                                      {
                                                       {
                                                        "\"WolframLanguageContext\"",
                                                        "\"WolframLanguageEvaluator\"",
                                                        "",
                                                        "",
                                                        ""
                                                       }
                                                      },
                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                      AutoDelete -> False,
                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                     ],
                                                     "Grid"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"BuiltIn\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ]
                                         },
                                         Dynamic[Typeset`open$$],
                                         ImageSize -> Automatic
                                        ]
                                       },
                                       "SummaryPanel"
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                     "]"
                                    }
                                   ],
                                   RickHennigan`MCPServer`MCPServerObject[
                                    <|
                                     "Name" -> "WolframLanguage",
                                     "Location" -> "BuiltIn",
                                     "Transport" -> "StandardInputOutput",
                                     "ServerVersion" -> "1.0.0",
                                     "ObjectVersion" -> 1,
                                     "LLMEvaluator" -> <|
                                      "Tools" -> {
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageContext",
                                         "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                         "Parameters" -> {
                                          "context" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                           "Required" -> True
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageEvaluator",
                                         "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "code" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "The Wolfram Language code to evaluate.",
                                           "Required" -> True
                                          |>,
                                          "timeConstraint" -> <|
                                           "Interpreter" -> "Integer",
                                           "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ]
                                      }
                                     |>
                                    |>
                                   ],
                                   Editable -> False,
                                   SelectWithContents -> True,
                                   Selectable -> False
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"InstallMCPServer\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "InstallMCPServer",
                  <|
                   "MessageTemplate" :>
                    MessageName[
                     RickHennigan`MCPServer`MCPServer,
                     "InstallMCPServerNamed"
                    ],
                   "MessageParameters" -> {"WolframLanguage", "Cursor"},
                   "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                   "MCPServerObject" ->
                    RickHennigan`MCPServer`MCPServerObject[
                     <|
                      "Name" -> "WolframLanguage",
                      "Location" -> "BuiltIn",
                      "Transport" -> "StandardInputOutput",
                      "ServerVersion" -> "1.0.0",
                      "ObjectVersion" -> 1,
                      "LLMEvaluator" -> <|
                       "Tools" -> {
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageContext",
                          "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                          "Parameters" -> {
                           "context" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                            "Required" -> True
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageEvaluator",
                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "code" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "The Wolfram Language code to evaluate.",
                            "Required" -> True
                           |>,
                           "timeConstraint" -> <|
                            "Interpreter" -> "Integer",
                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                            "Required" -> False
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ]
                       }
                      |>
                     |>
                    ]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 161372422
              ]
             },
             Open
            ]
           ],
           Cell[
            "The installed MCP server:",
            "ExampleText",
            CellID -> 90894920
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"%", "[", "\"MCPServerObject\"", "]"}]],
               "Input",
               CellLabel -> "In[2]:=",
               CellID -> 191369803
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["MCPServerObject", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = True),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GraphicsBox[
                             {
                              Thickness[0.005979],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {25.0, 97.147},
                                   {92.882, 165.03},
                                   {102.25, 174.4},
                                   {117.45, 174.4},
                                   {126.82, 165.03},
                                   {136.2, 155.66},
                                   {136.2, 140.46},
                                   {126.82, 131.09},
                                   {75.558, 79.823}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {
                                  {
                                   {0, 2, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0}
                                  }
                                 },
                                 {
                                  {
                                   {76.265, 80.53},
                                   {126.82, 131.09},
                                   {136.2, 140.46},
                                   {151.39, 140.46},
                                   {160.76, 131.09},
                                   {161.12, 130.73},
                                   {170.49, 121.36},
                                   {170.49, 106.17},
                                   {161.12, 96.794},
                                   {99.725, 35.4},
                                   {96.601, 32.276},
                                   {96.601, 27.211},
                                   {99.725, 24.087},
                                   {112.33, 11.48}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {109.85, 148.06},
                                   {59.648, 97.854},
                                   {50.276, 88.482},
                                   {50.276, 73.286},
                                   {59.648, 63.913},
                                   {69.021, 54.541},
                                   {84.217, 54.541},
                                   {93.589, 63.913},
                                   {143.79, 114.12}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ]
                             },
                             ImageSize -> 24
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"WolframLanguage\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = False),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GraphicsBox[
                             {
                              Thickness[0.005979],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {25.0, 97.147},
                                   {92.882, 165.03},
                                   {102.25, 174.4},
                                   {117.45, 174.4},
                                   {126.82, 165.03},
                                   {136.2, 155.66},
                                   {136.2, 140.46},
                                   {126.82, 131.09},
                                   {75.558, 79.823}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {
                                  {
                                   {0, 2, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0}
                                  }
                                 },
                                 {
                                  {
                                   {76.265, 80.53},
                                   {126.82, 131.09},
                                   {136.2, 140.46},
                                   {151.39, 140.46},
                                   {160.76, 131.09},
                                   {161.12, 130.73},
                                   {170.49, 121.36},
                                   {170.49, 106.17},
                                   {161.12, 96.794},
                                   {99.725, 35.4},
                                   {96.601, 32.276},
                                   {96.601, 27.211},
                                   {99.725, 24.087},
                                   {112.33, 11.48}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {109.85, 148.06},
                                   {59.648, 97.854},
                                   {50.276, 88.482},
                                   {50.276, 73.286},
                                   {59.648, 63.913},
                                   {69.021, 54.541},
                                   {84.217, 54.541},
                                   {93.589, 63.913},
                                   {143.79, 114.12}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ]
                             },
                             ImageSize -> 24
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"WolframLanguage\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   DynamicModuleBox[
                                    {boxObj, cellObj},
                                    TagBox[
                                     TagBox[
                                      ButtonBox[
                                       TagBox[
                                        "\"{\[Ellipsis]}\"",
                                        BoxForm`Undeploy,
                                        DefaultBaseStyle -> {Deployed -> False}
                                       ],
                                       ButtonFunction :> {
                                        CopyToClipboard[
                                         "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                        ],
                                        NotebookDelete[cellObj],
                                        FrontEndExecute[
                                         FrontEnd`AttachCell[
                                          boxObj,
                                          Cell[
                                           BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                          ],
                                          {1, {Center, Bottom}},
                                          {Center, Top},
                                          "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                         ]
                                        ]
                                       },
                                       Evaluator -> Automatic,
                                       Appearance -> {
                                        "Default" -> None,
                                        "Hover" ->
                                         FrontEnd`FileName[
                                          {"Typeset", "ClickToCopy"},
                                          "Hover.9.png"
                                         ],
                                        "Pressed" ->
                                         FrontEnd`FileName[
                                          {"Typeset", "ClickToCopy"},
                                          "Pressed.9.png"
                                         ]
                                       },
                                       BaseStyle -> { },
                                       DefaultBaseStyle -> { },
                                       BaselinePosition -> Baseline,
                                       FrameMargins -> 2,
                                       Method -> "Preemptive"
                                      ],
                                      EventHandlerTag[
                                       {
                                        "MouseEntered" :>
                                         (cellObj = 
                                          MathLink`CallFrontEnd[
                                           FrontEnd`AttachCell[
                                            boxObj,
                                            Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                            {1, {Center, Bottom}},
                                            {Center, Top},
                                            "ClosingActions" -> {"ParentChanged"}
                                           ]
                                          ]),
                                        "MouseExited" :> NotebookDelete[cellObj],
                                        PassEventsDown -> True,
                                        Method -> "Preemptive",
                                        PassEventsUp -> True
                                       }
                                      ]
                                     ],
                                     MouseAppearanceTag["LinkHand"]
                                    ],
                                    Initialization :> (boxObj = EvaluationBox[]),
                                    DynamicModuleValues :> { },
                                    UnsavedVariables :> {boxObj, cellObj},
                                    BaseStyle -> {Editable -> False}
                                   ],
                                   Deploy,
                                   DefaultBaseStyle -> "Deploy"
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   GridBox[
                                    {
                                     {
                                      "\"WolframLanguageContext\"",
                                      "\"WolframLanguageEvaluator\"",
                                      "",
                                      "",
                                      ""
                                     }
                                    },
                                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                    AutoDelete -> False,
                                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                   ],
                                   "Grid"
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"BuiltIn\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframLanguage",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[2]=",
               CellID -> 239382756
              ]
             },
             Open
            ]
           ],
           Cell[
            "The tools available to the server:",
            "ExampleText",
            CellID -> 75003197
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[RowBox[{"%", "[", "\"Tools\"", "]"}]],
               "Input",
               CellLabel -> "In[3]:=",
               CellID -> 3498306
              ],
              Cell[
               BoxData[
                RowBox[
                 {
                  "{",
                  RowBox[
                   {
                    InterpretationBox[
                     RowBox[
                      {
                       TagBox["LLMTool", "SummaryHead"],
                       "[",
                       DynamicModuleBox[
                        {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                        TemplateBox[
                         {
                          PaneSelectorBox[
                           {
                            False ->
                             GridBox[
                              {
                               {
                                PaneBox[
                                 ButtonBox[
                                  DynamicBox[
                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                  ],
                                  ButtonFunction :> (Typeset`open$$ = True),
                                  Appearance -> None,
                                  BaseStyle -> { },
                                  Evaluator -> Automatic,
                                  Method -> "Preemptive"
                                 ],
                                 Alignment -> {Center, Center},
                                 ImageSize ->
                                  Dynamic[
                                   {
                                    Automatic,
                                    Times[
                                     3.5,
                                     Times[
                                      CurrentValue["FontCapHeight"],
                                      AbsoluteCurrentValue[Magnification]^(-1)
                                     ]
                                    ]
                                   }
                                  ]
                                ],
                                GridBox[
                                 {
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["\"WolframLanguageContext\"", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "\"Uses semantic search to retrieve information from various sources that can be\\nused to help write Wolfram Language code. Always use this tool at the start of\"",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  }
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                 BaseStyle -> {
                                  ShowStringCharacters -> False,
                                  NumberMarks -> False,
                                  PrintPrecision -> 3,
                                  ShowSyntaxStyles -> False
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              BaselinePosition -> {1, 1}
                             ],
                            True ->
                             GridBox[
                              {
                               {
                                PaneBox[
                                 ButtonBox[
                                  DynamicBox[
                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                  ],
                                  ButtonFunction :> (Typeset`open$$ = False),
                                  Appearance -> None,
                                  BaseStyle -> { },
                                  Evaluator -> Automatic,
                                  Method -> "Preemptive"
                                 ],
                                 Alignment -> {Center, Center},
                                 ImageSize ->
                                  Dynamic[
                                   {
                                    Automatic,
                                    Times[
                                     3.5,
                                     Times[
                                      CurrentValue["FontCapHeight"],
                                      AbsoluteCurrentValue[Magnification]^(-1)
                                     ]
                                    ]
                                   }
                                  ]
                                ],
                                GridBox[
                                 {
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["\"WolframLanguageContext\"", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "\"Uses semantic search to retrieve information from various sources that can be\\nused to help write Wolfram Language code. Always use this tool at the start of\"",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TagBox[
                                       GridBox[
                                        {
                                         {
                                          TagBox[
                                           TooltipBox[
                                            "\"context\"",
                                            "\"\\\"Help\\\" description sent to the LLM: \\\"A detailed summary of what the user is trying to achieve or learn about.\\\"\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Function[
                                            Annotation[
                                             #1,
                                             "\"Help\" description sent to the LLM: \"A detailed summary of what the user is trying to achieve or learn about.\"",
                                             "Tooltip"
                                            ]
                                           ]
                                          ],
                                          TagBox[
                                           TooltipBox[
                                            TemplateBox[
                                             {
                                              "\"String\"",
                                              RowBox[{"Interpreter", "[", "\"String\"", "]"}]
                                             },
                                             "ClickToCopy2"
                                            ],
                                            "\"parameter interpreter\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Annotation[#1, "parameter interpreter", "Tooltip"] &
                                          ],
                                          "\"\""
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {{1, 1}, Axis},
                                        BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                       ],
                                       "Grid"
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  }
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                 BaseStyle -> {
                                  ShowStringCharacters -> False,
                                  NumberMarks -> False,
                                  PrintPrecision -> 3,
                                  ShowSyntaxStyles -> False
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              BaselinePosition -> {1, 1}
                             ]
                           },
                           Dynamic[Typeset`open$$],
                           ImageSize -> Automatic
                          ]
                         },
                         "SummaryPanel"
                        ],
                        DynamicModuleValues :> { }
                       ],
                       "]"
                      }
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     Editable -> False,
                     SelectWithContents -> True,
                     Selectable -> False
                    ],
                    ",",
                    InterpretationBox[
                     RowBox[
                      {
                       TagBox["LLMTool", "SummaryHead"],
                       "[",
                       DynamicModuleBox[
                        {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                        TemplateBox[
                         {
                          PaneSelectorBox[
                           {
                            False ->
                             GridBox[
                              {
                               {
                                PaneBox[
                                 ButtonBox[
                                  DynamicBox[
                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                  ],
                                  ButtonFunction :> (Typeset`open$$ = True),
                                  Appearance -> None,
                                  BaseStyle -> { },
                                  Evaluator -> Automatic,
                                  Method -> "Preemptive"
                                 ],
                                 Alignment -> {Center, Center},
                                 ImageSize ->
                                  Dynamic[
                                   {
                                    Automatic,
                                    Times[
                                     3.5,
                                     Times[
                                      CurrentValue["FontCapHeight"],
                                      AbsoluteCurrentValue[Magnification]^(-1)
                                     ]
                                    ]
                                   }
                                  ]
                                ],
                                GridBox[
                                 {
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["\"WolframLanguageEvaluator\"", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "\"Evaluate Wolfram Language code for the user in a separate kernel. The user does\\nnot automatically see the result. Do not ask permission to evaluate code. You mu\"",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  }
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                 BaseStyle -> {
                                  ShowStringCharacters -> False,
                                  NumberMarks -> False,
                                  PrintPrecision -> 3,
                                  ShowSyntaxStyles -> False
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              BaselinePosition -> {1, 1}
                             ],
                            True ->
                             GridBox[
                              {
                               {
                                PaneBox[
                                 ButtonBox[
                                  DynamicBox[
                                   FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                  ],
                                  ButtonFunction :> (Typeset`open$$ = False),
                                  Appearance -> None,
                                  BaseStyle -> { },
                                  Evaluator -> Automatic,
                                  Method -> "Preemptive"
                                 ],
                                 Alignment -> {Center, Center},
                                 ImageSize ->
                                  Dynamic[
                                   {
                                    Automatic,
                                    Times[
                                     3.5,
                                     Times[
                                      CurrentValue["FontCapHeight"],
                                      AbsoluteCurrentValue[Magnification]^(-1)
                                     ]
                                    ]
                                   }
                                  ]
                                ],
                                GridBox[
                                 {
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["\"WolframLanguageEvaluator\"", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "\"Evaluate Wolfram Language code for the user in a separate kernel. The user does\\nnot automatically see the result. Do not ask permission to evaluate code. You mu\"",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      "RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage",
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TagBox[
                                       GridBox[
                                        {
                                         {
                                          TagBox[
                                           TooltipBox[
                                            "\"code\"",
                                            "\"\\\"Help\\\" description sent to the LLM: \\\"The Wolfram Language code to evaluate.\\\"\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Function[
                                            Annotation[
                                             #1,
                                             "\"Help\" description sent to the LLM: \"The Wolfram Language code to evaluate.\"",
                                             "Tooltip"
                                            ]
                                           ]
                                          ],
                                          TagBox[
                                           TooltipBox[
                                            TemplateBox[
                                             {
                                              "\"String\"",
                                              RowBox[{"Interpreter", "[", "\"String\"", "]"}]
                                             },
                                             "ClickToCopy2"
                                            ],
                                            "\"parameter interpreter\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Annotation[#1, "parameter interpreter", "Tooltip"] &
                                          ],
                                          "\"\""
                                         },
                                         {
                                          TagBox[
                                           TooltipBox[
                                            "\"timeConstraint\"",
                                            "\"\\\"Help\\\" description sent to the LLM: \\\"The time constraint for the evaluation (default is 60 seconds).\\\"\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Function[
                                            Annotation[
                                             #1,
                                             "\"Help\" description sent to the LLM: \"The time constraint for the evaluation (default is 60 seconds).\"",
                                             "Tooltip"
                                            ]
                                           ]
                                          ],
                                          TagBox[
                                           TooltipBox[
                                            TemplateBox[
                                             {
                                              "\"Integer\"",
                                              RowBox[{"Interpreter", "[", "\"Integer\"", "]"}]
                                             },
                                             "ClickToCopy2"
                                            ],
                                            "\"parameter interpreter\"",
                                            TooltipStyle -> "TextStyling"
                                           ],
                                           Annotation[#1, "parameter interpreter", "Tooltip"] &
                                          ],
                                          "\"(optional)\""
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {{1, 1}, Axis},
                                        BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                       ],
                                       "Grid"
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  }
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                 GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                 BaseStyle -> {
                                  ShowStringCharacters -> False,
                                  NumberMarks -> False,
                                  PrintPrecision -> 3,
                                  ShowSyntaxStyles -> False
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              BaselinePosition -> {1, 1}
                             ]
                           },
                           Dynamic[Typeset`open$$],
                           ImageSize -> Automatic
                          ]
                         },
                         "SummaryPanel"
                        ],
                        DynamicModuleValues :> { }
                       ],
                       "]"
                      }
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     Editable -> False,
                     SelectWithContents -> True,
                     Selectable -> False
                    ]
                   }
                  ],
                  "}"
                 }
                ]
               ],
               "Output",
               CellLabel -> "Out[3]=",
               CellID -> 617071689
              ]
             },
             Open
            ]
           ],
           Cell["Uninstall:", "ExampleText", CellID -> 89790],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "UninstallMCPServer",
                  "[",
                  RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[4]:=",
               CellID -> 75436074
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = True),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = False),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"MCPServerObject\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  InterpretationBox[
                                   RowBox[
                                    {
                                     TagBox["MCPServerObject", "SummaryHead"],
                                     "[",
                                     DynamicModuleBox[
                                      {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                      TemplateBox[
                                       {
                                        PaneSelectorBox[
                                         {
                                          False ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = True),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"WolframLanguage\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ],
                                          True ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = False),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"WolframLanguage\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     DynamicModuleBox[
                                                      {boxObj, cellObj},
                                                      TagBox[
                                                       TagBox[
                                                        ButtonBox[
                                                         TagBox[
                                                          "\"{\[Ellipsis]}\"",
                                                          BoxForm`Undeploy,
                                                          DefaultBaseStyle -> {Deployed -> False}
                                                         ],
                                                         ButtonFunction :> {
                                                          CopyToClipboard[
                                                           "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                          ],
                                                          NotebookDelete[cellObj],
                                                          FrontEndExecute[
                                                           FrontEnd`AttachCell[
                                                            boxObj,
                                                            Cell[
                                                             BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                            ],
                                                            {1, {Center, Bottom}},
                                                            {Center, Top},
                                                            "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                           ]
                                                          ]
                                                         },
                                                         Evaluator -> Automatic,
                                                         Appearance -> {
                                                          "Default" -> None,
                                                          "Hover" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Hover.9.png"
                                                           ],
                                                          "Pressed" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Pressed.9.png"
                                                           ]
                                                         },
                                                         BaseStyle -> { },
                                                         DefaultBaseStyle -> { },
                                                         BaselinePosition -> Baseline,
                                                         FrameMargins -> 2,
                                                         Method -> "Preemptive"
                                                        ],
                                                        EventHandlerTag[
                                                         {
                                                          "MouseEntered" :>
                                                           (cellObj = 
                                                            MathLink`CallFrontEnd[
                                                             FrontEnd`AttachCell[
                                                              boxObj,
                                                              Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                              {1, {Center, Bottom}},
                                                              {Center, Top},
                                                              "ClosingActions" -> {"ParentChanged"}
                                                             ]
                                                            ]),
                                                          "MouseExited" :> NotebookDelete[cellObj],
                                                          PassEventsDown -> True,
                                                          Method -> "Preemptive",
                                                          PassEventsUp -> True
                                                         }
                                                        ]
                                                       ],
                                                       MouseAppearanceTag["LinkHand"]
                                                      ],
                                                      Initialization :> (boxObj = EvaluationBox[]),
                                                      DynamicModuleValues :> { },
                                                      UnsavedVariables :> {boxObj, cellObj},
                                                      BaseStyle -> {Editable -> False}
                                                     ],
                                                     Deploy,
                                                     DefaultBaseStyle -> "Deploy"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     GridBox[
                                                      {
                                                       {
                                                        "\"WolframLanguageContext\"",
                                                        "\"WolframLanguageEvaluator\"",
                                                        "",
                                                        "",
                                                        ""
                                                       }
                                                      },
                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                      AutoDelete -> False,
                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                     ],
                                                     "Grid"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"BuiltIn\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ]
                                         },
                                         Dynamic[Typeset`open$$],
                                         ImageSize -> Automatic
                                        ]
                                       },
                                       "SummaryPanel"
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                     "]"
                                    }
                                   ],
                                   RickHennigan`MCPServer`MCPServerObject[
                                    <|
                                     "Name" -> "WolframLanguage",
                                     "Location" -> "BuiltIn",
                                     "Transport" -> "StandardInputOutput",
                                     "ServerVersion" -> "1.0.0",
                                     "ObjectVersion" -> 1,
                                     "LLMEvaluator" -> <|
                                      "Tools" -> {
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageContext",
                                         "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                         "Parameters" -> {
                                          "context" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                           "Required" -> True
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageEvaluator",
                                         "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "code" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "The Wolfram Language code to evaluate.",
                                           "Required" -> True
                                          |>,
                                          "timeConstraint" -> <|
                                           "Interpreter" -> "Integer",
                                           "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ]
                                      }
                                     |>
                                    |>
                                   ],
                                   Editable -> False,
                                   SelectWithContents -> True,
                                   Selectable -> False
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "UninstallMCPServer",
                  <|
                   "MessageTemplate" :>
                    MessageName[
                     RickHennigan`MCPServer`MCPServer,
                     "UninstallMCPServerNamed"
                    ],
                   "MessageParameters" -> {"WolframLanguage", "Cursor"},
                   "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                   "MCPServerObject" ->
                    RickHennigan`MCPServer`MCPServerObject[
                     <|
                      "Name" -> "WolframLanguage",
                      "Location" -> "BuiltIn",
                      "Transport" -> "StandardInputOutput",
                      "ServerVersion" -> "1.0.0",
                      "ObjectVersion" -> 1,
                      "LLMEvaluator" -> <|
                       "Tools" -> {
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageContext",
                          "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                          "Parameters" -> {
                           "context" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                            "Required" -> True
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageEvaluator",
                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "code" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "The Wolfram Language code to evaluate.",
                            "Required" -> True
                           |>,
                           "timeConstraint" -> <|
                            "Interpreter" -> "Integer",
                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                            "Required" -> False
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ]
                       }
                      |>
                     |>
                    ]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[4]=",
               CellID -> 444785425
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             InterpretationBox[
              Cell["\t", "ExampleDelimiter"],
              $Line = 0;
             ]
            ],
            "ExampleDelimiter",
            CellID -> 222750794
           ],
           Cell[
            TextData[
             {
              "Install a custom MCP server defined by an ",
              Cell[
               BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
               "InlineFormula"
              ],
              ":"
             }
            ],
            "ExampleText",
            CellID -> 308124308
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "config",
                  "=",
                  RowBox[
                   {
                    "LLMConfiguration",
                    "[",
                    RowBox[
                     {
                      "<|",
                      RowBox[
                       {
                        "\"Tools\"",
                        "->",
                        RowBox[
                         {
                          "{",
                          RowBox[
                           {
                            "LLMTool",
                            "[",
                            RowBox[
                             {
                              "\"PrimeFinder\"",
                              ",",
                              RowBox[{"{", RowBox[{"\"n\"", "->", "\"Integer\""}], "}"}],
                              ",",
                              RowBox[{RowBox[{"Prime", "[", "#n", "]"}], "&"}]
                             }
                            ],
                            "]"
                           }
                          ],
                          "}"
                         }
                        ]
                       }
                      ],
                      "|>"
                     }
                    ],
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 76109352
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["LLMConfiguration", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = True),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Model: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["Automatic", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = False),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Model: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["Automatic", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Tools: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   GridBox[
                                    {
                                     {
                                      TemplateBox[
                                       {
                                        "\"PrimeFinder\"",
                                        InterpretationBox[
                                         RowBox[
                                          {
                                           TagBox["LLMTool", "SummaryHead"],
                                           "[",
                                           DynamicModuleBox[
                                            {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                            TemplateBox[
                                             {
                                              PaneSelectorBox[
                                               {
                                                False ->
                                                 GridBox[
                                                  {
                                                   {
                                                    PaneBox[
                                                     ButtonBox[
                                                      DynamicBox[
                                                       FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                      ],
                                                      ButtonFunction :> (Typeset`open$$ = True),
                                                      Appearance -> None,
                                                      BaseStyle -> { },
                                                      Evaluator -> Automatic,
                                                      Method -> "Preemptive"
                                                     ],
                                                     Alignment -> {Center, Center},
                                                     ImageSize ->
                                                      Dynamic[
                                                       {
                                                        Automatic,
                                                        Times[
                                                         3.5,
                                                         Times[
                                                          CurrentValue["FontCapHeight"],
                                                          AbsoluteCurrentValue[Magnification]^(-1)
                                                         ]
                                                        ]
                                                       }
                                                      ]
                                                    ],
                                                    GridBox[
                                                     {
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox["\"PrimeFinder\"", "SummaryItem"]
                                                        }
                                                       ]
                                                      },
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox[
                                                          TagBox[
                                                           TooltipBox[
                                                            "None",
                                                            "\"A description would help the LLM figure out tool usage and increase the call sucess odds.\"",
                                                            TooltipStyle -> "TextStyling"
                                                           ],
                                                           Function[
                                                            Annotation[
                                                             #1,
                                                             "A description would help the LLM figure out tool usage and increase the call sucess odds.",
                                                             "Tooltip"
                                                            ]
                                                           ]
                                                          ],
                                                          "SummaryItem"
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     },
                                                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                     AutoDelete -> False,
                                                     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                     GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                     BaseStyle -> {
                                                      ShowStringCharacters -> False,
                                                      NumberMarks -> False,
                                                      PrintPrecision -> 3,
                                                      ShowSyntaxStyles -> False
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  BaselinePosition -> {1, 1}
                                                 ],
                                                True ->
                                                 GridBox[
                                                  {
                                                   {
                                                    PaneBox[
                                                     ButtonBox[
                                                      DynamicBox[
                                                       FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                      ],
                                                      ButtonFunction :> (Typeset`open$$ = False),
                                                      Appearance -> None,
                                                      BaseStyle -> { },
                                                      Evaluator -> Automatic,
                                                      Method -> "Preemptive"
                                                     ],
                                                     Alignment -> {Center, Center},
                                                     ImageSize ->
                                                      Dynamic[
                                                       {
                                                        Automatic,
                                                        Times[
                                                         3.5,
                                                         Times[
                                                          CurrentValue["FontCapHeight"],
                                                          AbsoluteCurrentValue[Magnification]^(-1)
                                                         ]
                                                        ]
                                                       }
                                                      ]
                                                    ],
                                                    GridBox[
                                                     {
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox["\"PrimeFinder\"", "SummaryItem"]
                                                        }
                                                       ]
                                                      },
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox[
                                                          TagBox[
                                                           TooltipBox[
                                                            "None",
                                                            "\"A description would help the LLM figure out tool usage and increase the call sucess odds.\"",
                                                            TooltipStyle -> "TextStyling"
                                                           ],
                                                           Function[
                                                            Annotation[
                                                             #1,
                                                             "A description would help the LLM figure out tool usage and increase the call sucess odds.",
                                                             "Tooltip"
                                                            ]
                                                           ]
                                                          ],
                                                          "SummaryItem"
                                                         ]
                                                        }
                                                       ]
                                                      },
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox[
                                                          RowBox[{RowBox[{"Prime", "[", "#n", "]"}], "&"}],
                                                          "SummaryItem"
                                                         ]
                                                        }
                                                       ]
                                                      },
                                                      {
                                                       RowBox[
                                                        {
                                                         TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                                         "\[InvisibleSpace]",
                                                         TagBox[
                                                          TagBox[
                                                           GridBox[
                                                            {
                                                             {
                                                              "\"n\"",
                                                              TagBox[
                                                               TooltipBox[
                                                                TemplateBox[
                                                                 {
                                                                  "\"Integer\"",
                                                                  RowBox[{"Interpreter", "[", "\"Integer\"", "]"}]
                                                                 },
                                                                 "ClickToCopy2"
                                                                ],
                                                                "\"parameter interpreter\"",
                                                                TooltipStyle -> "TextStyling"
                                                               ],
                                                               Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                              ],
                                                              "\"\""
                                                             }
                                                            },
                                                            GridBoxAlignment -> {"Columns" -> {{Left}}},
                                                            AutoDelete -> False,
                                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                            BaselinePosition -> {{1, 1}, Axis},
                                                            BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                                           ],
                                                           "Grid"
                                                          ],
                                                          "SummaryItem"
                                                         ]
                                                        }
                                                       ]
                                                      }
                                                     },
                                                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                     AutoDelete -> False,
                                                     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                     GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                     BaseStyle -> {
                                                      ShowStringCharacters -> False,
                                                      NumberMarks -> False,
                                                      PrintPrecision -> 3,
                                                      ShowSyntaxStyles -> False
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  BaselinePosition -> {1, 1}
                                                 ]
                                               },
                                               Dynamic[Typeset`open$$],
                                               ImageSize -> Automatic
                                              ]
                                             },
                                             "SummaryPanel"
                                            ],
                                            DynamicModuleValues :> { }
                                           ],
                                           "]"
                                          }
                                         ],
                                         LLMTool[
                                          <|
                                           "Name" -> "PrimeFinder",
                                           "Description" -> "",
                                           "Parameters" -> {
                                            "n" -> <|
                                             "Interpreter" -> "Integer",
                                             "Help" -> Missing["NotSpecified"],
                                             "Required" -> True
                                            |>
                                           },
                                           "Function" -> (Prime[#n] &),
                                           "Options" -> { },
                                           "LLMPacletVersion" -> "1.6.10"
                                          |>
                                         ],
                                         Selectable -> False,
                                         Editable -> False,
                                         SelectWithContents -> True
                                        ]
                                       },
                                       "ClickToCopy2"
                                      ]
                                     }
                                    },
                                    GridBoxAlignment -> {"Columns" -> {{Left}}},
                                    BaselinePosition -> {{1, 1}, Axis},
                                    BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}},
                                    DefaultBaseStyle -> "Column",
                                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                   ],
                                   "Column"
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 LLMConfiguration[
                  <|
                   "Model" -> Automatic,
                   "MaxTokens" -> Automatic,
                   "Temperature" -> Automatic,
                   "TotalProbabilityCutoff" -> Automatic,
                   "Prompts" -> Automatic,
                   "PromptDelimiter" -> Automatic,
                   "StopTokens" -> Automatic,
                   "ToolMethod" -> Automatic,
                   "Tools" -> {
                    LLMTool[
                     <|
                      "Name" -> "PrimeFinder",
                      "Description" -> "",
                      "Parameters" -> {
                       "n" -> <|
                        "Interpreter" -> "Integer",
                        "Help" -> Missing["NotSpecified"],
                        "Required" -> True
                       |>
                      },
                      "Function" -> (Prime[#n] &),
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ]
                   },
                   "LLMPacletVersion" -> "1.6.10"
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 487117364
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "server",
                  "=",
                  RowBox[
                   {
                    "CreateMCPServer",
                    "[",
                    RowBox[{"\"My MCP Server\"", ",", "config"}],
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[2]:=",
               CellID -> 21747423
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["MCPServerObject", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = True),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GraphicsBox[
                             {
                              Thickness[0.005979],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {25.0, 97.147},
                                   {92.882, 165.03},
                                   {102.25, 174.4},
                                   {117.45, 174.4},
                                   {126.82, 165.03},
                                   {136.2, 155.66},
                                   {136.2, 140.46},
                                   {126.82, 131.09},
                                   {75.558, 79.823}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {
                                  {
                                   {0, 2, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0}
                                  }
                                 },
                                 {
                                  {
                                   {76.265, 80.53},
                                   {126.82, 131.09},
                                   {136.2, 140.46},
                                   {151.39, 140.46},
                                   {160.76, 131.09},
                                   {161.12, 130.73},
                                   {170.49, 121.36},
                                   {170.49, 106.17},
                                   {161.12, 96.794},
                                   {99.725, 35.4},
                                   {96.601, 32.276},
                                   {96.601, 27.211},
                                   {99.725, 24.087},
                                   {112.33, 11.48}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {109.85, 148.06},
                                   {59.648, 97.854},
                                   {50.276, 88.482},
                                   {50.276, 73.286},
                                   {59.648, 63.913},
                                   {69.021, 54.541},
                                   {84.217, 54.541},
                                   {93.589, 63.913},
                                   {143.79, 114.12}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ]
                             },
                             ImageSize -> 24
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"My MCP Server\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              ButtonFunction :> (Typeset`open$$ = False),
                              Appearance -> None,
                              BaseStyle -> { },
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            GraphicsBox[
                             {
                              Thickness[0.005979],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {25.0, 97.147},
                                   {92.882, 165.03},
                                   {102.25, 174.4},
                                   {117.45, 174.4},
                                   {126.82, 165.03},
                                   {136.2, 155.66},
                                   {136.2, 140.46},
                                   {126.82, 131.09},
                                   {75.558, 79.823}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {
                                  {
                                   {0, 2, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0},
                                   {1, 3, 3},
                                   {0, 1, 0}
                                  }
                                 },
                                 {
                                  {
                                   {76.265, 80.53},
                                   {126.82, 131.09},
                                   {136.2, 140.46},
                                   {151.39, 140.46},
                                   {160.76, 131.09},
                                   {161.12, 130.73},
                                   {170.49, 121.36},
                                   {170.49, 106.17},
                                   {161.12, 96.794},
                                   {99.725, 35.4},
                                   {96.601, 32.276},
                                   {96.601, 27.211},
                                   {99.725, 24.087},
                                   {112.33, 11.48}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ],
                              StyleBox[
                               {
                                JoinedCurveBox[
                                 {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                 {
                                  {
                                   {109.85, 148.06},
                                   {59.648, 97.854},
                                   {50.276, 88.482},
                                   {50.276, 73.286},
                                   {59.648, 63.913},
                                   {69.021, 54.541},
                                   {84.217, 54.541},
                                   {93.589, 63.913},
                                   {143.79, 114.12}
                                  }
                                 },
                                 CurveClosed -> {0}
                                ]
                               },
                               {
                                CapForm["Round"],
                                JoinForm[{"Miter", 1.0}],
                                Thickness[0.071749]
                               },
                               StripOnInput -> False
                              ]
                             },
                             ImageSize -> 24
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"My MCP Server\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   DynamicModuleBox[
                                    {boxObj, cellObj},
                                    TagBox[
                                     TagBox[
                                      ButtonBox[
                                       TagBox[
                                        "\"{\[Ellipsis]}\"",
                                        BoxForm`Undeploy,
                                        DefaultBaseStyle -> {Deployed -> False}
                                       ],
                                       ButtonFunction :> {
                                        CopyToClipboard[
                                         "{\n\t\"mcpServers\":{\n\t\t\"My MCP Server\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"My MCP Server\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                        ],
                                        NotebookDelete[cellObj],
                                        FrontEndExecute[
                                         FrontEnd`AttachCell[
                                          boxObj,
                                          Cell[
                                           BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                          ],
                                          {1, {Center, Bottom}},
                                          {Center, Top},
                                          "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                         ]
                                        ]
                                       },
                                       Evaluator -> Automatic,
                                       Appearance -> {
                                        "Default" -> None,
                                        "Hover" ->
                                         FrontEnd`FileName[
                                          {"Typeset", "ClickToCopy"},
                                          "Hover.9.png"
                                         ],
                                        "Pressed" ->
                                         FrontEnd`FileName[
                                          {"Typeset", "ClickToCopy"},
                                          "Pressed.9.png"
                                         ]
                                       },
                                       BaseStyle -> { },
                                       DefaultBaseStyle -> { },
                                       BaselinePosition -> Baseline,
                                       FrameMargins -> 2,
                                       Method -> "Preemptive"
                                      ],
                                      EventHandlerTag[
                                       {
                                        "MouseEntered" :>
                                         (cellObj = 
                                          MathLink`CallFrontEnd[
                                           FrontEnd`AttachCell[
                                            boxObj,
                                            Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                            {1, {Center, Bottom}},
                                            {Center, Top},
                                            "ClosingActions" -> {"ParentChanged"}
                                           ]
                                          ]),
                                        "MouseExited" :> NotebookDelete[cellObj],
                                        PassEventsDown -> True,
                                        Method -> "Preemptive",
                                        PassEventsUp -> True
                                       }
                                      ]
                                     ],
                                     MouseAppearanceTag["LinkHand"]
                                    ],
                                    Initialization :> (boxObj = EvaluationBox[]),
                                    DynamicModuleValues :> { },
                                    UnsavedVariables :> {boxObj, cellObj},
                                    BaseStyle -> {Editable -> False}
                                   ],
                                   Deploy,
                                   DefaultBaseStyle -> "Deploy"
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  TagBox[
                                   GridBox[
                                    {{"\"PrimeFinder\"", "", "", "", ""}},
                                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                    AutoDelete -> False,
                                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                   ],
                                   "Grid"
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\\\\ApplicationData\\\\RickHennigan\\\\MCPServer\\\\Servers\\\\My%20MCP%20Server\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             AutoDelete -> False,
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          BaselinePosition -> {1, 1}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "My MCP Server",
                   "LLMEvaluator" -> <|
                    "Model" -> Automatic,
                    "MaxTokens" -> Automatic,
                    "Temperature" -> Automatic,
                    "TotalProbabilityCutoff" -> Automatic,
                    "Prompts" -> Automatic,
                    "PromptDelimiter" -> Automatic,
                    "StopTokens" -> Automatic,
                    "ToolMethod" -> Automatic,
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "PrimeFinder",
                       "Description" -> "",
                       "Parameters" -> {
                        "n" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> Missing["NotSpecified"],
                         "Required" -> True
                        |>
                       },
                       "Function" -> (Prime[#n] &),
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    },
                    "LLMPacletVersion" -> "1.6.10"
                   |>,
                   "Location" ->
                    File[
                     "C:\\Users\\rhennigan\\AppData\\Roaming\\Wolfram\\ApplicationData\\RickHennigan\\MCPServer\\Servers\\My%20MCP%20Server"
                    ],
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[2]=",
               CellID -> 442285411
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "InstallMCPServer",
                  "[",
                  RowBox[{"\"ClaudeDesktop\"", ",", "server"}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[3]:=",
               CellID -> 11491438
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = True),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"My MCP Server\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = False),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"My MCP Server\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"MCPServerObject\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  InterpretationBox[
                                   RowBox[
                                    {
                                     TagBox["MCPServerObject", "SummaryHead"],
                                     "[",
                                     DynamicModuleBox[
                                      {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                      TemplateBox[
                                       {
                                        PaneSelectorBox[
                                         {
                                          False ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = True),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"My MCP Server\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ],
                                          True ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = False),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"My MCP Server\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     DynamicModuleBox[
                                                      {boxObj, cellObj},
                                                      TagBox[
                                                       TagBox[
                                                        ButtonBox[
                                                         TagBox[
                                                          "\"{\[Ellipsis]}\"",
                                                          BoxForm`Undeploy,
                                                          DefaultBaseStyle -> {Deployed -> False}
                                                         ],
                                                         ButtonFunction :> {
                                                          CopyToClipboard[
                                                           "{\n\t\"mcpServers\":{\n\t\t\"My MCP Server\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"My MCP Server\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                          ],
                                                          NotebookDelete[cellObj],
                                                          FrontEndExecute[
                                                           FrontEnd`AttachCell[
                                                            boxObj,
                                                            Cell[
                                                             BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                            ],
                                                            {1, {Center, Bottom}},
                                                            {Center, Top},
                                                            "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                           ]
                                                          ]
                                                         },
                                                         Evaluator -> Automatic,
                                                         Appearance -> {
                                                          "Default" -> None,
                                                          "Hover" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Hover.9.png"
                                                           ],
                                                          "Pressed" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Pressed.9.png"
                                                           ]
                                                         },
                                                         BaseStyle -> { },
                                                         DefaultBaseStyle -> { },
                                                         BaselinePosition -> Baseline,
                                                         FrameMargins -> 2,
                                                         Method -> "Preemptive"
                                                        ],
                                                        EventHandlerTag[
                                                         {
                                                          "MouseEntered" :>
                                                           (cellObj = 
                                                            MathLink`CallFrontEnd[
                                                             FrontEnd`AttachCell[
                                                              boxObj,
                                                              Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                              {1, {Center, Bottom}},
                                                              {Center, Top},
                                                              "ClosingActions" -> {"ParentChanged"}
                                                             ]
                                                            ]),
                                                          "MouseExited" :> NotebookDelete[cellObj],
                                                          PassEventsDown -> True,
                                                          Method -> "Preemptive",
                                                          PassEventsUp -> True
                                                         }
                                                        ]
                                                       ],
                                                       MouseAppearanceTag["LinkHand"]
                                                      ],
                                                      Initialization :> (boxObj = EvaluationBox[]),
                                                      DynamicModuleValues :> { },
                                                      UnsavedVariables :> {boxObj, cellObj},
                                                      BaseStyle -> {Editable -> False}
                                                     ],
                                                     Deploy,
                                                     DefaultBaseStyle -> "Deploy"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     GridBox[
                                                      {{"\"PrimeFinder\"", "", "", "", ""}},
                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                      AutoDelete -> False,
                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                     ],
                                                     "Grid"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    RowBox[
                                                     {
                                                      "File",
                                                      "[",
                                                      TemplateBox[
                                                       {
                                                        "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\\\\ApplicationData\\\\RickHennigan\\\\MCPServer\\\\Servers\\\\My%20MCP%20Server\""
                                                       },
                                                       "FileArgument"
                                                      ],
                                                      "]"
                                                     }
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ]
                                         },
                                         Dynamic[Typeset`open$$],
                                         ImageSize -> Automatic
                                        ]
                                       },
                                       "SummaryPanel"
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                     "]"
                                    }
                                   ],
                                   RickHennigan`MCPServer`MCPServerObject[
                                    <|
                                     "Name" -> "My MCP Server",
                                     "LLMEvaluator" -> <|
                                      "Model" -> Automatic,
                                      "MaxTokens" -> Automatic,
                                      "Temperature" -> Automatic,
                                      "TotalProbabilityCutoff" -> Automatic,
                                      "Prompts" -> Automatic,
                                      "PromptDelimiter" -> Automatic,
                                      "StopTokens" -> Automatic,
                                      "ToolMethod" -> Automatic,
                                      "Tools" -> {
                                       LLMTool[
                                        <|
                                         "Name" -> "PrimeFinder",
                                         "Description" -> "",
                                         "Parameters" -> {
                                          "n" -> <|
                                           "Interpreter" -> "Integer",
                                           "Help" -> Missing["NotSpecified"],
                                           "Required" -> True
                                          |>
                                         },
                                         "Function" -> (Prime[#n] &),
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ]
                                      },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>,
                                     "Location" ->
                                      File[
                                       "C:\\Users\\rhennigan\\AppData\\Roaming\\Wolfram\\ApplicationData\\RickHennigan\\MCPServer\\Servers\\My%20MCP%20Server"
                                      ],
                                     "Transport" -> "StandardInputOutput",
                                     "ServerVersion" -> "1.0.0",
                                     "ObjectVersion" -> 1
                                    |>
                                   ],
                                   Editable -> False,
                                   SelectWithContents -> True,
                                   Selectable -> False
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"InstallMCPServer\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "InstallMCPServer",
                  <|
                   "MessageTemplate" :>
                    MessageName[
                     RickHennigan`MCPServer`MCPServer,
                     "InstallMCPServerNamed"
                    ],
                   "MessageParameters" -> {"My MCP Server", "Claude Desktop"},
                   "Location" ->
                    File[
                     "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                    ],
                   "MCPServerObject" ->
                    RickHennigan`MCPServer`MCPServerObject[
                     <|
                      "Name" -> "My MCP Server",
                      "LLMEvaluator" -> <|
                       "Model" -> Automatic,
                       "MaxTokens" -> Automatic,
                       "Temperature" -> Automatic,
                       "TotalProbabilityCutoff" -> Automatic,
                       "Prompts" -> Automatic,
                       "PromptDelimiter" -> Automatic,
                       "StopTokens" -> Automatic,
                       "ToolMethod" -> Automatic,
                       "Tools" -> {
                        LLMTool[
                         <|
                          "Name" -> "PrimeFinder",
                          "Description" -> "",
                          "Parameters" -> {
                           "n" -> <|
                            "Interpreter" -> "Integer",
                            "Help" -> Missing["NotSpecified"],
                            "Required" -> True
                           |>
                          },
                          "Function" -> (Prime[#n] &),
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ]
                       },
                       "LLMPacletVersion" -> "1.6.10"
                      |>,
                      "Location" ->
                       File[
                        "C:\\Users\\rhennigan\\AppData\\Roaming\\Wolfram\\ApplicationData\\RickHennigan\\MCPServer\\Servers\\My%20MCP%20Server"
                       ],
                      "Transport" -> "StandardInputOutput",
                      "ServerVersion" -> "1.0.0",
                      "ObjectVersion" -> 1
                     |>
                    ]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[3]=",
               CellID -> 9021714
              ]
             },
             Open
            ]
           ],
           Cell[
            "Deleting an MCP server automatically uninstalls it:",
            "ExampleText",
            CellID -> 10980744
           ],
           Cell[
            BoxData[RowBox[{"DeleteObject", "[", "server", "]"}]],
            "Input",
            CellLabel -> "In[4]:=",
            CellID -> 613836516
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Generalizations & Extensions", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 29220225
        ],
        Cell[
         "Using a named application for the first argument is a convenient shortcut for specifying the proper configuration file:",
         "ExampleText",
         CellID -> 94695596
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "installed",
               "=",
               RowBox[
                {
                 "InstallMCPServer",
                 "[",
                 RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 906504493
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {
                                                     "\"WolframLanguageContext\"",
                                                     "\"WolframLanguageEvaluator\"",
                                                     "",
                                                     "",
                                                     ""
                                                    }
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframLanguage",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageContext",
                                      "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageEvaluator",
                                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "code" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "The Wolfram Language code to evaluate.",
                                        "Required" -> True
                                       |>,
                                       "timeConstraint" -> <|
                                        "Interpreter" -> "Integer",
                                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"InstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "InstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "InstallMCPServerNamed"
                 ],
                "MessageParameters" -> {"WolframLanguage", "Cursor"},
                "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframLanguage",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 710664039
           ]
          },
          Open
         ]
        ],
        Cell[
         "Using a named application chooses an appropriate configuration file based on the current operating system:",
         "ExampleText",
         CellID -> 346682070
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "location",
               "=",
               RowBox[{"installed", "[", "\"Location\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 523030807
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "File",
               "[",
               TemplateBox[
                {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                "FileArgument"
               ],
               "]"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 353835081
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "UninstallMCPServer",
               "[",
               RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 392670233
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {
                                                     "\"WolframLanguageContext\"",
                                                     "\"WolframLanguageEvaluator\"",
                                                     "",
                                                     "",
                                                     ""
                                                    }
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframLanguage",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageContext",
                                      "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageEvaluator",
                                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "code" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "The Wolfram Language code to evaluate.",
                                        "Required" -> True
                                       |>,
                                       "timeConstraint" -> <|
                                        "Interpreter" -> "Integer",
                                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "UninstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "UninstallMCPServerNamed"
                 ],
                "MessageParameters" -> {"WolframLanguage", "Cursor"},
                "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframLanguage",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 284181525
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "This is equivalent to ",
           Cell[
            BoxData[
             RowBox[
              {
               ButtonBox[
                "InstallMCPServer",
                BaseStyle -> "Link",
                ButtonData -> "paclet:RickHennigan/MCPServer/ref/InstallMCPServer"
               ],
               "[",
               RowBox[{"\"Cursor\"", ",", " ", "\"WolframLanguage\""}],
               "]"
              }
             ]
            ],
            "InlineFormula"
           ],
           ":"
          }
         ],
         "ExampleText",
         CellID -> 1920962
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "InstallMCPServer",
               "[",
               RowBox[{"location", ",", "\"WolframLanguage\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:=",
            CellID -> 48037739
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframLanguage\\\".\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully installed MCP server \\\"WolframLanguage\\\".\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {
                                                     "\"WolframLanguageContext\"",
                                                     "\"WolframLanguageEvaluator\"",
                                                     "",
                                                     "",
                                                     ""
                                                    }
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframLanguage",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageContext",
                                      "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageEvaluator",
                                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "code" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "The Wolfram Language code to evaluate.",
                                        "Required" -> True
                                       |>,
                                       "timeConstraint" -> <|
                                        "Interpreter" -> "Integer",
                                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"InstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "InstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "InstallMCPServer"
                 ],
                "MessageParameters" -> {"WolframLanguage"},
                "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframLanguage",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[4]=",
            CellID -> 302307231
           ]
          },
          Open
         ]
        ],
        Cell[
         "View the configuration file:",
         "ExampleText",
         CellID -> 149072456
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"FilePrint", "[", "location", "]"}]],
            "Input",
            CellLabel -> "In[5]:=",
            CellID -> 335506767
           ],
           Cell[
            "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\",\n\t\t\t\t\"WOLFRAM_BASE\":\"C:\\\\ProgramData\\\\Wolfram\",\n\t\t\t\t\"WOLFRAM_USERBASE\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\",\n\t\t\t\t\"APPDATA\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\"\n\t\t\t}\n\t\t},\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\",\n\t\t\t\t\"WOLFRAM_BASE\":\"C:\\\\ProgramData\\\\Wolfram\",\n\t\t\t\t\"WOLFRAM_USERBASE\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\",\n\t\t\t\t\"APPDATA\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\"\n\t\t\t}\n\t\t}\n\t}\n}",
            "Print",
            CellLabel -> "During evaluation of In[5]:=",
            CellID -> 282062260
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData[
             ButtonBox[
              "UninstallMCPServer",
              BaseStyle -> "Link",
              ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
             ]
            ],
            "InlineFormula"
           ],
           " removes the appropriate entry:"
          }
         ],
         "ExampleText",
         CellID -> 42867279
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "UninstallMCPServer",
               "[",
               RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[6]:=",
            CellID -> 253990441
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Success", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         FrameBox[
                          StyleBox[
                           "\"\[Checkmark]\"",
                           StripOnInput -> False,
                           LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                           FontSize -> 25,
                           FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               "\"Successfully uninstalled MCP server \\\"WolframLanguage\\\" for Cursor.\"",
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[
                                {"\"MCPServerObject\"", "\": \""},
                                "RowDefault"
                               ],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox[
                               InterpretationBox[
                                RowBox[
                                 {
                                  TagBox["MCPServerObject", "SummaryHead"],
                                  "[",
                                  DynamicModuleBox[
                                   {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                   TemplateBox[
                                    {
                                     PaneSelectorBox[
                                      {
                                       False ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = True),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ],
                                       True ->
                                        GridBox[
                                         {
                                          {
                                           PaneBox[
                                            ButtonBox[
                                             DynamicBox[
                                              FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                             ],
                                             ButtonFunction :> (Typeset`open$$ = False),
                                             Appearance -> None,
                                             BaseStyle -> { },
                                             Evaluator -> Automatic,
                                             Method -> "Preemptive"
                                            ],
                                            Alignment -> {Center, Center},
                                            ImageSize ->
                                             Dynamic[
                                              {
                                               Automatic,
                                               Times[
                                                3.5,
                                                Times[
                                                 CurrentValue["FontCapHeight"],
                                                 AbsoluteCurrentValue[Magnification]^(-1)
                                                ]
                                               ]
                                              }
                                             ]
                                           ],
                                           GraphicsBox[
                                            {
                                             Thickness[0.005979],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {25.0, 97.147},
                                                  {92.882, 165.03},
                                                  {102.25, 174.4},
                                                  {117.45, 174.4},
                                                  {126.82, 165.03},
                                                  {136.2, 155.66},
                                                  {136.2, 140.46},
                                                  {126.82, 131.09},
                                                  {75.558, 79.823}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {
                                                 {
                                                  {0, 2, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0},
                                                  {1, 3, 3},
                                                  {0, 1, 0}
                                                 }
                                                },
                                                {
                                                 {
                                                  {76.265, 80.53},
                                                  {126.82, 131.09},
                                                  {136.2, 140.46},
                                                  {151.39, 140.46},
                                                  {160.76, 131.09},
                                                  {161.12, 130.73},
                                                  {170.49, 121.36},
                                                  {170.49, 106.17},
                                                  {161.12, 96.794},
                                                  {99.725, 35.4},
                                                  {96.601, 32.276},
                                                  {96.601, 27.211},
                                                  {99.725, 24.087},
                                                  {112.33, 11.48}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ],
                                             StyleBox[
                                              {
                                               JoinedCurveBox[
                                                {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                {
                                                 {
                                                  {109.85, 148.06},
                                                  {59.648, 97.854},
                                                  {50.276, 88.482},
                                                  {50.276, 73.286},
                                                  {59.648, 63.913},
                                                  {69.021, 54.541},
                                                  {84.217, 54.541},
                                                  {93.589, 63.913},
                                                  {143.79, 114.12}
                                                 }
                                                },
                                                CurveClosed -> {0}
                                               ]
                                              },
                                              {
                                               CapForm["Round"],
                                               JoinForm[{"Miter", 1.0}],
                                               Thickness[0.071749]
                                              },
                                              StripOnInput -> False
                                             ]
                                            },
                                            ImageSize -> 24
                                           ],
                                           GridBox[
                                            {
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"WolframLanguage\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  DynamicModuleBox[
                                                   {boxObj, cellObj},
                                                   TagBox[
                                                    TagBox[
                                                     ButtonBox[
                                                      TagBox[
                                                       "\"{\[Ellipsis]}\"",
                                                       BoxForm`Undeploy,
                                                       DefaultBaseStyle -> {Deployed -> False}
                                                      ],
                                                      ButtonFunction :> {
                                                       CopyToClipboard[
                                                        "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                       ],
                                                       NotebookDelete[cellObj],
                                                       FrontEndExecute[
                                                        FrontEnd`AttachCell[
                                                         boxObj,
                                                         Cell[
                                                          BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                         ],
                                                         {1, {Center, Bottom}},
                                                         {Center, Top},
                                                         "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                        ]
                                                       ]
                                                      },
                                                      Evaluator -> Automatic,
                                                      Appearance -> {
                                                       "Default" -> None,
                                                       "Hover" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Hover.9.png"
                                                        ],
                                                       "Pressed" ->
                                                        FrontEnd`FileName[
                                                         {"Typeset", "ClickToCopy"},
                                                         "Pressed.9.png"
                                                        ]
                                                      },
                                                      BaseStyle -> { },
                                                      DefaultBaseStyle -> { },
                                                      BaselinePosition -> Baseline,
                                                      FrameMargins -> 2,
                                                      Method -> "Preemptive"
                                                     ],
                                                     EventHandlerTag[
                                                      {
                                                       "MouseEntered" :>
                                                        (cellObj = 
                                                         MathLink`CallFrontEnd[
                                                          FrontEnd`AttachCell[
                                                           boxObj,
                                                           Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                           {1, {Center, Bottom}},
                                                           {Center, Top},
                                                           "ClosingActions" -> {"ParentChanged"}
                                                          ]
                                                         ]),
                                                       "MouseExited" :> NotebookDelete[cellObj],
                                                       PassEventsDown -> True,
                                                       Method -> "Preemptive",
                                                       PassEventsUp -> True
                                                      }
                                                     ]
                                                    ],
                                                    MouseAppearanceTag["LinkHand"]
                                                   ],
                                                   Initialization :> (boxObj = EvaluationBox[]),
                                                   DynamicModuleValues :> { },
                                                   UnsavedVariables :> {boxObj, cellObj},
                                                   BaseStyle -> {Editable -> False}
                                                  ],
                                                  Deploy,
                                                  DefaultBaseStyle -> "Deploy"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox[
                                                 TagBox[
                                                  GridBox[
                                                   {
                                                    {
                                                     "\"WolframLanguageContext\"",
                                                     "\"WolframLanguageEvaluator\"",
                                                     "",
                                                     "",
                                                     ""
                                                    }
                                                   },
                                                   GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                   AutoDelete -> False,
                                                   GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                  ],
                                                  "Grid"
                                                 ],
                                                 "SummaryItem"
                                                ]
                                               }
                                              ]
                                             },
                                             {
                                              RowBox[
                                               {
                                                TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                "\[InvisibleSpace]",
                                                TagBox["\"BuiltIn\"", "SummaryItem"]
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                            BaseStyle -> {
                                             ShowStringCharacters -> False,
                                             NumberMarks -> False,
                                             PrintPrecision -> 3,
                                             ShowSyntaxStyles -> False
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         BaselinePosition -> {1, 1}
                                        ]
                                      },
                                      Dynamic[Typeset`open$$],
                                      ImageSize -> Automatic
                                     ]
                                    },
                                    "SummaryPanel"
                                   ],
                                   DynamicModuleValues :> { }
                                  ],
                                  "]"
                                 }
                                ],
                                RickHennigan`MCPServer`MCPServerObject[
                                 <|
                                  "Name" -> "WolframLanguage",
                                  "Location" -> "BuiltIn",
                                  "Transport" -> "StandardInputOutput",
                                  "ServerVersion" -> "1.0.0",
                                  "ObjectVersion" -> 1,
                                  "LLMEvaluator" -> <|
                                   "Tools" -> {
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageContext",
                                      "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                      "Parameters" -> {
                                       "context" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                        "Required" -> True
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ],
                                    LLMTool[
                                     <|
                                      "Name" -> "WolframLanguageEvaluator",
                                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                      "Parameters" -> {
                                       "code" -> <|
                                        "Interpreter" -> "String",
                                        "Help" -> "The Wolfram Language code to evaluate.",
                                        "Required" -> True
                                       |>,
                                       "timeConstraint" -> <|
                                        "Interpreter" -> "Integer",
                                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                        "Required" -> False
                                       |>
                                      },
                                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                      "Options" -> { },
                                      "LLMPacletVersion" -> "1.6.10"
                                     |>
                                    ]
                                   }
                                  |>
                                 |>
                                ],
                                Editable -> False,
                                SelectWithContents -> True,
                                Selectable -> False
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox[
                               TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                               "SummaryItemAnnotation"
                              ],
                              "\[InvisibleSpace]",
                              TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Success[
               "UninstallMCPServer",
               <|
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`MCPServer,
                  "UninstallMCPServerNamed"
                 ],
                "MessageParameters" -> {"WolframLanguage", "Cursor"},
                "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                "MCPServerObject" ->
                 RickHennigan`MCPServer`MCPServerObject[
                  <|
                   "Name" -> "WolframLanguage",
                   "Location" -> "BuiltIn",
                   "Transport" -> "StandardInputOutput",
                   "ServerVersion" -> "1.0.0",
                   "ObjectVersion" -> 1,
                   "LLMEvaluator" -> <|
                    "Tools" -> {
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageContext",
                       "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                       "Parameters" -> {
                        "context" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                         "Required" -> True
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedDocumentation,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ],
                     LLMTool[
                      <|
                       "Name" -> "WolframLanguageEvaluator",
                       "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                       "Parameters" -> {
                        "code" -> <|
                         "Interpreter" -> "String",
                         "Help" -> "The Wolfram Language code to evaluate.",
                         "Required" -> True
                        |>,
                        "timeConstraint" -> <|
                         "Interpreter" -> "Integer",
                         "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                         "Required" -> False
                        |>
                       },
                       "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                       "Options" -> { },
                       "LLMPacletVersion" -> "1.6.10"
                      |>
                     ]
                    }
                   |>
                  |>
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[6]=",
            CellID -> 7341223
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"FilePrint", "[", "location", "]"}]],
            "Input",
            CellLabel -> "In[7]:=",
            CellID -> 64199273
           ],
           Cell[
            "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\",\n\t\t\t\t\"WOLFRAM_BASE\":\"C:\\\\ProgramData\\\\Wolfram\",\n\t\t\t\t\"WOLFRAM_USERBASE\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\",\n\t\t\t\t\"APPDATA\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\"\n\t\t\t}\n\t\t}\n\t}\n}",
            "Print",
            CellLabel -> "During evaluation of In[7]:=",
            CellID -> 791713903
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 53291102
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData["ProcessEnvironment"],
            "ExampleSubsection",
            CellID -> 676738753
           ],
           Cell[
            "Customize the environment variables that should be passed to the MCP server:",
            "ExampleText",
            CellID -> 347054391
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "installed",
                  "=",
                  RowBox[
                   {
                    "InstallMCPServer",
                    "[",
                    RowBox[
                     {
                      "\"ClaudeDesktop\"",
                      ",",
                      RowBox[
                       {
                        "ProcessEnvironment",
                        "->",
                        RowBox[
                         {"<|", RowBox[{"\"MY_VARIABLE\"", "->", "1337"}], "|>"}
                        ]
                       }
                      ]
                     }
                    ],
                    "]"
                   }
                  ]
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[2]:=",
               CellID -> 20463154
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = True),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = False),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"MCPServerObject\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  InterpretationBox[
                                   RowBox[
                                    {
                                     TagBox["MCPServerObject", "SummaryHead"],
                                     "[",
                                     DynamicModuleBox[
                                      {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                      TemplateBox[
                                       {
                                        PaneSelectorBox[
                                         {
                                          False ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = True),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"Wolfram\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ],
                                          True ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = False),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"Wolfram\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     DynamicModuleBox[
                                                      {boxObj, cellObj},
                                                      TagBox[
                                                       TagBox[
                                                        ButtonBox[
                                                         TagBox[
                                                          "\"{\[Ellipsis]}\"",
                                                          BoxForm`Undeploy,
                                                          DefaultBaseStyle -> {Deployed -> False}
                                                         ],
                                                         ButtonFunction :> {
                                                          CopyToClipboard[
                                                           "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                          ],
                                                          NotebookDelete[cellObj],
                                                          FrontEndExecute[
                                                           FrontEnd`AttachCell[
                                                            boxObj,
                                                            Cell[
                                                             BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                            ],
                                                            {1, {Center, Bottom}},
                                                            {Center, Top},
                                                            "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                           ]
                                                          ]
                                                         },
                                                         Evaluator -> Automatic,
                                                         Appearance -> {
                                                          "Default" -> None,
                                                          "Hover" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Hover.9.png"
                                                           ],
                                                          "Pressed" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Pressed.9.png"
                                                           ]
                                                         },
                                                         BaseStyle -> { },
                                                         DefaultBaseStyle -> { },
                                                         BaselinePosition -> Baseline,
                                                         FrameMargins -> 2,
                                                         Method -> "Preemptive"
                                                        ],
                                                        EventHandlerTag[
                                                         {
                                                          "MouseEntered" :>
                                                           (cellObj = 
                                                            MathLink`CallFrontEnd[
                                                             FrontEnd`AttachCell[
                                                              boxObj,
                                                              Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                              {1, {Center, Bottom}},
                                                              {Center, Top},
                                                              "ClosingActions" -> {"ParentChanged"}
                                                             ]
                                                            ]),
                                                          "MouseExited" :> NotebookDelete[cellObj],
                                                          PassEventsDown -> True,
                                                          Method -> "Preemptive",
                                                          PassEventsUp -> True
                                                         }
                                                        ]
                                                       ],
                                                       MouseAppearanceTag["LinkHand"]
                                                      ],
                                                      Initialization :> (boxObj = EvaluationBox[]),
                                                      DynamicModuleValues :> { },
                                                      UnsavedVariables :> {boxObj, cellObj},
                                                      BaseStyle -> {Editable -> False}
                                                     ],
                                                     Deploy,
                                                     DefaultBaseStyle -> "Deploy"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     GridBox[
                                                      {
                                                       {
                                                        "\"WolframContext\"",
                                                        "\"WolframLanguageEvaluator\"",
                                                        "\"WolframAlpha\"",
                                                        "",
                                                        ""
                                                       }
                                                      },
                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                      AutoDelete -> False,
                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                     ],
                                                     "Grid"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"BuiltIn\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ]
                                         },
                                         Dynamic[Typeset`open$$],
                                         ImageSize -> Automatic
                                        ]
                                       },
                                       "SummaryPanel"
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                     "]"
                                    }
                                   ],
                                   RickHennigan`MCPServer`MCPServerObject[
                                    <|
                                     "Name" -> "Wolfram",
                                     "Location" -> "BuiltIn",
                                     "Transport" -> "StandardInputOutput",
                                     "ServerVersion" -> "1.0.0",
                                     "ObjectVersion" -> 1,
                                     "LLMEvaluator" -> <|
                                      "Tools" -> {
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframContext",
                                         "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                         "Parameters" -> {
                                          "context" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                           "Required" -> True
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageEvaluator",
                                         "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "code" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "The Wolfram Language code to evaluate.",
                                           "Required" -> True
                                          |>,
                                          "timeConstraint" -> <|
                                           "Interpreter" -> "Integer",
                                           "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframAlpha",
                                         "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "query" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "the input",
                                           "Required" -> True
                                          |>,
                                          "steps" -> <|
                                           "Interpreter" -> "Boolean",
                                           "Help" -> "whether to show step-by-step solution",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ]
                                      }
                                     |>
                                    |>
                                   ],
                                   Editable -> False,
                                   SelectWithContents -> True,
                                   Selectable -> False
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"InstallMCPServer\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "InstallMCPServer",
                  <|
                   "MessageTemplate" :>
                    MessageName[
                     RickHennigan`MCPServer`MCPServer,
                     "InstallMCPServerNamed"
                    ],
                   "MessageParameters" -> {"Wolfram", "Claude Desktop"},
                   "Location" ->
                    File[
                     "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                    ],
                   "MCPServerObject" ->
                    RickHennigan`MCPServer`MCPServerObject[
                     <|
                      "Name" -> "Wolfram",
                      "Location" -> "BuiltIn",
                      "Transport" -> "StandardInputOutput",
                      "ServerVersion" -> "1.0.0",
                      "ObjectVersion" -> 1,
                      "LLMEvaluator" -> <|
                       "Tools" -> {
                        LLMTool[
                         <|
                          "Name" -> "WolframContext",
                          "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                          "Parameters" -> {
                           "context" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                            "Required" -> True
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageEvaluator",
                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "code" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "The Wolfram Language code to evaluate.",
                            "Required" -> True
                           |>,
                           "timeConstraint" -> <|
                            "Interpreter" -> "Integer",
                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                            "Required" -> False
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframAlpha",
                          "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "query" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "the input",
                            "Required" -> True
                           |>,
                           "steps" -> <|
                            "Interpreter" -> "Boolean",
                            "Help" -> "whether to show step-by-step solution",
                            "Required" -> False
                           |>
                          },
                          "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ]
                       }
                      |>
                     |>
                    ]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[2]=",
               CellID -> 84949630
              ]
             },
             Open
            ]
           ],
           Cell[
            "View the configuration file:",
            "ExampleText",
            CellID -> 760139644
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "FilePrint",
                  "[",
                  RowBox[{"installed", "[", "\"Location\"", "]"}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[3]:=",
               CellID -> 40891800
              ],
              Cell[
               "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\",\n\t\t\t\t\"MY_VARIABLE\":1337\n\t\t\t}\n\t\t}\n\t}\n}",
               "Print",
               CellLabel -> "During evaluation of In[3]:=",
               CellID -> 3825267
              ]
             },
             Open
            ]
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "UninstallMCPServer",
                  "[",
                  RowBox[{"\"ClaudeDesktop\"", ",", "\"Wolfram\""}],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[4]:=",
               CellID -> 7190951
              ],
              Cell[
               BoxData[
                InterpretationBox[
                 RowBox[
                  {
                   TagBox["Success", "SummaryHead"],
                   "[",
                   DynamicModuleBox[
                    {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                    TemplateBox[
                     {
                      PaneSelectorBox[
                       {
                        False ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = True),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ],
                        True ->
                         GridBox[
                          {
                           {
                            PaneBox[
                             ButtonBox[
                              DynamicBox[
                               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                               ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                              ],
                              Appearance -> None,
                              BaseStyle -> { },
                              ButtonFunction :> (Typeset`open$$ = False),
                              Evaluator -> Automatic,
                              Method -> "Preemptive"
                             ],
                             Alignment -> {Center, Center},
                             ImageSize ->
                              Dynamic[
                               {
                                Automatic,
                                Times[
                                 3.5,
                                 Times[
                                  CurrentValue["FontCapHeight"],
                                  AbsoluteCurrentValue[Magnification]^(-1)
                                 ]
                                ]
                               }
                              ]
                            ],
                            FrameBox[
                             StyleBox[
                              "\"\[Checkmark]\"",
                              StripOnInput -> False,
                              LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                              FontSize -> 25,
                              FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                             ],
                             ContentPadding -> False,
                             FrameMargins -> {{0, 0}, {0, 0}},
                             FrameStyle -> None,
                             StripOnInput -> False
                            ],
                            GridBox[
                             {
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  RowBox[
                                   {
                                    "File",
                                    "[",
                                    TemplateBox[
                                     {
                                      "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                     },
                                     "FileArgument"
                                    ],
                                    "]"
                                   }
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[
                                   {"\"MCPServerObject\"", "\": \""},
                                   "RowDefault"
                                  ],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox[
                                  InterpretationBox[
                                   RowBox[
                                    {
                                     TagBox["MCPServerObject", "SummaryHead"],
                                     "[",
                                     DynamicModuleBox[
                                      {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                      TemplateBox[
                                       {
                                        PaneSelectorBox[
                                         {
                                          False ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = True),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"Wolfram\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ],
                                          True ->
                                           GridBox[
                                            {
                                             {
                                              PaneBox[
                                               ButtonBox[
                                                DynamicBox[
                                                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                ],
                                                ButtonFunction :> (Typeset`open$$ = False),
                                                Appearance -> None,
                                                BaseStyle -> { },
                                                Evaluator -> Automatic,
                                                Method -> "Preemptive"
                                               ],
                                               Alignment -> {Center, Center},
                                               ImageSize ->
                                                Dynamic[
                                                 {
                                                  Automatic,
                                                  Times[
                                                   3.5,
                                                   Times[
                                                    CurrentValue["FontCapHeight"],
                                                    AbsoluteCurrentValue[Magnification]^(-1)
                                                   ]
                                                  ]
                                                 }
                                                ]
                                              ],
                                              GraphicsBox[
                                               {
                                                Thickness[0.005979],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {25.0, 97.147},
                                                     {92.882, 165.03},
                                                     {102.25, 174.4},
                                                     {117.45, 174.4},
                                                     {126.82, 165.03},
                                                     {136.2, 155.66},
                                                     {136.2, 140.46},
                                                     {126.82, 131.09},
                                                     {75.558, 79.823}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {
                                                    {
                                                     {0, 2, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0},
                                                     {1, 3, 3},
                                                     {0, 1, 0}
                                                    }
                                                   },
                                                   {
                                                    {
                                                     {76.265, 80.53},
                                                     {126.82, 131.09},
                                                     {136.2, 140.46},
                                                     {151.39, 140.46},
                                                     {160.76, 131.09},
                                                     {161.12, 130.73},
                                                     {170.49, 121.36},
                                                     {170.49, 106.17},
                                                     {161.12, 96.794},
                                                     {99.725, 35.4},
                                                     {96.601, 32.276},
                                                     {96.601, 27.211},
                                                     {99.725, 24.087},
                                                     {112.33, 11.48}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ],
                                                StyleBox[
                                                 {
                                                  JoinedCurveBox[
                                                   {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                   {
                                                    {
                                                     {109.85, 148.06},
                                                     {59.648, 97.854},
                                                     {50.276, 88.482},
                                                     {50.276, 73.286},
                                                     {59.648, 63.913},
                                                     {69.021, 54.541},
                                                     {84.217, 54.541},
                                                     {93.589, 63.913},
                                                     {143.79, 114.12}
                                                    }
                                                   },
                                                   CurveClosed -> {0}
                                                  ]
                                                 },
                                                 {
                                                  CapForm["Round"],
                                                  JoinForm[{"Miter", 1.0}],
                                                  Thickness[0.071749]
                                                 },
                                                 StripOnInput -> False
                                                ]
                                               },
                                               ImageSize -> 24
                                              ],
                                              GridBox[
                                               {
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"Wolfram\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     DynamicModuleBox[
                                                      {boxObj, cellObj},
                                                      TagBox[
                                                       TagBox[
                                                        ButtonBox[
                                                         TagBox[
                                                          "\"{\[Ellipsis]}\"",
                                                          BoxForm`Undeploy,
                                                          DefaultBaseStyle -> {Deployed -> False}
                                                         ],
                                                         ButtonFunction :> {
                                                          CopyToClipboard[
                                                           "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                          ],
                                                          NotebookDelete[cellObj],
                                                          FrontEndExecute[
                                                           FrontEnd`AttachCell[
                                                            boxObj,
                                                            Cell[
                                                             BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                            ],
                                                            {1, {Center, Bottom}},
                                                            {Center, Top},
                                                            "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                           ]
                                                          ]
                                                         },
                                                         Evaluator -> Automatic,
                                                         Appearance -> {
                                                          "Default" -> None,
                                                          "Hover" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Hover.9.png"
                                                           ],
                                                          "Pressed" ->
                                                           FrontEnd`FileName[
                                                            {"Typeset", "ClickToCopy"},
                                                            "Pressed.9.png"
                                                           ]
                                                         },
                                                         BaseStyle -> { },
                                                         DefaultBaseStyle -> { },
                                                         BaselinePosition -> Baseline,
                                                         FrameMargins -> 2,
                                                         Method -> "Preemptive"
                                                        ],
                                                        EventHandlerTag[
                                                         {
                                                          "MouseEntered" :>
                                                           (cellObj = 
                                                            MathLink`CallFrontEnd[
                                                             FrontEnd`AttachCell[
                                                              boxObj,
                                                              Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                              {1, {Center, Bottom}},
                                                              {Center, Top},
                                                              "ClosingActions" -> {"ParentChanged"}
                                                             ]
                                                            ]),
                                                          "MouseExited" :> NotebookDelete[cellObj],
                                                          PassEventsDown -> True,
                                                          Method -> "Preemptive",
                                                          PassEventsUp -> True
                                                         }
                                                        ]
                                                       ],
                                                       MouseAppearanceTag["LinkHand"]
                                                      ],
                                                      Initialization :> (boxObj = EvaluationBox[]),
                                                      DynamicModuleValues :> { },
                                                      UnsavedVariables :> {boxObj, cellObj},
                                                      BaseStyle -> {Editable -> False}
                                                     ],
                                                     Deploy,
                                                     DefaultBaseStyle -> "Deploy"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox[
                                                    TagBox[
                                                     GridBox[
                                                      {
                                                       {
                                                        "\"WolframContext\"",
                                                        "\"WolframLanguageEvaluator\"",
                                                        "\"WolframAlpha\"",
                                                        "",
                                                        ""
                                                       }
                                                      },
                                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                      AutoDelete -> False,
                                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                     ],
                                                     "Grid"
                                                    ],
                                                    "SummaryItem"
                                                   ]
                                                  }
                                                 ]
                                                },
                                                {
                                                 RowBox[
                                                  {
                                                   TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                   "\[InvisibleSpace]",
                                                   TagBox["\"BuiltIn\"", "SummaryItem"]
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                               BaseStyle -> {
                                                ShowStringCharacters -> False,
                                                NumberMarks -> False,
                                                PrintPrecision -> 3,
                                                ShowSyntaxStyles -> False
                                               }
                                              ]
                                             }
                                            },
                                            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                            AutoDelete -> False,
                                            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                            BaselinePosition -> {1, 1}
                                           ]
                                         },
                                         Dynamic[Typeset`open$$],
                                         ImageSize -> Automatic
                                        ]
                                       },
                                       "SummaryPanel"
                                      ],
                                      DynamicModuleValues :> { }
                                     ],
                                     "]"
                                    }
                                   ],
                                   RickHennigan`MCPServer`MCPServerObject[
                                    <|
                                     "Name" -> "Wolfram",
                                     "Location" -> "BuiltIn",
                                     "Transport" -> "StandardInputOutput",
                                     "ServerVersion" -> "1.0.0",
                                     "ObjectVersion" -> 1,
                                     "LLMEvaluator" -> <|
                                      "Tools" -> {
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframContext",
                                         "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                         "Parameters" -> {
                                          "context" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                           "Required" -> True
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframLanguageEvaluator",
                                         "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "code" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "The Wolfram Language code to evaluate.",
                                           "Required" -> True
                                          |>,
                                          "timeConstraint" -> <|
                                           "Interpreter" -> "Integer",
                                           "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ],
                                       LLMTool[
                                        <|
                                         "Name" -> "WolframAlpha",
                                         "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                         "Parameters" -> {
                                          "query" -> <|
                                           "Interpreter" -> "String",
                                           "Help" -> "the input",
                                           "Required" -> True
                                          |>,
                                          "steps" -> <|
                                           "Interpreter" -> "Boolean",
                                           "Help" -> "whether to show step-by-step solution",
                                           "Required" -> False
                                          |>
                                         },
                                         "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                         "Options" -> { },
                                         "LLMPacletVersion" -> "1.6.10"
                                        |>
                                       ]
                                      }
                                     |>
                                    |>
                                   ],
                                   Editable -> False,
                                   SelectWithContents -> True,
                                   Selectable -> False
                                  ],
                                  "SummaryItem"
                                 ]
                                }
                               ]
                              },
                              {
                               RowBox[
                                {
                                 TagBox[
                                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                  "SummaryItemAnnotation"
                                 ],
                                 "\[InvisibleSpace]",
                                 TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                                }
                               ]
                              }
                             },
                             AutoDelete -> False,
                             BaseStyle -> {
                              ShowStringCharacters -> False,
                              NumberMarks -> False,
                              PrintPrecision -> 3,
                              ShowSyntaxStyles -> False
                             },
                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaselinePosition -> {1, 1},
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                         ]
                       },
                       Dynamic[Typeset`open$$],
                       ImageSize -> Automatic
                      ]
                     },
                     "SummaryPanel"
                    ],
                    DynamicModuleValues :> { }
                   ],
                   "]"
                  }
                 ],
                 Success[
                  "UninstallMCPServer",
                  <|
                   "MessageTemplate" :>
                    MessageName[
                     RickHennigan`MCPServer`MCPServer,
                     "UninstallMCPServerNamed"
                    ],
                   "MessageParameters" -> {"Wolfram", "Claude Desktop"},
                   "Location" ->
                    File[
                     "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                    ],
                   "MCPServerObject" ->
                    RickHennigan`MCPServer`MCPServerObject[
                     <|
                      "Name" -> "Wolfram",
                      "Location" -> "BuiltIn",
                      "Transport" -> "StandardInputOutput",
                      "ServerVersion" -> "1.0.0",
                      "ObjectVersion" -> 1,
                      "LLMEvaluator" -> <|
                       "Tools" -> {
                        LLMTool[
                         <|
                          "Name" -> "WolframContext",
                          "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                          "Parameters" -> {
                           "context" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                            "Required" -> True
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframLanguageEvaluator",
                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "code" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "The Wolfram Language code to evaluate.",
                            "Required" -> True
                           |>,
                           "timeConstraint" -> <|
                            "Interpreter" -> "Integer",
                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                            "Required" -> False
                           |>
                          },
                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ],
                        LLMTool[
                         <|
                          "Name" -> "WolframAlpha",
                          "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                          "Parameters" -> {
                           "query" -> <|
                            "Interpreter" -> "String",
                            "Help" -> "the input",
                            "Required" -> True
                           |>,
                           "steps" -> <|
                            "Interpreter" -> "Boolean",
                            "Help" -> "whether to show step-by-step solution",
                            "Required" -> False
                           |>
                          },
                          "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                          "Options" -> { },
                          "LLMPacletVersion" -> "1.6.10"
                         |>
                        ]
                       }
                      |>
                     |>
                    ]
                  |>
                 ],
                 Editable -> False,
                 SelectWithContents -> True,
                 Selectable -> False
                ]
               ],
               "Output",
               CellLabel -> "Out[4]=",
               CellID -> 784899504
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 299069562
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Applications", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 128269263
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Properties & Relations", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 64118143
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Possible Issues", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 317455460
        ],
        Cell[
         "If the target JSON configuration file contains comments, installation will fail:",
         "ExampleText",
         CellID -> 505105976
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "InstallMCPServer",
               "[",
               RowBox[{"\"Cursor\"", ",", "\"WolframLanguage\""}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 94468852
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "Developer`ReadRawJSONFile",
               "jsonkeynstr",
               "\"Object keys must be strings.\"",
               2,
               1,
               44,
               20184187186632264838,
               "Local",
               "Developer`ReadRawJSONFile"
              },
              "MessageTemplate2",
              BaseStyle -> "MSG"
             ]
            ],
            "Message",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 4264690
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "Developer`ReadRawJSONFile",
               "jsonhintposandchar",
               "\"An error occurred near character '\\!\\(\\*RowBox[{\\\"\\\\\\\"/\\\\\\\"\\\"}]\\)', at line \\!\\(\\*RowBox[{\\\"3\\\"}]\\):\\!\\(\\*RowBox[{\\\"5\\\"}]\\)\"",
               2,
               1,
               45,
               20184187186632264838,
               "Local",
               "Developer`ReadRawJSONFile"
              },
              "MessageTemplate2",
              BaseStyle -> "MSG"
             ]
            ],
            "Message",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 899983905
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               "InstallMCPServer",
               "InvalidMCPConfiguration",
               "\"Invalid MCP configuration file: \\!\\(\\*RowBox[{\\\"File\\\", \\\"[\\\", TemplateBox[List[\\\"\\\\\\\"C:/Users/rhennigan/.cursor/mcp.json\\\\\\\"\\\"], \\\"FileArgument\\\"], \\\"]\\\"}]\\).\"",
               2,
               1,
               46,
               20184187186632264838,
               "Local",
               "RickHennigan`MCPServer`InstallMCPServer"
              },
              "MessageTemplate2",
              BaseStyle -> "MSG"
             ]
            ],
            "Message",
            CellLabel -> "During evaluation of In[1]:=",
            CellID -> 78620661
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["Failure", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           "Message",
                           StripOnInput -> False,
                           FontSize -> 35
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Invalid MCP configuration file: \\!\\(\\*TagBox[RowBox[{\\\"File\\\", \\\"[\\\", TemplateBox[List[\\\"\\\\\\\"C:/Users/rhennigan/.cursor/mcp.json\\\\\\\"\\\"], \\\"FileArgument\\\"], \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"InstallMCPServer::InvalidMCPConfiguration\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         FrameBox[
                          StyleBox[
                           "\"\[WarningSign]\"",
                           "Message",
                           StripOnInput -> False,
                           FontSize -> 35
                          ],
                          ContentPadding -> False,
                          FrameMargins -> {{0, 0}, {0, 0}},
                          FrameStyle -> None,
                          StripOnInput -> False
                         ],
                         GridBox[
                          {
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Message: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"Invalid MCP configuration file: \\!\\(\\*TagBox[RowBox[{\\\"File\\\", \\\"[\\\", TemplateBox[List[\\\"\\\\\\\"C:/Users/rhennigan/.cursor/mcp.json\\\\\\\"\\\"], \\\"FileArgument\\\"], \\\"]\\\"}], Function[Short[Slot[1], 5]]]\\).\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           },
                           {
                            TagBox[
                             GridBox[
                              {
                               {
                                TagBox["\"Tag: \"", "SummaryItemAnnotation"],
                                "\[InvisibleSpace]",
                                TagBox[
                                 "\"InstallMCPServer::InvalidMCPConfiguration\"",
                                 "SummaryItem"
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}},
                              GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}},
                              GridBoxSpacings -> {"Columns" -> {{0}}}
                             ],
                             "SummaryItem"
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Failure[
               "InstallMCPServer::InvalidMCPConfiguration",
               <|
                "MessageParameters" :> {File["C:/Users/rhennigan/.cursor/mcp.json"]},
                "MessageTemplate" :>
                 MessageName[
                  RickHennigan`MCPServer`InstallMCPServer,
                  "InvalidMCPConfiguration"
                 ]
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 407890897
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "FilePrint",
               "[",
               RowBox[
                {
                 "File",
                 "[",
                 TemplateBox[
                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                  "FileArgument"
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 822920787
           ],
           Cell[
            "{\n\t\"mcpServers\":{\n\t\t// This is the Wolfram MCP server\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\",\n\t\t\t\t\"WOLFRAM_BASE\":\"C:\\\\ProgramData\\\\Wolfram\",\n\t\t\t\t\"WOLFRAM_USERBASE\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\",\n\t\t\t\t\"APPDATA\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\"\n\t\t\t}\n\t\t}\n\t}\n}",
            "Print",
            CellLabel -> "During evaluation of In[2]:=",
            CellID -> 682185659
           ]
          },
          Open
         ]
        ],
        Cell[
         "To work around this, you can copy the relevant part of the JSON configuration for an MCP server and manually insert it:",
         "ExampleText",
         CellID -> 562110371
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {"MCPServerObject", "[", "\"WolframLanguage\"", "]"}
               ],
               "[",
               "\"JSONConfiguration\"",
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 160100735
           ],
           Cell[
            BoxData[
             "\"{\\n\\t\\\"mcpServers\\\":{\\n\\t\\t\\\"WolframLanguage\\\":{\\n\\t\\t\\t\\\"command\\\":\\\"wolfram\\\",\\n\\t\\t\\t\\\"args\\\":[\\n\\t\\t\\t\\t\\\"-run\\\",\\n\\t\\t\\t\\t\\\"RickHennigan`MCPServer`StartMCPServer[]\\\",\\n\\t\\t\\t\\t\\\"-noinit\\\",\\n\\t\\t\\t\\t\\\"-noprompt\\\"\\n\\t\\t\\t],\\n\\t\\t\\t\\\"env\\\":{\\n\\t\\t\\t\\t\\\"MCP_SERVER_NAME\\\":\\\"WolframLanguage\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\""
            ],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 318989119
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "FilePrint",
               "[",
               RowBox[
                {
                 "File",
                 "[",
                 TemplateBox[
                  {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                  "FileArgument"
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:=",
            CellID -> 149630094
           ],
           Cell[
            "{\n\t\"mcpServers\":{\n\t\t// This is the Wolfram MCP server\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\",\n\t\t\t\t\"WOLFRAM_BASE\":\"C:\\\\ProgramData\\\\Wolfram\",\n\t\t\t\t\"WOLFRAM_USERBASE\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\",\n\t\t\t\t\"APPDATA\":\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\"\n\t\t\t}\n\t\t},\n\t\t// This part was pasted in manually\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}",
            "Print",
            CellLabel -> "During evaluation of In[4]:=",
            CellID -> 122707127
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 249719923
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 286085858
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 44261870],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["XX", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 99767341
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 69155631
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 389040509
        ],
        Cell[
         "RickHennigan/MCPServer",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 413321334
        ],
        Cell[
         "RickHennigan`MCPServer`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 436677547
        ],
        Cell[
         "RickHennigan/MCPServer/ref/InstallMCPServer",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 694244737
        ]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 53081346],
        Cell["XXXX", "Keywords", CellID -> 229963536]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 36012056
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 11615120
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 366394457
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 914104
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 73042647
        ]
       },
       Closed
      ]
     ]
    },
    Open
   ]
  ]
 },
 TaggingRules -> <|"Paclet" -> "RickHennigan/MCPServer"|>,
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ]
]