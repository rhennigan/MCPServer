(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell[
      "UninstallMCPServer",
      "ObjectName",
      CellID -> 117074851
     ],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "UninstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
            ],
            "[",
            "\"\!\(\*StyleBox[\"application\", \"TI\"]\)\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]uninstalls all the MCP servers that have been installed for the specified application.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "UninstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
            ],
            "[",
            RowBox[
             {
              ButtonBox[
               "MCPServerObject",
               BaseStyle -> "Link",
               ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
              ],
              "[",
              StyleBox["\[Ellipsis]", "TR"],
              "]"
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]uninstalls the specified MCP server from any applications it has previously been installed for.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "UninstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
            ],
            "[",
            RowBox[
             {
              "\"\!\(\*StyleBox[\"application\", \"TI\"]\)\"",
              ",",
              StyleBox["server", "TI"]
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]uninstalls the specified MCP server from the specified application.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "UninstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
            ],
            "[",
            RowBox[
             {
              RowBox[
               {
                ButtonBox["File", BaseStyle -> "Link"],
                "[",
                StyleBox["\[Ellipsis]", "TR"],
                "]"
               }
              ],
              ",",
              StyleBox["server", "TI"]
             }
            ],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]uninstalls the specified MCP server from the given JSON configuration file.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "UninstallMCPServer",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/UninstallMCPServer"
            ],
            "[",
            ButtonBox["All", BaseStyle -> "Link"],
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]uninstalls all previously installed MCP servers"
       }
      ],
      "Usage",
      CellID -> 51785951
     ],
     Cell[
      TextData[
       {
        "The value for ",
        Cell[BoxData[StyleBox["server", "TI"]], "InlineFormula"],
        " can be one of the following:"
       }
      ],
      "Notes",
      CellID -> 701239966
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"\!\(\*StyleBox[\"name\", \"TI\"]\)\"",
          Cell[
           TextData[
            {
             "the name of an existing ",
             Cell[
              BoxData[
               ButtonBox[
                "MCPServerObject",
                BaseStyle -> "Link",
                ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
               ]
              ],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[{"<|", StyleBox["\[Ellipsis]", "TR"], "|>"}],
          Cell[
           TextData[
            {
             "an association corresponding to an ",
             Cell[
              BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[
           {
            ButtonBox["LLMConfiguration", BaseStyle -> "Link"],
            "[",
            StyleBox["\[Ellipsis]", "TR"],
            "]"
           }
          ],
          Cell[
           TextData[
            {
             "an ",
             Cell[
              BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          RowBox[
           {
            ButtonBox[
             "MCPServerObject",
             BaseStyle -> "Link",
             ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
            ],
            "[",
            StyleBox["\[Ellipsis]", "TR"],
            "]"
           }
          ],
          Cell[
           TextData[
            {
             "an ",
             Cell[
              BoxData[
               ButtonBox[
                "MCPServerObject",
                BaseStyle -> "Link",
                ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
               ]
              ],
              "InlineFormula"
             ]
            }
           ],
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 565390
     ],
     Cell[
      "Some predefined MCP servers that can be specified by name are:",
      "Notes",
      CellID -> 160459376
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"WolframAlpha\"",
          Cell[
           "an MCP server that is optimized for retrieving information from Wolfram|Alpha",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"WolframLanguage\"",
          Cell[
           "an MCP server that is optimized for writing and evaluating Wolfram Language code",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Wolfram\"",
          Cell[
           "a blend of Wolfram|Alpha and Wolfram Language functionality",
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 8640607
     ],
     Cell[
      TextData[
       {
        "Additionally, any other MCP servers you have created with ",
        Cell[
         BoxData[
          ButtonBox[
           "CreateMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/CreateMCPServer"
          ]
         ],
         "InlineFormula"
        ],
        " can be referenced by name."
       }
      ],
      "Notes",
      CellID -> 676868825
     ],
     Cell[
      TextData[
       {
        "Some possible values for ",
        Cell[
         BoxData["\"\!\(\*StyleBox[\"application\", \"TI\"]\)\""],
         "InlineFormula"
        ],
        " are:"
       }
      ],
      "Notes",
      CellID -> 16022026
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"ClaudeDesktop\"",
          Cell[
           TextData[
            ButtonBox[
             "Claude Desktop",
             BaseStyle -> "Hyperlink",
             ButtonData -> {URL["https://claude.ai/download"], None},
             ButtonNote -> "https://claude.ai/download"
            ]
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Cursor\"",
          Cell[
           TextData[
            ButtonBox[
             "Cursor",
             BaseStyle -> "Hyperlink",
             ButtonData -> {URL["https://www.cursor.com/"], None},
             ButtonNote -> "https://www.cursor.com/"
            ]
           ],
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 822744168
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "See Also",
        Cell[
         BoxData[
          TemplateBox[
           {
            "SeeAlso",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related reference (function) pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "SeeAlsoSection",
      CellID -> 59978993
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "InstallMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/InstallMCPServer"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "MCPServerObject",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RickHennigan/MCPServer/ref/MCPServerObject"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "DeleteObject",
           BaseStyle -> "Link",
           ButtonData -> "paclet:ref/DeleteObject"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        Cell[
         BoxData[
          RowBox[
           {
            Cell[
             TextData[
              StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"]
             ]
            ],
            DynamicModuleBox[
             {
              nbobj$$ = 
               NotebookObject[
                "08a3ec78-df1d-2c45-96a1-67259166e93a",
                "0d6288ef-350a-c745-8b48-32396059ae54"
               ],
              cellobj$$ = 
               CellObject[
                "526b4995-c4b7-714e-84d0-99b3cb941b64",
                "995f2b9c-8727-0443-a957-ee979fbd2f8d"
               ]
             },
             TemplateBox[
              {
               GraphicsBox[
                {
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  CircleBox[{0, 0}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{0, 0.62}, {0, -0.62}}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{-0.62, 0}, {0.62, 0}}]
                 }
                },
                ImagePadding -> {{1.0, 1.0}, {2.4, 1.0}},
                ImageSize -> 16,
                PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}},
                BaselinePosition -> Center -> Center
               ],
               nbobj$$,
               cellobj$$
              },
              "InlineListingAddButton"
             ],
             Initialization :>
              (nbobj$$ = EvaluationNotebook[];
              cellobj$$ = EvaluationCell[])
            ]
           }
          ]
         ],
         "InlineListingAddButton"
        ]
       }
      ],
      "SeeAlso",
      CellID -> 118905349
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 546102888
     ],
     Cell["XXXX", "Tutorials", CellID -> 14041208]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 548511399
     ],
     Cell["XXXX", "MoreAbout", CellID -> 119044106]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 8599562
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 327486041]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 37599753
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"RickHennigan`MCPServer`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 20053184
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 48149727
     ],
     Cell[
      TextData[
       {
        "Install the default MCP server for ",
        ButtonBox[
         "Claude Desktop",
         BaseStyle -> "Hyperlink",
         ButtonData -> {URL["https://claude.ai/download"], None},
         ButtonNote -> "https://claude.ai/download"
        ],
        ":"
       }
      ],
      "ExampleText",
      CellID -> 12425924
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[{"InstallMCPServer", "[", "\"ClaudeDesktop\"", "]"}]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 335891485
        ],
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[
            {
             TagBox["Success", "SummaryHead"],
             "[",
             DynamicModuleBox[
              {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
              TemplateBox[
               {
                PaneSelectorBox[
                 {
                  False ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                         ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                        ],
                        Appearance -> None,
                        BaseStyle -> { },
                        ButtonFunction :> (Typeset`open$$ = True),
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      FrameBox[
                       StyleBox[
                        "\"\[Checkmark]\"",
                        StripOnInput -> False,
                        LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FontSize -> 25,
                        FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                       ],
                       ContentPadding -> False,
                       FrameMargins -> {{0, 0}, {0, 0}},
                       FrameStyle -> None,
                       StripOnInput -> False
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            RowBox[
                             {
                              "File",
                              "[",
                              TemplateBox[
                               {
                                "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                               },
                               "FileArgument"
                              ],
                              "]"
                             }
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                      ]
                     }
                    },
                    AutoDelete -> False,
                    BaselinePosition -> {1, 1},
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                   ],
                  True ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                        ],
                        Appearance -> None,
                        BaseStyle -> { },
                        ButtonFunction :> (Typeset`open$$ = False),
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      FrameBox[
                       StyleBox[
                        "\"\[Checkmark]\"",
                        StripOnInput -> False,
                        LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                        FontSize -> 25,
                        FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                       ],
                       ContentPadding -> False,
                       FrameMargins -> {{0, 0}, {0, 0}},
                       FrameStyle -> None,
                       StripOnInput -> False
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            "\"Successfully installed MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            RowBox[
                             {
                              "File",
                              "[",
                              TemplateBox[
                               {
                                "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                               },
                               "FileArgument"
                              ],
                              "]"
                             }
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[
                             {"\"MCPServerObject\"", "\": \""},
                             "RowDefault"
                            ],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox[
                            InterpretationBox[
                             RowBox[
                              {
                               TagBox["MCPServerObject", "SummaryHead"],
                               "[",
                               DynamicModuleBox[
                                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                TemplateBox[
                                 {
                                  PaneSelectorBox[
                                   {
                                    False ->
                                     GridBox[
                                      {
                                       {
                                        PaneBox[
                                         ButtonBox[
                                          DynamicBox[
                                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                          ],
                                          ButtonFunction :> (Typeset`open$$ = True),
                                          Appearance -> None,
                                          BaseStyle -> { },
                                          Evaluator -> Automatic,
                                          Method -> "Preemptive"
                                         ],
                                         Alignment -> {Center, Center},
                                         ImageSize ->
                                          Dynamic[
                                           {
                                            Automatic,
                                            Times[
                                             3.5,
                                             Times[
                                              CurrentValue["FontCapHeight"],
                                              AbsoluteCurrentValue[Magnification]^(-1)
                                             ]
                                            ]
                                           }
                                          ]
                                        ],
                                        GraphicsBox[
                                         {
                                          Thickness[0.005979],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {25.0, 97.147},
                                               {92.882, 165.03},
                                               {102.25, 174.4},
                                               {117.45, 174.4},
                                               {126.82, 165.03},
                                               {136.2, 155.66},
                                               {136.2, 140.46},
                                               {126.82, 131.09},
                                               {75.558, 79.823}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {
                                              {
                                               {0, 2, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0}
                                              }
                                             },
                                             {
                                              {
                                               {76.265, 80.53},
                                               {126.82, 131.09},
                                               {136.2, 140.46},
                                               {151.39, 140.46},
                                               {160.76, 131.09},
                                               {161.12, 130.73},
                                               {170.49, 121.36},
                                               {170.49, 106.17},
                                               {161.12, 96.794},
                                               {99.725, 35.4},
                                               {96.601, 32.276},
                                               {96.601, 27.211},
                                               {99.725, 24.087},
                                               {112.33, 11.48}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {109.85, 148.06},
                                               {59.648, 97.854},
                                               {50.276, 88.482},
                                               {50.276, 73.286},
                                               {59.648, 63.913},
                                               {69.021, 54.541},
                                               {84.217, 54.541},
                                               {93.589, 63.913},
                                               {143.79, 114.12}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ]
                                         },
                                         ImageSize -> 24
                                        ],
                                        GridBox[
                                         {
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"Wolfram\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                         BaseStyle -> {
                                          ShowStringCharacters -> False,
                                          NumberMarks -> False,
                                          PrintPrecision -> 3,
                                          ShowSyntaxStyles -> False
                                         }
                                        ]
                                       }
                                      },
                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                      AutoDelete -> False,
                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                      BaselinePosition -> {1, 1}
                                     ],
                                    True ->
                                     GridBox[
                                      {
                                       {
                                        PaneBox[
                                         ButtonBox[
                                          DynamicBox[
                                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                          ],
                                          ButtonFunction :> (Typeset`open$$ = False),
                                          Appearance -> None,
                                          BaseStyle -> { },
                                          Evaluator -> Automatic,
                                          Method -> "Preemptive"
                                         ],
                                         Alignment -> {Center, Center},
                                         ImageSize ->
                                          Dynamic[
                                           {
                                            Automatic,
                                            Times[
                                             3.5,
                                             Times[
                                              CurrentValue["FontCapHeight"],
                                              AbsoluteCurrentValue[Magnification]^(-1)
                                             ]
                                            ]
                                           }
                                          ]
                                        ],
                                        GraphicsBox[
                                         {
                                          Thickness[0.005979],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {25.0, 97.147},
                                               {92.882, 165.03},
                                               {102.25, 174.4},
                                               {117.45, 174.4},
                                               {126.82, 165.03},
                                               {136.2, 155.66},
                                               {136.2, 140.46},
                                               {126.82, 131.09},
                                               {75.558, 79.823}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {
                                              {
                                               {0, 2, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0},
                                               {1, 3, 3},
                                               {0, 1, 0}
                                              }
                                             },
                                             {
                                              {
                                               {76.265, 80.53},
                                               {126.82, 131.09},
                                               {136.2, 140.46},
                                               {151.39, 140.46},
                                               {160.76, 131.09},
                                               {161.12, 130.73},
                                               {170.49, 121.36},
                                               {170.49, 106.17},
                                               {161.12, 96.794},
                                               {99.725, 35.4},
                                               {96.601, 32.276},
                                               {96.601, 27.211},
                                               {99.725, 24.087},
                                               {112.33, 11.48}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ],
                                          StyleBox[
                                           {
                                            JoinedCurveBox[
                                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                             {
                                              {
                                               {109.85, 148.06},
                                               {59.648, 97.854},
                                               {50.276, 88.482},
                                               {50.276, 73.286},
                                               {59.648, 63.913},
                                               {69.021, 54.541},
                                               {84.217, 54.541},
                                               {93.589, 63.913},
                                               {143.79, 114.12}
                                              }
                                             },
                                             CurveClosed -> {0}
                                            ]
                                           },
                                           {
                                            CapForm["Round"],
                                            JoinForm[{"Miter", 1.0}],
                                            Thickness[0.071749]
                                           },
                                           StripOnInput -> False
                                          ]
                                         },
                                         ImageSize -> 24
                                        ],
                                        GridBox[
                                         {
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"Wolfram\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox[
                                              TagBox[
                                               DynamicModuleBox[
                                                {boxObj, cellObj},
                                                TagBox[
                                                 TagBox[
                                                  ButtonBox[
                                                   TagBox[
                                                    "\"{\[Ellipsis]}\"",
                                                    BoxForm`Undeploy,
                                                    DefaultBaseStyle -> {Deployed -> False}
                                                   ],
                                                   ButtonFunction :> {
                                                    CopyToClipboard[
                                                     "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                    ],
                                                    NotebookDelete[cellObj],
                                                    FrontEndExecute[
                                                     FrontEnd`AttachCell[
                                                      boxObj,
                                                      Cell[
                                                       BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                      ],
                                                      {1, {Center, Bottom}},
                                                      {Center, Top},
                                                      "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                     ]
                                                    ]
                                                   },
                                                   Evaluator -> Automatic,
                                                   Appearance -> {
                                                    "Default" -> None,
                                                    "Hover" ->
                                                     FrontEnd`FileName[
                                                      {"Typeset", "ClickToCopy"},
                                                      "Hover.9.png"
                                                     ],
                                                    "Pressed" ->
                                                     FrontEnd`FileName[
                                                      {"Typeset", "ClickToCopy"},
                                                      "Pressed.9.png"
                                                     ]
                                                   },
                                                   BaseStyle -> { },
                                                   DefaultBaseStyle -> { },
                                                   BaselinePosition -> Baseline,
                                                   FrameMargins -> 2,
                                                   Method -> "Preemptive"
                                                  ],
                                                  EventHandlerTag[
                                                   {
                                                    "MouseEntered" :>
                                                     (cellObj = 
                                                      MathLink`CallFrontEnd[
                                                       FrontEnd`AttachCell[
                                                        boxObj,
                                                        Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                        {1, {Center, Bottom}},
                                                        {Center, Top},
                                                        "ClosingActions" -> {"ParentChanged"}
                                                       ]
                                                      ]),
                                                    "MouseExited" :> NotebookDelete[cellObj],
                                                    PassEventsDown -> True,
                                                    Method -> "Preemptive",
                                                    PassEventsUp -> True
                                                   }
                                                  ]
                                                 ],
                                                 MouseAppearanceTag["LinkHand"]
                                                ],
                                                Initialization :> (boxObj = EvaluationBox[]),
                                                DynamicModuleValues :> { },
                                                UnsavedVariables :> {boxObj, cellObj},
                                                BaseStyle -> {Editable -> False}
                                               ],
                                               Deploy,
                                               DefaultBaseStyle -> "Deploy"
                                              ],
                                              "SummaryItem"
                                             ]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox[
                                              TagBox[
                                               GridBox[
                                                {
                                                 {
                                                  "\"WolframContext\"",
                                                  "\"WolframLanguageEvaluator\"",
                                                  "\"WolframAlpha\"",
                                                  "",
                                                  ""
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                               ],
                                               "Grid"
                                              ],
                                              "SummaryItem"
                                             ]
                                            }
                                           ]
                                          },
                                          {
                                           RowBox[
                                            {
                                             TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                             "\[InvisibleSpace]",
                                             TagBox["\"BuiltIn\"", "SummaryItem"]
                                            }
                                           ]
                                          }
                                         },
                                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                         AutoDelete -> False,
                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                         BaseStyle -> {
                                          ShowStringCharacters -> False,
                                          NumberMarks -> False,
                                          PrintPrecision -> 3,
                                          ShowSyntaxStyles -> False
                                         }
                                        ]
                                       }
                                      },
                                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                      AutoDelete -> False,
                                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                      BaselinePosition -> {1, 1}
                                     ]
                                   },
                                   Dynamic[Typeset`open$$],
                                   ImageSize -> Automatic
                                  ]
                                 },
                                 "SummaryPanel"
                                ],
                                DynamicModuleValues :> { }
                               ],
                               "]"
                              }
                             ],
                             RickHennigan`MCPServer`MCPServerObject[
                              <|
                               "Name" -> "Wolfram",
                               "Location" -> "BuiltIn",
                               "Transport" -> "StandardInputOutput",
                               "ServerVersion" -> "1.0.0",
                               "ObjectVersion" -> 1,
                               "LLMEvaluator" -> <|
                                "Tools" -> {
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframContext",
                                   "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                   "Parameters" -> {
                                    "context" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                     "Required" -> True
                                    |>
                                   },
                                   "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ],
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframLanguageEvaluator",
                                   "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                   "Parameters" -> {
                                    "code" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "The Wolfram Language code to evaluate.",
                                     "Required" -> True
                                    |>,
                                    "timeConstraint" -> <|
                                     "Interpreter" -> "Integer",
                                     "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                     "Required" -> False
                                    |>
                                   },
                                   "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ],
                                 LLMTool[
                                  <|
                                   "Name" -> "WolframAlpha",
                                   "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                   "Parameters" -> {
                                    "query" -> <|
                                     "Interpreter" -> "String",
                                     "Help" -> "the input",
                                     "Required" -> True
                                    |>,
                                    "steps" -> <|
                                     "Interpreter" -> "Boolean",
                                     "Help" -> "whether to show step-by-step solution",
                                     "Required" -> False
                                    |>
                                   },
                                   "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                   "Options" -> { },
                                   "LLMPacletVersion" -> "1.6.10"
                                  |>
                                 ]
                                }
                               |>
                              |>
                             ],
                             Editable -> False,
                             SelectWithContents -> True,
                             Selectable -> False
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox[
                            TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                            "SummaryItemAnnotation"
                           ],
                           "\[InvisibleSpace]",
                           TagBox["\"InstallMCPServer\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                      ]
                     }
                    },
                    AutoDelete -> False,
                    BaselinePosition -> {1, 1},
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                   ]
                 },
                 Dynamic[Typeset`open$$],
                 ImageSize -> Automatic
                ]
               },
               "SummaryPanel"
              ],
              DynamicModuleValues :> { }
             ],
             "]"
            }
           ],
           Success[
            "InstallMCPServer",
            <|
             "MessageTemplate" :>
              MessageName[
               RickHennigan`MCPServer`MCPServer,
               "InstallMCPServerNamed"
              ],
             "MessageParameters" -> {"Wolfram", "Claude Desktop"},
             "Location" ->
              File[
               "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
              ],
             "MCPServerObject" ->
              RickHennigan`MCPServer`MCPServerObject[
               <|
                "Name" -> "Wolfram",
                "Location" -> "BuiltIn",
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1,
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "WolframContext",
                    "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                    "Parameters" -> {
                     "context" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                      "Required" -> True
                     |>
                    },
                    "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframLanguageEvaluator",
                    "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "code" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "The Wolfram Language code to evaluate.",
                      "Required" -> True
                     |>,
                     "timeConstraint" -> <|
                      "Interpreter" -> "Integer",
                      "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                      "Required" -> False
                     |>
                    },
                    "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframAlpha",
                    "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "query" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "the input",
                      "Required" -> True
                     |>,
                     "steps" -> <|
                      "Interpreter" -> "Boolean",
                      "Help" -> "whether to show step-by-step solution",
                      "Required" -> False
                     |>
                    },
                    "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>
               |>
              ]
            |>
           ],
           Editable -> False,
           SelectWithContents -> True,
           Selectable -> False
          ]
         ],
         "Output",
         CellLabel -> "Out[1]=",
         CellID -> 245509191
        ]
       },
       Open
      ]
     ],
     Cell["Uninstall it:", "ExampleText", CellID -> 259865962],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {"UninstallMCPServer", "[", "\"ClaudeDesktop\"", "]"}
          ]
         ],
         "Input",
         CellLabel -> "In[2]:=",
         CellID -> 737154476
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            InterpretationBox[
             RowBox[
              {
               TagBox["Success", "SummaryHead"],
               "[",
               DynamicModuleBox[
                {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                TemplateBox[
                 {
                  PaneSelectorBox[
                   {
                    False ->
                     GridBox[
                      {
                       {
                        PaneBox[
                         ButtonBox[
                          DynamicBox[
                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                           ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                          ],
                          Appearance -> None,
                          BaseStyle -> { },
                          ButtonFunction :> (Typeset`open$$ = True),
                          Evaluator -> Automatic,
                          Method -> "Preemptive"
                         ],
                         Alignment -> {Center, Center},
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        FrameBox[
                         StyleBox[
                          "\"\[Checkmark]\"",
                          StripOnInput -> False,
                          LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FontSize -> 25,
                          FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                         ],
                         ContentPadding -> False,
                         FrameMargins -> {{0, 0}, {0, 0}},
                         FrameStyle -> None,
                         StripOnInput -> False
                        ],
                        GridBox[
                         {
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              RowBox[
                               {
                                "File",
                                "[",
                                TemplateBox[
                                 {
                                  "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                 },
                                 "FileArgument"
                                ],
                                "]"
                               }
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaseStyle -> {
                          ShowStringCharacters -> False,
                          NumberMarks -> False,
                          PrintPrecision -> 3,
                          ShowSyntaxStyles -> False
                         },
                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                        ]
                       }
                      },
                      AutoDelete -> False,
                      BaselinePosition -> {1, 1},
                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                     ],
                    True ->
                     GridBox[
                      {
                       {
                        PaneBox[
                         ButtonBox[
                          DynamicBox[
                           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                          ],
                          Appearance -> None,
                          BaseStyle -> { },
                          ButtonFunction :> (Typeset`open$$ = False),
                          Evaluator -> Automatic,
                          Method -> "Preemptive"
                         ],
                         Alignment -> {Center, Center},
                         ImageSize ->
                          Dynamic[
                           {
                            Automatic,
                            Times[
                             3.5,
                             Times[
                              CurrentValue["FontCapHeight"],
                              AbsoluteCurrentValue[Magnification]^(-1)
                             ]
                            ]
                           }
                          ]
                        ],
                        FrameBox[
                         StyleBox[
                          "\"\[Checkmark]\"",
                          StripOnInput -> False,
                          LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                          FontSize -> 25,
                          FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                         ],
                         ContentPadding -> False,
                         FrameMargins -> {{0, 0}, {0, 0}},
                         FrameStyle -> None,
                         StripOnInput -> False
                        ],
                        GridBox[
                         {
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              "\"Successfully uninstalled MCP server \\\"Wolfram\\\" for Claude Desktop.\"",
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              RowBox[
                               {
                                "File",
                                "[",
                                TemplateBox[
                                 {
                                  "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                 },
                                 "FileArgument"
                                ],
                                "]"
                               }
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[
                               {"\"MCPServerObject\"", "\": \""},
                               "RowDefault"
                              ],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox[
                              InterpretationBox[
                               RowBox[
                                {
                                 TagBox["MCPServerObject", "SummaryHead"],
                                 "[",
                                 DynamicModuleBox[
                                  {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                  TemplateBox[
                                   {
                                    PaneSelectorBox[
                                     {
                                      False ->
                                       GridBox[
                                        {
                                         {
                                          PaneBox[
                                           ButtonBox[
                                            DynamicBox[
                                             FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                            ],
                                            ButtonFunction :> (Typeset`open$$ = True),
                                            Appearance -> None,
                                            BaseStyle -> { },
                                            Evaluator -> Automatic,
                                            Method -> "Preemptive"
                                           ],
                                           Alignment -> {Center, Center},
                                           ImageSize ->
                                            Dynamic[
                                             {
                                              Automatic,
                                              Times[
                                               3.5,
                                               Times[
                                                CurrentValue["FontCapHeight"],
                                                AbsoluteCurrentValue[Magnification]^(-1)
                                               ]
                                              ]
                                             }
                                            ]
                                          ],
                                          GraphicsBox[
                                           {
                                            Thickness[0.005979],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {25.0, 97.147},
                                                 {92.882, 165.03},
                                                 {102.25, 174.4},
                                                 {117.45, 174.4},
                                                 {126.82, 165.03},
                                                 {136.2, 155.66},
                                                 {136.2, 140.46},
                                                 {126.82, 131.09},
                                                 {75.558, 79.823}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {
                                                {
                                                 {0, 2, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0}
                                                }
                                               },
                                               {
                                                {
                                                 {76.265, 80.53},
                                                 {126.82, 131.09},
                                                 {136.2, 140.46},
                                                 {151.39, 140.46},
                                                 {160.76, 131.09},
                                                 {161.12, 130.73},
                                                 {170.49, 121.36},
                                                 {170.49, 106.17},
                                                 {161.12, 96.794},
                                                 {99.725, 35.4},
                                                 {96.601, 32.276},
                                                 {96.601, 27.211},
                                                 {99.725, 24.087},
                                                 {112.33, 11.48}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {109.85, 148.06},
                                                 {59.648, 97.854},
                                                 {50.276, 88.482},
                                                 {50.276, 73.286},
                                                 {59.648, 63.913},
                                                 {69.021, 54.541},
                                                 {84.217, 54.541},
                                                 {93.589, 63.913},
                                                 {143.79, 114.12}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ]
                                           },
                                           ImageSize -> 24
                                          ],
                                          GridBox[
                                           {
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"Wolfram\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                           BaseStyle -> {
                                            ShowStringCharacters -> False,
                                            NumberMarks -> False,
                                            PrintPrecision -> 3,
                                            ShowSyntaxStyles -> False
                                           }
                                          ]
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {1, 1}
                                       ],
                                      True ->
                                       GridBox[
                                        {
                                         {
                                          PaneBox[
                                           ButtonBox[
                                            DynamicBox[
                                             FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                            ],
                                            ButtonFunction :> (Typeset`open$$ = False),
                                            Appearance -> None,
                                            BaseStyle -> { },
                                            Evaluator -> Automatic,
                                            Method -> "Preemptive"
                                           ],
                                           Alignment -> {Center, Center},
                                           ImageSize ->
                                            Dynamic[
                                             {
                                              Automatic,
                                              Times[
                                               3.5,
                                               Times[
                                                CurrentValue["FontCapHeight"],
                                                AbsoluteCurrentValue[Magnification]^(-1)
                                               ]
                                              ]
                                             }
                                            ]
                                          ],
                                          GraphicsBox[
                                           {
                                            Thickness[0.005979],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {25.0, 97.147},
                                                 {92.882, 165.03},
                                                 {102.25, 174.4},
                                                 {117.45, 174.4},
                                                 {126.82, 165.03},
                                                 {136.2, 155.66},
                                                 {136.2, 140.46},
                                                 {126.82, 131.09},
                                                 {75.558, 79.823}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {
                                                {
                                                 {0, 2, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0},
                                                 {1, 3, 3},
                                                 {0, 1, 0}
                                                }
                                               },
                                               {
                                                {
                                                 {76.265, 80.53},
                                                 {126.82, 131.09},
                                                 {136.2, 140.46},
                                                 {151.39, 140.46},
                                                 {160.76, 131.09},
                                                 {161.12, 130.73},
                                                 {170.49, 121.36},
                                                 {170.49, 106.17},
                                                 {161.12, 96.794},
                                                 {99.725, 35.4},
                                                 {96.601, 32.276},
                                                 {96.601, 27.211},
                                                 {99.725, 24.087},
                                                 {112.33, 11.48}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ],
                                            StyleBox[
                                             {
                                              JoinedCurveBox[
                                               {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                               {
                                                {
                                                 {109.85, 148.06},
                                                 {59.648, 97.854},
                                                 {50.276, 88.482},
                                                 {50.276, 73.286},
                                                 {59.648, 63.913},
                                                 {69.021, 54.541},
                                                 {84.217, 54.541},
                                                 {93.589, 63.913},
                                                 {143.79, 114.12}
                                                }
                                               },
                                               CurveClosed -> {0}
                                              ]
                                             },
                                             {
                                              CapForm["Round"],
                                              JoinForm[{"Miter", 1.0}],
                                              Thickness[0.071749]
                                             },
                                             StripOnInput -> False
                                            ]
                                           },
                                           ImageSize -> 24
                                          ],
                                          GridBox[
                                           {
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"Wolfram\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox[
                                                TagBox[
                                                 DynamicModuleBox[
                                                  {boxObj, cellObj},
                                                  TagBox[
                                                   TagBox[
                                                    ButtonBox[
                                                     TagBox[
                                                      "\"{\[Ellipsis]}\"",
                                                      BoxForm`Undeploy,
                                                      DefaultBaseStyle -> {Deployed -> False}
                                                     ],
                                                     ButtonFunction :> {
                                                      CopyToClipboard[
                                                       "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                      ],
                                                      NotebookDelete[cellObj],
                                                      FrontEndExecute[
                                                       FrontEnd`AttachCell[
                                                        boxObj,
                                                        Cell[
                                                         BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                        ],
                                                        {1, {Center, Bottom}},
                                                        {Center, Top},
                                                        "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                       ]
                                                      ]
                                                     },
                                                     Evaluator -> Automatic,
                                                     Appearance -> {
                                                      "Default" -> None,
                                                      "Hover" ->
                                                       FrontEnd`FileName[
                                                        {"Typeset", "ClickToCopy"},
                                                        "Hover.9.png"
                                                       ],
                                                      "Pressed" ->
                                                       FrontEnd`FileName[
                                                        {"Typeset", "ClickToCopy"},
                                                        "Pressed.9.png"
                                                       ]
                                                     },
                                                     BaseStyle -> { },
                                                     DefaultBaseStyle -> { },
                                                     BaselinePosition -> Baseline,
                                                     FrameMargins -> 2,
                                                     Method -> "Preemptive"
                                                    ],
                                                    EventHandlerTag[
                                                     {
                                                      "MouseEntered" :>
                                                       (cellObj = 
                                                        MathLink`CallFrontEnd[
                                                         FrontEnd`AttachCell[
                                                          boxObj,
                                                          Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                          {1, {Center, Bottom}},
                                                          {Center, Top},
                                                          "ClosingActions" -> {"ParentChanged"}
                                                         ]
                                                        ]),
                                                      "MouseExited" :> NotebookDelete[cellObj],
                                                      PassEventsDown -> True,
                                                      Method -> "Preemptive",
                                                      PassEventsUp -> True
                                                     }
                                                    ]
                                                   ],
                                                   MouseAppearanceTag["LinkHand"]
                                                  ],
                                                  Initialization :> (boxObj = EvaluationBox[]),
                                                  DynamicModuleValues :> { },
                                                  UnsavedVariables :> {boxObj, cellObj},
                                                  BaseStyle -> {Editable -> False}
                                                 ],
                                                 Deploy,
                                                 DefaultBaseStyle -> "Deploy"
                                                ],
                                                "SummaryItem"
                                               ]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox[
                                                TagBox[
                                                 GridBox[
                                                  {
                                                   {
                                                    "\"WolframContext\"",
                                                    "\"WolframLanguageEvaluator\"",
                                                    "\"WolframAlpha\"",
                                                    "",
                                                    ""
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                 ],
                                                 "Grid"
                                                ],
                                                "SummaryItem"
                                               ]
                                              }
                                             ]
                                            },
                                            {
                                             RowBox[
                                              {
                                               TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                               "\[InvisibleSpace]",
                                               TagBox["\"BuiltIn\"", "SummaryItem"]
                                              }
                                             ]
                                            }
                                           },
                                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                           AutoDelete -> False,
                                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                           GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                           BaseStyle -> {
                                            ShowStringCharacters -> False,
                                            NumberMarks -> False,
                                            PrintPrecision -> 3,
                                            ShowSyntaxStyles -> False
                                           }
                                          ]
                                         }
                                        },
                                        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                        AutoDelete -> False,
                                        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                        BaselinePosition -> {1, 1}
                                       ]
                                     },
                                     Dynamic[Typeset`open$$],
                                     ImageSize -> Automatic
                                    ]
                                   },
                                   "SummaryPanel"
                                  ],
                                  DynamicModuleValues :> { }
                                 ],
                                 "]"
                                }
                               ],
                               RickHennigan`MCPServer`MCPServerObject[
                                <|
                                 "Name" -> "Wolfram",
                                 "Location" -> "BuiltIn",
                                 "Transport" -> "StandardInputOutput",
                                 "ServerVersion" -> "1.0.0",
                                 "ObjectVersion" -> 1,
                                 "LLMEvaluator" -> <|
                                  "Tools" -> {
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframContext",
                                     "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                     "Parameters" -> {
                                      "context" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                       "Required" -> True
                                      |>
                                     },
                                     "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ],
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframLanguageEvaluator",
                                     "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                     "Parameters" -> {
                                      "code" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "The Wolfram Language code to evaluate.",
                                       "Required" -> True
                                      |>,
                                      "timeConstraint" -> <|
                                       "Interpreter" -> "Integer",
                                       "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                       "Required" -> False
                                      |>
                                     },
                                     "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ],
                                   LLMTool[
                                    <|
                                     "Name" -> "WolframAlpha",
                                     "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                     "Parameters" -> {
                                      "query" -> <|
                                       "Interpreter" -> "String",
                                       "Help" -> "the input",
                                       "Required" -> True
                                      |>,
                                      "steps" -> <|
                                       "Interpreter" -> "Boolean",
                                       "Help" -> "whether to show step-by-step solution",
                                       "Required" -> False
                                      |>
                                     },
                                     "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                     "Options" -> { },
                                     "LLMPacletVersion" -> "1.6.10"
                                    |>
                                   ]
                                  }
                                 |>
                                |>
                               ],
                               Editable -> False,
                               SelectWithContents -> True,
                               Selectable -> False
                              ],
                              "SummaryItem"
                             ]
                            }
                           ]
                          },
                          {
                           RowBox[
                            {
                             TagBox[
                              TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                              "SummaryItemAnnotation"
                             ],
                             "\[InvisibleSpace]",
                             TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                            }
                           ]
                          }
                         },
                         AutoDelete -> False,
                         BaseStyle -> {
                          ShowStringCharacters -> False,
                          NumberMarks -> False,
                          PrintPrecision -> 3,
                          ShowSyntaxStyles -> False
                         },
                         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                         GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                        ]
                       }
                      },
                      AutoDelete -> False,
                      BaselinePosition -> {1, 1},
                      GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                      GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                     ]
                   },
                   Dynamic[Typeset`open$$],
                   ImageSize -> Automatic
                  ]
                 },
                 "SummaryPanel"
                ],
                DynamicModuleValues :> { }
               ],
               "]"
              }
             ],
             Success[
              "UninstallMCPServer",
              <|
               "MessageTemplate" :>
                MessageName[
                 RickHennigan`MCPServer`MCPServer,
                 "UninstallMCPServerNamed"
                ],
               "MessageParameters" -> {"Wolfram", "Claude Desktop"},
               "Location" ->
                File[
                 "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                ],
               "MCPServerObject" ->
                RickHennigan`MCPServer`MCPServerObject[
                 <|
                  "Name" -> "Wolfram",
                  "Location" -> "BuiltIn",
                  "Transport" -> "StandardInputOutput",
                  "ServerVersion" -> "1.0.0",
                  "ObjectVersion" -> 1,
                  "LLMEvaluator" -> <|
                   "Tools" -> {
                    LLMTool[
                     <|
                      "Name" -> "WolframContext",
                      "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                      "Parameters" -> {
                       "context" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                        "Required" -> True
                       |>
                      },
                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ],
                    LLMTool[
                     <|
                      "Name" -> "WolframLanguageEvaluator",
                      "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                      "Parameters" -> {
                       "code" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "The Wolfram Language code to evaluate.",
                        "Required" -> True
                       |>,
                       "timeConstraint" -> <|
                        "Interpreter" -> "Integer",
                        "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                        "Required" -> False
                       |>
                      },
                      "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ],
                    LLMTool[
                     <|
                      "Name" -> "WolframAlpha",
                      "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                      "Parameters" -> {
                       "query" -> <|
                        "Interpreter" -> "String",
                        "Help" -> "the input",
                        "Required" -> True
                       |>,
                       "steps" -> <|
                        "Interpreter" -> "Boolean",
                        "Help" -> "whether to show step-by-step solution",
                        "Required" -> False
                       |>
                      },
                      "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                      "Options" -> { },
                      "LLMPacletVersion" -> "1.6.10"
                     |>
                    ]
                   }
                  |>
                 |>
                ]
              |>
             ],
             Editable -> False,
             SelectWithContents -> True,
             Selectable -> False
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellLabel -> "Out[2]=",
         CellID -> 123756569
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 237682501
        ],
        Cell[
         "Uninstall all previously installed MCP servers:",
         "ExampleText",
         CellID -> 241790957
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"UninstallMCPServer", "[", "All", "]"}]],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 14944104
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["Success", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                                ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                               ],
                               Appearance -> None,
                               BaseStyle -> { },
                               ButtonFunction :> (Typeset`open$$ = True),
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             FrameBox[
                              StyleBox[
                               "\"\[Checkmark]\"",
                               StripOnInput -> False,
                               LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               FontSize -> 25,
                               FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                              ],
                              ContentPadding -> False,
                              FrameMargins -> {{0, 0}, {0, 0}},
                              FrameStyle -> None,
                              StripOnInput -> False
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   "\"Successfully uninstalled MCP server \\\"Wolfram\\\".\"",
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[
                                    {
                                     "File",
                                     "[",
                                     TemplateBox[
                                      {
                                       "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                      },
                                      "FileArgument"
                                     ],
                                     "]"
                                    }
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               }
                              },
                              AutoDelete -> False,
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                             ]
                            }
                           },
                           AutoDelete -> False,
                           BaselinePosition -> {1, 1},
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               Appearance -> None,
                               BaseStyle -> { },
                               ButtonFunction :> (Typeset`open$$ = False),
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             FrameBox[
                              StyleBox[
                               "\"\[Checkmark]\"",
                               StripOnInput -> False,
                               LineColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               FrontFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               BackFaceColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               GraphicsColor -> RGBColor[0.360784, 0.596078, 0.380392],
                               FontSize -> 25,
                               FontColor -> RGBColor[0.360784, 0.596078, 0.380392]
                              ],
                              ContentPadding -> False,
                              FrameMargins -> {{0, 0}, {0, 0}},
                              FrameStyle -> None,
                              StripOnInput -> False
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   "\"Successfully uninstalled MCP server \\\"Wolfram\\\".\"",
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[
                                    {
                                     "File",
                                     "[",
                                     TemplateBox[
                                      {
                                       "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                                      },
                                      "FileArgument"
                                     ],
                                     "]"
                                    }
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[
                                    {"\"MCPServerObject\"", "\": \""},
                                    "RowDefault"
                                   ],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   InterpretationBox[
                                    RowBox[
                                     {
                                      TagBox["MCPServerObject", "SummaryHead"],
                                      "[",
                                      DynamicModuleBox[
                                       {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                       TemplateBox[
                                        {
                                         PaneSelectorBox[
                                          {
                                           False ->
                                            GridBox[
                                             {
                                              {
                                               PaneBox[
                                                ButtonBox[
                                                 DynamicBox[
                                                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                 ],
                                                 ButtonFunction :> (Typeset`open$$ = True),
                                                 Appearance -> None,
                                                 BaseStyle -> { },
                                                 Evaluator -> Automatic,
                                                 Method -> "Preemptive"
                                                ],
                                                Alignment -> {Center, Center},
                                                ImageSize ->
                                                 Dynamic[
                                                  {
                                                   Automatic,
                                                   Times[
                                                    3.5,
                                                    Times[
                                                     CurrentValue["FontCapHeight"],
                                                     AbsoluteCurrentValue[Magnification]^(-1)
                                                    ]
                                                   ]
                                                  }
                                                 ]
                                               ],
                                               GraphicsBox[
                                                {
                                                 Thickness[0.005979],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {25.0, 97.147},
                                                      {92.882, 165.03},
                                                      {102.25, 174.4},
                                                      {117.45, 174.4},
                                                      {126.82, 165.03},
                                                      {136.2, 155.66},
                                                      {136.2, 140.46},
                                                      {126.82, 131.09},
                                                      {75.558, 79.823}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {
                                                     {
                                                      {0, 2, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0}
                                                     }
                                                    },
                                                    {
                                                     {
                                                      {76.265, 80.53},
                                                      {126.82, 131.09},
                                                      {136.2, 140.46},
                                                      {151.39, 140.46},
                                                      {160.76, 131.09},
                                                      {161.12, 130.73},
                                                      {170.49, 121.36},
                                                      {170.49, 106.17},
                                                      {161.12, 96.794},
                                                      {99.725, 35.4},
                                                      {96.601, 32.276},
                                                      {96.601, 27.211},
                                                      {99.725, 24.087},
                                                      {112.33, 11.48}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {109.85, 148.06},
                                                      {59.648, 97.854},
                                                      {50.276, 88.482},
                                                      {50.276, 73.286},
                                                      {59.648, 63.913},
                                                      {69.021, 54.541},
                                                      {84.217, 54.541},
                                                      {93.589, 63.913},
                                                      {143.79, 114.12}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ]
                                                },
                                                ImageSize -> 24
                                               ],
                                               GridBox[
                                                {
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"Wolfram\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                BaseStyle -> {
                                                 ShowStringCharacters -> False,
                                                 NumberMarks -> False,
                                                 PrintPrecision -> 3,
                                                 ShowSyntaxStyles -> False
                                                }
                                               ]
                                              }
                                             },
                                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                             AutoDelete -> False,
                                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                             BaselinePosition -> {1, 1}
                                            ],
                                           True ->
                                            GridBox[
                                             {
                                              {
                                               PaneBox[
                                                ButtonBox[
                                                 DynamicBox[
                                                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                 ],
                                                 ButtonFunction :> (Typeset`open$$ = False),
                                                 Appearance -> None,
                                                 BaseStyle -> { },
                                                 Evaluator -> Automatic,
                                                 Method -> "Preemptive"
                                                ],
                                                Alignment -> {Center, Center},
                                                ImageSize ->
                                                 Dynamic[
                                                  {
                                                   Automatic,
                                                   Times[
                                                    3.5,
                                                    Times[
                                                     CurrentValue["FontCapHeight"],
                                                     AbsoluteCurrentValue[Magnification]^(-1)
                                                    ]
                                                   ]
                                                  }
                                                 ]
                                               ],
                                               GraphicsBox[
                                                {
                                                 Thickness[0.005979],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {25.0, 97.147},
                                                      {92.882, 165.03},
                                                      {102.25, 174.4},
                                                      {117.45, 174.4},
                                                      {126.82, 165.03},
                                                      {136.2, 155.66},
                                                      {136.2, 140.46},
                                                      {126.82, 131.09},
                                                      {75.558, 79.823}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {
                                                     {
                                                      {0, 2, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0}
                                                     }
                                                    },
                                                    {
                                                     {
                                                      {76.265, 80.53},
                                                      {126.82, 131.09},
                                                      {136.2, 140.46},
                                                      {151.39, 140.46},
                                                      {160.76, 131.09},
                                                      {161.12, 130.73},
                                                      {170.49, 121.36},
                                                      {170.49, 106.17},
                                                      {161.12, 96.794},
                                                      {99.725, 35.4},
                                                      {96.601, 32.276},
                                                      {96.601, 27.211},
                                                      {99.725, 24.087},
                                                      {112.33, 11.48}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {109.85, 148.06},
                                                      {59.648, 97.854},
                                                      {50.276, 88.482},
                                                      {50.276, 73.286},
                                                      {59.648, 63.913},
                                                      {69.021, 54.541},
                                                      {84.217, 54.541},
                                                      {93.589, 63.913},
                                                      {143.79, 114.12}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ]
                                                },
                                                ImageSize -> 24
                                               ],
                                               GridBox[
                                                {
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"Wolfram\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox[
                                                     TagBox[
                                                      DynamicModuleBox[
                                                       {boxObj, cellObj},
                                                       TagBox[
                                                        TagBox[
                                                         ButtonBox[
                                                          TagBox[
                                                           "\"{\[Ellipsis]}\"",
                                                           BoxForm`Undeploy,
                                                           DefaultBaseStyle -> {Deployed -> False}
                                                          ],
                                                          ButtonFunction :> {
                                                           CopyToClipboard[
                                                            "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                           ],
                                                           NotebookDelete[cellObj],
                                                           FrontEndExecute[
                                                            FrontEnd`AttachCell[
                                                             boxObj,
                                                             Cell[
                                                              BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                             ],
                                                             {1, {Center, Bottom}},
                                                             {Center, Top},
                                                             "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                            ]
                                                           ]
                                                          },
                                                          Evaluator -> Automatic,
                                                          Appearance -> {
                                                           "Default" -> None,
                                                           "Hover" ->
                                                            FrontEnd`FileName[
                                                             {"Typeset", "ClickToCopy"},
                                                             "Hover.9.png"
                                                            ],
                                                           "Pressed" ->
                                                            FrontEnd`FileName[
                                                             {"Typeset", "ClickToCopy"},
                                                             "Pressed.9.png"
                                                            ]
                                                          },
                                                          BaseStyle -> { },
                                                          DefaultBaseStyle -> { },
                                                          BaselinePosition -> Baseline,
                                                          FrameMargins -> 2,
                                                          Method -> "Preemptive"
                                                         ],
                                                         EventHandlerTag[
                                                          {
                                                           "MouseEntered" :>
                                                            (cellObj = 
                                                             MathLink`CallFrontEnd[
                                                              FrontEnd`AttachCell[
                                                               boxObj,
                                                               Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                               {1, {Center, Bottom}},
                                                               {Center, Top},
                                                               "ClosingActions" -> {"ParentChanged"}
                                                              ]
                                                             ]),
                                                           "MouseExited" :> NotebookDelete[cellObj],
                                                           PassEventsDown -> True,
                                                           Method -> "Preemptive",
                                                           PassEventsUp -> True
                                                          }
                                                         ]
                                                        ],
                                                        MouseAppearanceTag["LinkHand"]
                                                       ],
                                                       Initialization :> (boxObj = EvaluationBox[]),
                                                       DynamicModuleValues :> { },
                                                       UnsavedVariables :> {boxObj, cellObj},
                                                       BaseStyle -> {Editable -> False}
                                                      ],
                                                      Deploy,
                                                      DefaultBaseStyle -> "Deploy"
                                                     ],
                                                     "SummaryItem"
                                                    ]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox[
                                                     TagBox[
                                                      GridBox[
                                                       {
                                                        {
                                                         "\"WolframContext\"",
                                                         "\"WolframLanguageEvaluator\"",
                                                         "\"WolframAlpha\"",
                                                         "",
                                                         ""
                                                        }
                                                       },
                                                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                       AutoDelete -> False,
                                                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                      ],
                                                      "Grid"
                                                     ],
                                                     "SummaryItem"
                                                    ]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"BuiltIn\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                BaseStyle -> {
                                                 ShowStringCharacters -> False,
                                                 NumberMarks -> False,
                                                 PrintPrecision -> 3,
                                                 ShowSyntaxStyles -> False
                                                }
                                               ]
                                              }
                                             },
                                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                             AutoDelete -> False,
                                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                             BaselinePosition -> {1, 1}
                                            ]
                                          },
                                          Dynamic[Typeset`open$$],
                                          ImageSize -> Automatic
                                         ]
                                        },
                                        "SummaryPanel"
                                       ],
                                       DynamicModuleValues :> { }
                                      ],
                                      "]"
                                     }
                                    ],
                                    RickHennigan`MCPServer`MCPServerObject[
                                     <|
                                      "Name" -> "Wolfram",
                                      "Location" -> "BuiltIn",
                                      "Transport" -> "StandardInputOutput",
                                      "ServerVersion" -> "1.0.0",
                                      "ObjectVersion" -> 1,
                                      "LLMEvaluator" -> <|
                                       "Tools" -> {
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframContext",
                                          "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                          "Parameters" -> {
                                           "context" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                            "Required" -> True
                                           |>
                                          },
                                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ],
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframLanguageEvaluator",
                                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                          "Parameters" -> {
                                           "code" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "The Wolfram Language code to evaluate.",
                                            "Required" -> True
                                           |>,
                                           "timeConstraint" -> <|
                                            "Interpreter" -> "Integer",
                                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                            "Required" -> False
                                           |>
                                          },
                                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ],
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframAlpha",
                                          "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                          "Parameters" -> {
                                           "query" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "the input",
                                            "Required" -> True
                                           |>,
                                           "steps" -> <|
                                            "Interpreter" -> "Boolean",
                                            "Help" -> "whether to show step-by-step solution",
                                            "Required" -> False
                                           |>
                                          },
                                          "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ]
                                       }
                                      |>
                                     |>
                                    ],
                                    Editable -> False,
                                    SelectWithContents -> True,
                                    Selectable -> False
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                                 }
                                ]
                               }
                              },
                              AutoDelete -> False,
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                             ]
                            }
                           },
                           AutoDelete -> False,
                           BaselinePosition -> {1, 1},
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  Success[
                   "UninstallMCPServer",
                   <|
                    "MessageTemplate" :>
                     MessageName[
                      RickHennigan`MCPServer`MCPServer,
                      "UninstallMCPServer"
                     ],
                    "MessageParameters" -> {"Wolfram"},
                    "Location" ->
                     File[
                      "C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json"
                     ],
                    "MCPServerObject" ->
                     RickHennigan`MCPServer`MCPServerObject[
                      <|
                       "Name" -> "Wolfram",
                       "Location" -> "BuiltIn",
                       "Transport" -> "StandardInputOutput",
                       "ServerVersion" -> "1.0.0",
                       "ObjectVersion" -> 1,
                       "LLMEvaluator" -> <|
                        "Tools" -> {
                         LLMTool[
                          <|
                           "Name" -> "WolframContext",
                           "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                           "Parameters" -> {
                            "context" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                             "Required" -> True
                            |>
                           },
                           "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ],
                         LLMTool[
                          <|
                           "Name" -> "WolframLanguageEvaluator",
                           "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                           "Parameters" -> {
                            "code" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "The Wolfram Language code to evaluate.",
                             "Required" -> True
                            |>,
                            "timeConstraint" -> <|
                             "Interpreter" -> "Integer",
                             "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                             "Required" -> False
                            |>
                           },
                           "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ],
                         LLMTool[
                          <|
                           "Name" -> "WolframAlpha",
                           "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                           "Parameters" -> {
                            "query" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "the input",
                             "Required" -> True
                            |>,
                            "steps" -> <|
                             "Interpreter" -> "Boolean",
                             "Help" -> "whether to show step-by-step solution",
                             "Required" -> False
                            |>
                           },
                           "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ]
                        }
                       |>
                      |>
                     ]
                   |>
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ],
                 ",",
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["Success", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = True),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             FrameBox[
                              StyleBox[
                               "\"\[Checkmark]\"",
                               Directive[RGBColor[0.360784, 0.596078, 0.380392], 25],
                               StripOnInput -> False
                              ],
                              ContentPadding -> False,
                              FrameStyle -> None,
                              FrameMargins -> {{0, 0}, {0, 0}},
                              StripOnInput -> False
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   "\"Successfully uninstalled MCP server \\\"Wolfram\\\".\"",
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[
                                    {
                                     "File",
                                     "[",
                                     TemplateBox[
                                      {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                      "FileArgument"
                                     ],
                                     "]"
                                    }
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = False),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             FrameBox[
                              StyleBox[
                               "\"\[Checkmark]\"",
                               Directive[RGBColor[0.360784, 0.596078, 0.380392], 25],
                               StripOnInput -> False
                              ],
                              ContentPadding -> False,
                              FrameStyle -> None,
                              FrameMargins -> {{0, 0}, {0, 0}},
                              StripOnInput -> False
                             ],
                             GridBox[
                              {
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   "\"Successfully uninstalled MCP server \\\"Wolfram\\\".\"",
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Location\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[
                                    {
                                     "File",
                                     "[",
                                     TemplateBox[
                                      {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                                      "FileArgument"
                                     ],
                                     "]"
                                    }
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[
                                    {"\"MCPServerObject\"", "\": \""},
                                    "RowDefault"
                                   ],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   InterpretationBox[
                                    RowBox[
                                     {
                                      TagBox["MCPServerObject", "SummaryHead"],
                                      "[",
                                      DynamicModuleBox[
                                       {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                       TemplateBox[
                                        {
                                         PaneSelectorBox[
                                          {
                                           False ->
                                            GridBox[
                                             {
                                              {
                                               PaneBox[
                                                ButtonBox[
                                                 DynamicBox[
                                                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                 ],
                                                 ButtonFunction :> (Typeset`open$$ = True),
                                                 Appearance -> None,
                                                 BaseStyle -> { },
                                                 Evaluator -> Automatic,
                                                 Method -> "Preemptive"
                                                ],
                                                Alignment -> {Center, Center},
                                                ImageSize ->
                                                 Dynamic[
                                                  {
                                                   Automatic,
                                                   Times[
                                                    3.5,
                                                    Times[
                                                     CurrentValue["FontCapHeight"],
                                                     AbsoluteCurrentValue[Magnification]^(-1)
                                                    ]
                                                   ]
                                                  }
                                                 ]
                                               ],
                                               GraphicsBox[
                                                {
                                                 Thickness[0.005979],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {25.0, 97.147},
                                                      {92.882, 165.03},
                                                      {102.25, 174.4},
                                                      {117.45, 174.4},
                                                      {126.82, 165.03},
                                                      {136.2, 155.66},
                                                      {136.2, 140.46},
                                                      {126.82, 131.09},
                                                      {75.558, 79.823}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {
                                                     {
                                                      {0, 2, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0}
                                                     }
                                                    },
                                                    {
                                                     {
                                                      {76.265, 80.53},
                                                      {126.82, 131.09},
                                                      {136.2, 140.46},
                                                      {151.39, 140.46},
                                                      {160.76, 131.09},
                                                      {161.12, 130.73},
                                                      {170.49, 121.36},
                                                      {170.49, 106.17},
                                                      {161.12, 96.794},
                                                      {99.725, 35.4},
                                                      {96.601, 32.276},
                                                      {96.601, 27.211},
                                                      {99.725, 24.087},
                                                      {112.33, 11.48}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {109.85, 148.06},
                                                      {59.648, 97.854},
                                                      {50.276, 88.482},
                                                      {50.276, 73.286},
                                                      {59.648, 63.913},
                                                      {69.021, 54.541},
                                                      {84.217, 54.541},
                                                      {93.589, 63.913},
                                                      {143.79, 114.12}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ]
                                                },
                                                ImageSize -> 24
                                               ],
                                               GridBox[
                                                {
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"Wolfram\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                BaseStyle -> {
                                                 ShowStringCharacters -> False,
                                                 NumberMarks -> False,
                                                 PrintPrecision -> 3,
                                                 ShowSyntaxStyles -> False
                                                }
                                               ]
                                              }
                                             },
                                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                             AutoDelete -> False,
                                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                             BaselinePosition -> {1, 1}
                                            ],
                                           True ->
                                            GridBox[
                                             {
                                              {
                                               PaneBox[
                                                ButtonBox[
                                                 DynamicBox[
                                                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                 ],
                                                 ButtonFunction :> (Typeset`open$$ = False),
                                                 Appearance -> None,
                                                 BaseStyle -> { },
                                                 Evaluator -> Automatic,
                                                 Method -> "Preemptive"
                                                ],
                                                Alignment -> {Center, Center},
                                                ImageSize ->
                                                 Dynamic[
                                                  {
                                                   Automatic,
                                                   Times[
                                                    3.5,
                                                    Times[
                                                     CurrentValue["FontCapHeight"],
                                                     AbsoluteCurrentValue[Magnification]^(-1)
                                                    ]
                                                   ]
                                                  }
                                                 ]
                                               ],
                                               GraphicsBox[
                                                {
                                                 Thickness[0.005979],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {25.0, 97.147},
                                                      {92.882, 165.03},
                                                      {102.25, 174.4},
                                                      {117.45, 174.4},
                                                      {126.82, 165.03},
                                                      {136.2, 155.66},
                                                      {136.2, 140.46},
                                                      {126.82, 131.09},
                                                      {75.558, 79.823}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {
                                                     {
                                                      {0, 2, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0},
                                                      {1, 3, 3},
                                                      {0, 1, 0}
                                                     }
                                                    },
                                                    {
                                                     {
                                                      {76.265, 80.53},
                                                      {126.82, 131.09},
                                                      {136.2, 140.46},
                                                      {151.39, 140.46},
                                                      {160.76, 131.09},
                                                      {161.12, 130.73},
                                                      {170.49, 121.36},
                                                      {170.49, 106.17},
                                                      {161.12, 96.794},
                                                      {99.725, 35.4},
                                                      {96.601, 32.276},
                                                      {96.601, 27.211},
                                                      {99.725, 24.087},
                                                      {112.33, 11.48}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ],
                                                 StyleBox[
                                                  {
                                                   JoinedCurveBox[
                                                    {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                                                    {
                                                     {
                                                      {109.85, 148.06},
                                                      {59.648, 97.854},
                                                      {50.276, 88.482},
                                                      {50.276, 73.286},
                                                      {59.648, 63.913},
                                                      {69.021, 54.541},
                                                      {84.217, 54.541},
                                                      {93.589, 63.913},
                                                      {143.79, 114.12}
                                                     }
                                                    },
                                                    CurveClosed -> {0}
                                                   ]
                                                  },
                                                  {
                                                   CapForm["Round"],
                                                   JoinForm[{"Miter", 1.0}],
                                                   Thickness[0.071749]
                                                  },
                                                  StripOnInput -> False
                                                 ]
                                                },
                                                ImageSize -> 24
                                               ],
                                               GridBox[
                                                {
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"Wolfram\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"StandardInputOutput\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox[
                                                     TagBox[
                                                      DynamicModuleBox[
                                                       {boxObj, cellObj},
                                                       TagBox[
                                                        TagBox[
                                                         ButtonBox[
                                                          TagBox[
                                                           "\"{\[Ellipsis]}\"",
                                                           BoxForm`Undeploy,
                                                           DefaultBaseStyle -> {Deployed -> False}
                                                          ],
                                                          ButtonFunction :> {
                                                           CopyToClipboard[
                                                            "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"RickHennigan`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                                           ],
                                                           NotebookDelete[cellObj],
                                                           FrontEndExecute[
                                                            FrontEnd`AttachCell[
                                                             boxObj,
                                                             Cell[
                                                              BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                                             ],
                                                             {1, {Center, Bottom}},
                                                             {Center, Top},
                                                             "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                                            ]
                                                           ]
                                                          },
                                                          Evaluator -> Automatic,
                                                          Appearance -> {
                                                           "Default" -> None,
                                                           "Hover" ->
                                                            FrontEnd`FileName[
                                                             {"Typeset", "ClickToCopy"},
                                                             "Hover.9.png"
                                                            ],
                                                           "Pressed" ->
                                                            FrontEnd`FileName[
                                                             {"Typeset", "ClickToCopy"},
                                                             "Pressed.9.png"
                                                            ]
                                                          },
                                                          BaseStyle -> { },
                                                          DefaultBaseStyle -> { },
                                                          BaselinePosition -> Baseline,
                                                          FrameMargins -> 2,
                                                          Method -> "Preemptive"
                                                         ],
                                                         EventHandlerTag[
                                                          {
                                                           "MouseEntered" :>
                                                            (cellObj = 
                                                             MathLink`CallFrontEnd[
                                                              FrontEnd`AttachCell[
                                                               boxObj,
                                                               Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                                               {1, {Center, Bottom}},
                                                               {Center, Top},
                                                               "ClosingActions" -> {"ParentChanged"}
                                                              ]
                                                             ]),
                                                           "MouseExited" :> NotebookDelete[cellObj],
                                                           PassEventsDown -> True,
                                                           Method -> "Preemptive",
                                                           PassEventsUp -> True
                                                          }
                                                         ]
                                                        ],
                                                        MouseAppearanceTag["LinkHand"]
                                                       ],
                                                       Initialization :> (boxObj = EvaluationBox[]),
                                                       DynamicModuleValues :> { },
                                                       UnsavedVariables :> {boxObj, cellObj},
                                                       BaseStyle -> {Editable -> False}
                                                      ],
                                                      Deploy,
                                                      DefaultBaseStyle -> "Deploy"
                                                     ],
                                                     "SummaryItem"
                                                    ]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox[
                                                     TagBox[
                                                      GridBox[
                                                       {
                                                        {
                                                         "\"WolframContext\"",
                                                         "\"WolframLanguageEvaluator\"",
                                                         "\"WolframAlpha\"",
                                                         "",
                                                         ""
                                                        }
                                                       },
                                                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                                       AutoDelete -> False,
                                                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                                      ],
                                                      "Grid"
                                                     ],
                                                     "SummaryItem"
                                                    ]
                                                   }
                                                  ]
                                                 },
                                                 {
                                                  RowBox[
                                                   {
                                                    TagBox["\"Location: \"", "SummaryItemAnnotation"],
                                                    "\[InvisibleSpace]",
                                                    TagBox["\"BuiltIn\"", "SummaryItem"]
                                                   }
                                                  ]
                                                 }
                                                },
                                                GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                AutoDelete -> False,
                                                GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                BaseStyle -> {
                                                 ShowStringCharacters -> False,
                                                 NumberMarks -> False,
                                                 PrintPrecision -> 3,
                                                 ShowSyntaxStyles -> False
                                                }
                                               ]
                                              }
                                             },
                                             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                             AutoDelete -> False,
                                             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                             BaselinePosition -> {1, 1}
                                            ]
                                          },
                                          Dynamic[Typeset`open$$],
                                          ImageSize -> Automatic
                                         ]
                                        },
                                        "SummaryPanel"
                                       ],
                                       DynamicModuleValues :> { }
                                      ],
                                      "]"
                                     }
                                    ],
                                    RickHennigan`MCPServer`MCPServerObject[
                                     <|
                                      "Name" -> "Wolfram",
                                      "Location" -> "BuiltIn",
                                      "Transport" -> "StandardInputOutput",
                                      "ServerVersion" -> "1.0.0",
                                      "ObjectVersion" -> 1,
                                      "LLMEvaluator" -> <|
                                       "Tools" -> {
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframContext",
                                          "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                          "Parameters" -> {
                                           "context" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                            "Required" -> True
                                           |>
                                          },
                                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ],
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframLanguageEvaluator",
                                          "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                          "Parameters" -> {
                                           "code" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "The Wolfram Language code to evaluate.",
                                            "Required" -> True
                                           |>,
                                           "timeConstraint" -> <|
                                            "Interpreter" -> "Integer",
                                            "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                            "Required" -> False
                                           |>
                                          },
                                          "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ],
                                        LLMTool[
                                         <|
                                          "Name" -> "WolframAlpha",
                                          "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                          "Parameters" -> {
                                           "query" -> <|
                                            "Interpreter" -> "String",
                                            "Help" -> "the input",
                                            "Required" -> True
                                           |>,
                                           "steps" -> <|
                                            "Interpreter" -> "Boolean",
                                            "Help" -> "whether to show step-by-step solution",
                                            "Required" -> False
                                           |>
                                          },
                                          "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                          "Options" -> { },
                                          "LLMPacletVersion" -> "1.6.10"
                                         |>
                                        ]
                                       }
                                      |>
                                     |>
                                    ],
                                    Selectable -> False,
                                    Editable -> False,
                                    SelectWithContents -> True
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox[
                                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"],
                                   "SummaryItemAnnotation"
                                  ],
                                  "\[InvisibleSpace]",
                                  TagBox["\"UninstallMCPServer\"", "SummaryItem"]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  Success[
                   "UninstallMCPServer",
                   <|
                    "MessageTemplate" :>
                     MessageName[
                      RickHennigan`MCPServer`MCPServer,
                      "UninstallMCPServer"
                     ],
                    "MessageParameters" -> {"Wolfram"},
                    "Location" -> File["C:/Users/rhennigan/.cursor/mcp.json"],
                    "MCPServerObject" ->
                     RickHennigan`MCPServer`MCPServerObject[
                      <|
                       "Name" -> "Wolfram",
                       "Location" -> "BuiltIn",
                       "Transport" -> "StandardInputOutput",
                       "ServerVersion" -> "1.0.0",
                       "ObjectVersion" -> 1,
                       "LLMEvaluator" -> <|
                        "Tools" -> {
                         LLMTool[
                          <|
                           "Name" -> "WolframContext",
                           "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                           "Parameters" -> {
                            "context" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                             "Required" -> True
                            |>
                           },
                           "Function" -> RickHennigan`MCPServer`DefaultServers`Private`relatedWolframContext,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ],
                         LLMTool[
                          <|
                           "Name" -> "WolframLanguageEvaluator",
                           "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                           "Parameters" -> {
                            "code" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "The Wolfram Language code to evaluate.",
                             "Required" -> True
                            |>,
                            "timeConstraint" -> <|
                             "Interpreter" -> "Integer",
                             "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                             "Required" -> False
                            |>
                           },
                           "Function" -> RickHennigan`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ],
                         LLMTool[
                          <|
                           "Name" -> "WolframAlpha",
                           "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                           "Parameters" -> {
                            "query" -> <|
                             "Interpreter" -> "String",
                             "Help" -> "the input",
                             "Required" -> True
                            |>,
                            "steps" -> <|
                             "Interpreter" -> "Boolean",
                             "Help" -> "whether to show step-by-step solution",
                             "Required" -> False
                            |>
                           },
                           "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                           "Options" -> { },
                           "LLMPacletVersion" -> "1.6.10"
                          |>
                         ]
                        }
                       |>
                      |>
                     ]
                   |>
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 467595449
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 77376132
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Scope", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 947858009
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Generalizations & Extensions", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 329630595
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 69348279
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 349016062
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 313769223
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Applications", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 51685201
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Properties & Relations", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 334842013
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Possible Issues", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 126903047
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 196287435
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 122185660
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 46861683],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["XX", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 20392503
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 26274187
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 301344626
        ],
        Cell[
         "RickHennigan/MCPServer",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 85939878
        ],
        Cell[
         "RickHennigan`MCPServer`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 264027903
        ],
        Cell[
         "RickHennigan/MCPServer/ref/UninstallMCPServer",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 113491534
        ]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 12645618],
        Cell["XXXX", "Keywords", CellID -> 421973294]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 156610164
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 226406610
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 134538307
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 235385939
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 85474685
        ]
       },
       Closed
      ]
     ]
    },
    Open
   ]
  ]
 },
 TaggingRules -> <|"Paclet" -> "RickHennigan/MCPServer"|>,
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ]
]