(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell["MCPServerObject", "ObjectName", CellID -> 534741533],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            ButtonBox[
             "MCPServerObject",
             BaseStyle -> "Link",
             ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObject"
            ],
            "[",
            "\"\!\(\*StyleBox[\"name\", \"TI\"]\)\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]retrieves the MCP server with the given name.\n",
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              ButtonBox[
               "MCPServerObject",
               BaseStyle -> "Link",
               ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObject"
              ],
              "[",
              StyleBox["\[Ellipsis]", "TR"],
              "]"
             }
            ],
            "[",
            "\"\!\(\*StyleBox[\"propery\", \"TI\"]\)\"",
            "]"
           }
          ]
         ],
         "InlineFormula"
        ],
        "\[LineSeparator]gives the specified property of the MCP server."
       }
      ],
      "Usage",
      CellID -> 260355213
     ],
     Cell[
      "Some predefined MCP servers that can be specified by name are:",
      "Notes",
      CellID -> 160459376
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"WolframAlpha\"",
          Cell[
           "an MCP server that is optimized for retrieving information from Wolfram|Alpha",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"WolframLanguage\"",
          Cell[
           "an MCP server that is optimized for writing and evaluating Wolfram Language code",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Wolfram\"",
          Cell[
           "a blend of Wolfram|Alpha and Wolfram Language functionality",
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 8640607
     ],
     Cell[
      TextData[
       {
        "Additionally, any other MCP servers you have created with ",
        Cell[
         BoxData[
          ButtonBox[
           "CreateMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/MCPServer/ref/CreateMCPServer"
          ]
         ],
         "InlineFormula"
        ],
        " can be referenced by name."
       }
      ],
      "Notes",
      CellID -> 676868825
     ],
     Cell[
      TextData[
       {
        "Some valid values for ",
        Cell[
         BoxData["\"\!\(\*StyleBox[\"property\", \"TI\"]\)\""],
         "InlineFormula"
        ],
        " are:"
       }
      ],
      "Notes",
      CellID -> 357554321
     ],
     Cell[
      BoxData[
       GridBox[
        {
         {
          Cell["      ", "ModInfo"],
          "\"LLMConfiguration\"",
          Cell[
           TextData[
            {
             "the ",
             Cell[
              BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
              "InlineFormula"
             ],
             " that defines the server features"
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Tools\"",
          Cell[
           TextData[
            {
             "the list of ",
             Cell[
              BoxData[ButtonBox["LLMTool", BaseStyle -> "Link"]],
              "InlineFormula"
             ],
             " objects available to the server"
            }
           ],
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"JSONConfiguration\"",
          Cell[
           "a string corresponding to a JSON configuration file that you can use in many MCP clients",
           "TableText"
          ]
         },
         {
          Cell["      ", "ModInfo"],
          "\"Installations\"",
          Cell[
           "locations where the server has been installed",
           "TableText"
          ]
         }
        }
       ]
      ],
      "2ColumnTableMod",
      CellID -> 72914843
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "See Also",
        Cell[
         BoxData[
          TemplateBox[
           {
            "SeeAlso",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related reference (function) pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "SeeAlsoSection",
      CellID -> 198101138
     ],
     Cell[
      TextData[
       {
        Cell[
         BoxData[
          ButtonBox[
           "CreateMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/MCPServer/ref/CreateMCPServer"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "InstallMCPServer",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/MCPServer/ref/InstallMCPServer"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "MCPServerObjectQ",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObjectQ"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
        Cell[
         BoxData[
          ButtonBox[
           "MCPServerObjects",
           BaseStyle -> "Link",
           ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObjects"
          ]
         ],
         "InlineSeeAlsoFunction",
         TaggingRules -> {"PageType" -> "Function"}
        ],
        Cell[
         BoxData[
          RowBox[
           {
            Cell[
             TextData[
              StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"]
             ]
            ],
            DynamicModuleBox[
             {
              nbobj$$ = 
               NotebookObject[
                "676291a0-5d78-0647-99c9-a978c93f6023",
                "b742fbe5-aeb5-1043-9bd0-e725636c713d"
               ],
              cellobj$$ = 
               CellObject[
                "7aeff7bd-9c94-4b47-9148-1445bf794490",
                "c412c916-728d-2940-bb75-d8c57bb6718d"
               ]
             },
             TemplateBox[
              {
               GraphicsBox[
                {
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  CircleBox[{0, 0}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{0, 0.62}, {0, -0.62}}]
                 },
                 {
                  Thickness[0.06],
                  StrokeForm[Hue[0.4167, 0.406, 0.502]],
                  LineBox[{{-0.62, 0}, {0.62, 0}}]
                 }
                },
                ImagePadding -> {{1.0, 1.0}, {2.4, 1.0}},
                ImageSize -> 16,
                PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}},
                BaselinePosition -> Center -> Center
               ],
               nbobj$$,
               cellobj$$
              },
              "InlineListingAddButton"
             ],
             Initialization :>
              (nbobj$$ = EvaluationNotebook[];
              cellobj$$ = EvaluationCell[])
            ]
           }
          ]
         ],
         "InlineListingAddButton"
        ]
       }
      ],
      "SeeAlso",
      CellID -> 128104088
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 35444352
     ],
     Cell["XXXX", "Tutorials", CellID -> 42188993]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 300119282
     ],
     Cell["XXXX", "MoreAbout", CellID -> 206588872]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 72589548
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 197001389]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 67777890
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"Wolfram`MCPServer`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 68239954
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 520429303
     ],
     Cell[
      "Retrieve built-in MCP servers:",
      "ExampleText",
      CellID -> 356093584
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[{"MCPServerObject", "[", "\"Wolfram\"", "]"}]
         ],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 384574518
        ],
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[
            {
             TagBox["MCPServerObject", "SummaryHead"],
             "[",
             DynamicModuleBox[
              {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
              TemplateBox[
               {
                PaneSelectorBox[
                 {
                  False ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = True),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"Wolfram\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ],
                  True ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = False),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"Wolfram\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             DynamicModuleBox[
                              {boxObj, cellObj},
                              TagBox[
                               TagBox[
                                ButtonBox[
                                 TagBox[
                                  "\"{\[Ellipsis]}\"",
                                  BoxForm`Undeploy,
                                  DefaultBaseStyle -> {Deployed -> False}
                                 ],
                                 ButtonFunction :> {
                                  CopyToClipboard[
                                   "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                  ],
                                  NotebookDelete[cellObj],
                                  FrontEndExecute[
                                   FrontEnd`AttachCell[
                                    boxObj,
                                    Cell[
                                     BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                    ],
                                    {1, {Center, Bottom}},
                                    {Center, Top},
                                    "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                   ]
                                  ]
                                 },
                                 Evaluator -> Automatic,
                                 Appearance -> {
                                  "Default" -> None,
                                  "Hover" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Hover.9.png"
                                   ],
                                  "Pressed" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Pressed.9.png"
                                   ]
                                 },
                                 BaseStyle -> { },
                                 DefaultBaseStyle -> { },
                                 BaselinePosition -> Baseline,
                                 FrameMargins -> 2,
                                 Method -> "Preemptive"
                                ],
                                EventHandlerTag[
                                 {
                                  "MouseEntered" :>
                                   (cellObj = 
                                    MathLink`CallFrontEnd[
                                     FrontEnd`AttachCell[
                                      boxObj,
                                      Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                      {1, {Center, Bottom}},
                                      {Center, Top},
                                      "ClosingActions" -> {"ParentChanged"}
                                     ]
                                    ]),
                                  "MouseExited" :> NotebookDelete[cellObj],
                                  PassEventsDown -> True,
                                  Method -> "Preemptive",
                                  PassEventsUp -> True
                                 }
                                ]
                               ],
                               MouseAppearanceTag["LinkHand"]
                              ],
                              Initialization :> (boxObj = EvaluationBox[]),
                              DynamicModuleValues :> { },
                              UnsavedVariables :> {boxObj, cellObj},
                              BaseStyle -> {Editable -> False}
                             ],
                             Deploy,
                             DefaultBaseStyle -> "Deploy"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             GridBox[
                              {
                               {
                                "\"WolframContext\"",
                                "\"WolframLanguageEvaluator\"",
                                "\"WolframAlpha\"",
                                "",
                                ""
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                             ],
                             "Grid"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Location: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"BuiltIn\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ]
                 },
                 Dynamic[Typeset`open$$],
                 ImageSize -> Automatic
                ]
               },
               "SummaryPanel"
              ],
              DynamicModuleValues :> { }
             ],
             "]"
            }
           ],
           Wolfram`MCPServer`MCPServerObject[
            <|
             "Name" -> "Wolfram",
             "Location" -> "BuiltIn",
             "Transport" -> "StandardInputOutput",
             "ServerVersion" -> "1.0.0",
             "ObjectVersion" -> 1,
             "LLMEvaluator" -> <|
              "Tools" -> {
               LLMTool[
                <|
                 "Name" -> "WolframContext",
                 "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                 "Parameters" -> {
                  "context" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                   "Required" -> True
                  |>
                 },
                 "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframContext,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ],
               LLMTool[
                <|
                 "Name" -> "WolframLanguageEvaluator",
                 "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                 "Parameters" -> {
                  "code" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "The Wolfram Language code to evaluate.",
                   "Required" -> True
                  |>,
                  "timeConstraint" -> <|
                   "Interpreter" -> "Integer",
                   "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                   "Required" -> False
                  |>
                 },
                 "Function" -> Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ],
               LLMTool[
                <|
                 "Name" -> "WolframAlpha",
                 "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                 "Parameters" -> {
                  "query" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "the input",
                   "Required" -> True
                  |>,
                  "steps" -> <|
                   "Interpreter" -> "Boolean",
                   "Help" -> "whether to show step-by-step solution",
                   "Required" -> False
                  |>
                 },
                 "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ]
              }
             |>
            |>
           ],
           Editable -> False,
           SelectWithContents -> True,
           Selectable -> False
          ]
         ],
         "Output",
         CellLabel -> "Out[1]=",
         CellID -> 50791210
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[{"MCPServerObject", "[", "\"WolframAlpha\"", "]"}]
         ],
         "Input",
         CellLabel -> "In[2]:=",
         CellID -> 292922220
        ],
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[
            {
             TagBox["MCPServerObject", "SummaryHead"],
             "[",
             DynamicModuleBox[
              {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
              TemplateBox[
               {
                PaneSelectorBox[
                 {
                  False ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = True),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"WolframAlpha\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ],
                  True ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = False),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"WolframAlpha\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             DynamicModuleBox[
                              {boxObj, cellObj},
                              TagBox[
                               TagBox[
                                ButtonBox[
                                 TagBox[
                                  "\"{\[Ellipsis]}\"",
                                  BoxForm`Undeploy,
                                  DefaultBaseStyle -> {Deployed -> False}
                                 ],
                                 ButtonFunction :> {
                                  CopyToClipboard[
                                   "{\n\t\"mcpServers\":{\n\t\t\"WolframAlpha\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframAlpha\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                  ],
                                  NotebookDelete[cellObj],
                                  FrontEndExecute[
                                   FrontEnd`AttachCell[
                                    boxObj,
                                    Cell[
                                     BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                    ],
                                    {1, {Center, Bottom}},
                                    {Center, Top},
                                    "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                   ]
                                  ]
                                 },
                                 Evaluator -> Automatic,
                                 Appearance -> {
                                  "Default" -> None,
                                  "Hover" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Hover.9.png"
                                   ],
                                  "Pressed" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Pressed.9.png"
                                   ]
                                 },
                                 BaseStyle -> { },
                                 DefaultBaseStyle -> { },
                                 BaselinePosition -> Baseline,
                                 FrameMargins -> 2,
                                 Method -> "Preemptive"
                                ],
                                EventHandlerTag[
                                 {
                                  "MouseEntered" :>
                                   (cellObj = 
                                    MathLink`CallFrontEnd[
                                     FrontEnd`AttachCell[
                                      boxObj,
                                      Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                      {1, {Center, Bottom}},
                                      {Center, Top},
                                      "ClosingActions" -> {"ParentChanged"}
                                     ]
                                    ]),
                                  "MouseExited" :> NotebookDelete[cellObj],
                                  PassEventsDown -> True,
                                  Method -> "Preemptive",
                                  PassEventsUp -> True
                                 }
                                ]
                               ],
                               MouseAppearanceTag["LinkHand"]
                              ],
                              Initialization :> (boxObj = EvaluationBox[]),
                              DynamicModuleValues :> { },
                              UnsavedVariables :> {boxObj, cellObj},
                              BaseStyle -> {Editable -> False}
                             ],
                             Deploy,
                             DefaultBaseStyle -> "Deploy"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             GridBox[
                              {
                               {"\"WolframAlphaContext\"", "\"WolframAlpha\"", "", "", ""}
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                             ],
                             "Grid"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Location: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"BuiltIn\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ]
                 },
                 Dynamic[Typeset`open$$],
                 ImageSize -> Automatic
                ]
               },
               "SummaryPanel"
              ],
              DynamicModuleValues :> { }
             ],
             "]"
            }
           ],
           Wolfram`MCPServer`MCPServerObject[
            <|
             "Name" -> "WolframAlpha",
             "Location" -> "BuiltIn",
             "Transport" -> "StandardInputOutput",
             "ServerVersion" -> "1.0.0",
             "ObjectVersion" -> 1,
             "LLMEvaluator" -> <|
              "Tools" -> {
               LLMTool[
                <|
                 "Name" -> "WolframAlphaContext",
                 "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                 "Parameters" -> {
                  "context" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                   "Required" -> True
                  |>
                 },
                 "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ],
               LLMTool[
                <|
                 "Name" -> "WolframAlpha",
                 "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                 "Parameters" -> {
                  "query" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "the input",
                   "Required" -> True
                  |>,
                  "steps" -> <|
                   "Interpreter" -> "Boolean",
                   "Help" -> "whether to show step-by-step solution",
                   "Required" -> False
                  |>
                 },
                 "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ]
              }
             |>
            |>
           ],
           Editable -> False,
           SelectWithContents -> True,
           Selectable -> False
          ]
         ],
         "Output",
         CellLabel -> "Out[2]=",
         CellID -> 121904750
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {"MCPServerObject", "[", "\"WolframLanguage\"", "]"}
          ]
         ],
         "Input",
         CellLabel -> "In[3]:=",
         CellID -> 139451396
        ],
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[
            {
             TagBox["MCPServerObject", "SummaryHead"],
             "[",
             DynamicModuleBox[
              {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
              TemplateBox[
               {
                PaneSelectorBox[
                 {
                  False ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = True),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"WolframLanguage\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ],
                  True ->
                   GridBox[
                    {
                     {
                      PaneBox[
                       ButtonBox[
                        DynamicBox[
                         FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                        ],
                        ButtonFunction :> (Typeset`open$$ = False),
                        Appearance -> None,
                        BaseStyle -> { },
                        Evaluator -> Automatic,
                        Method -> "Preemptive"
                       ],
                       Alignment -> {Center, Center},
                       ImageSize ->
                        Dynamic[
                         {
                          Automatic,
                          Times[
                           3.5,
                           Times[
                            CurrentValue["FontCapHeight"],
                            AbsoluteCurrentValue[Magnification]^(-1)
                           ]
                          ]
                         }
                        ]
                      ],
                      GraphicsBox[
                       {
                        Thickness[0.005979],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {25.0, 97.147},
                             {92.882, 165.03},
                             {102.25, 174.4},
                             {117.45, 174.4},
                             {126.82, 165.03},
                             {136.2, 155.66},
                             {136.2, 140.46},
                             {126.82, 131.09},
                             {75.558, 79.823}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {
                            {
                             {0, 2, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0},
                             {1, 3, 3},
                             {0, 1, 0}
                            }
                           },
                           {
                            {
                             {76.265, 80.53},
                             {126.82, 131.09},
                             {136.2, 140.46},
                             {151.39, 140.46},
                             {160.76, 131.09},
                             {161.12, 130.73},
                             {170.49, 121.36},
                             {170.49, 106.17},
                             {161.12, 96.794},
                             {99.725, 35.4},
                             {96.601, 32.276},
                             {96.601, 27.211},
                             {99.725, 24.087},
                             {112.33, 11.48}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ],
                        StyleBox[
                         {
                          JoinedCurveBox[
                           {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                           {
                            {
                             {109.85, 148.06},
                             {59.648, 97.854},
                             {50.276, 88.482},
                             {50.276, 73.286},
                             {59.648, 63.913},
                             {69.021, 54.541},
                             {84.217, 54.541},
                             {93.589, 63.913},
                             {143.79, 114.12}
                            }
                           },
                           CurveClosed -> {0}
                          ]
                         },
                         {
                          CapForm["Round"],
                          JoinForm[{"Miter", 1.0}],
                          Thickness[0.071749]
                         },
                         StripOnInput -> False
                        ]
                       },
                       ImageSize -> 24
                      ],
                      GridBox[
                       {
                        {
                         RowBox[
                          {
                           TagBox["\"Name: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"WolframLanguage\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"StandardInputOutput\"", "SummaryItem"]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             DynamicModuleBox[
                              {boxObj, cellObj},
                              TagBox[
                               TagBox[
                                ButtonBox[
                                 TagBox[
                                  "\"{\[Ellipsis]}\"",
                                  BoxForm`Undeploy,
                                  DefaultBaseStyle -> {Deployed -> False}
                                 ],
                                 ButtonFunction :> {
                                  CopyToClipboard[
                                   "{\n\t\"mcpServers\":{\n\t\t\"WolframLanguage\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframLanguage\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                  ],
                                  NotebookDelete[cellObj],
                                  FrontEndExecute[
                                   FrontEnd`AttachCell[
                                    boxObj,
                                    Cell[
                                     BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                    ],
                                    {1, {Center, Bottom}},
                                    {Center, Top},
                                    "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                   ]
                                  ]
                                 },
                                 Evaluator -> Automatic,
                                 Appearance -> {
                                  "Default" -> None,
                                  "Hover" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Hover.9.png"
                                   ],
                                  "Pressed" ->
                                   FrontEnd`FileName[
                                    {"Typeset", "ClickToCopy"},
                                    "Pressed.9.png"
                                   ]
                                 },
                                 BaseStyle -> { },
                                 DefaultBaseStyle -> { },
                                 BaselinePosition -> Baseline,
                                 FrameMargins -> 2,
                                 Method -> "Preemptive"
                                ],
                                EventHandlerTag[
                                 {
                                  "MouseEntered" :>
                                   (cellObj = 
                                    MathLink`CallFrontEnd[
                                     FrontEnd`AttachCell[
                                      boxObj,
                                      Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                      {1, {Center, Bottom}},
                                      {Center, Top},
                                      "ClosingActions" -> {"ParentChanged"}
                                     ]
                                    ]),
                                  "MouseExited" :> NotebookDelete[cellObj],
                                  PassEventsDown -> True,
                                  Method -> "Preemptive",
                                  PassEventsUp -> True
                                 }
                                ]
                               ],
                               MouseAppearanceTag["LinkHand"]
                              ],
                              Initialization :> (boxObj = EvaluationBox[]),
                              DynamicModuleValues :> { },
                              UnsavedVariables :> {boxObj, cellObj},
                              BaseStyle -> {Editable -> False}
                             ],
                             Deploy,
                             DefaultBaseStyle -> "Deploy"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox[
                            TagBox[
                             GridBox[
                              {
                               {
                                "\"WolframLanguageContext\"",
                                "\"WolframLanguageEvaluator\"",
                                "",
                                "",
                                ""
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                             ],
                             "Grid"
                            ],
                            "SummaryItem"
                           ]
                          }
                         ]
                        },
                        {
                         RowBox[
                          {
                           TagBox["\"Location: \"", "SummaryItemAnnotation"],
                           "\[InvisibleSpace]",
                           TagBox["\"BuiltIn\"", "SummaryItem"]
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                       BaseStyle -> {
                        ShowStringCharacters -> False,
                        NumberMarks -> False,
                        PrintPrecision -> 3,
                        ShowSyntaxStyles -> False
                       }
                      ]
                     }
                    },
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                    AutoDelete -> False,
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    BaselinePosition -> {1, 1}
                   ]
                 },
                 Dynamic[Typeset`open$$],
                 ImageSize -> Automatic
                ]
               },
               "SummaryPanel"
              ],
              DynamicModuleValues :> { }
             ],
             "]"
            }
           ],
           Wolfram`MCPServer`MCPServerObject[
            <|
             "Name" -> "WolframLanguage",
             "Location" -> "BuiltIn",
             "Transport" -> "StandardInputOutput",
             "ServerVersion" -> "1.0.0",
             "ObjectVersion" -> 1,
             "LLMEvaluator" -> <|
              "Tools" -> {
               LLMTool[
                <|
                 "Name" -> "WolframLanguageContext",
                 "Description" -> "Uses semantic search to retrieve information from various sources that can be used to help write Wolfram Language code. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                 "Parameters" -> {
                  "context" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                   "Required" -> True
                  |>
                 },
                 "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedDocumentation,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ],
               LLMTool[
                <|
                 "Name" -> "WolframLanguageEvaluator",
                 "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                 "Parameters" -> {
                  "code" -> <|
                   "Interpreter" -> "String",
                   "Help" -> "The Wolfram Language code to evaluate.",
                   "Required" -> True
                  |>,
                  "timeConstraint" -> <|
                   "Interpreter" -> "Integer",
                   "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                   "Required" -> False
                  |>
                 },
                 "Function" -> Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                 "Options" -> { },
                 "LLMPacletVersion" -> "1.6.10"
                |>
               ]
              }
             |>
            |>
           ],
           Editable -> False,
           SelectWithContents -> True,
           Selectable -> False
          ]
         ],
         "Output",
         CellLabel -> "Out[3]=",
         CellID -> 26168514
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 542755697
        ],
        Cell[
         "Create a custom MCP server then retrieve it by name:",
         "ExampleText",
         CellID -> 152523696
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "CreateMCPServer",
               "[",
               RowBox[
                {
                 "\"My MCP Server\"",
                 ",",
                 RowBox[
                  {
                   "<|",
                   RowBox[
                    {
                     "\"Tools\"",
                     "->",
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         "LLMTool",
                         "[",
                         RowBox[
                          {
                           "\"PrimeFinder\"",
                           ",",
                           RowBox[{"{", RowBox[{"\"n\"", "->", "\"Integer\""}], "}"}],
                           ",",
                           RowBox[{RowBox[{"Prime", "[", "#n", "]"}], "&"}]
                          }
                         ],
                         "]"
                        }
                       ],
                       "}"
                      }
                     ]
                    }
                   ],
                   "|>"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 410795458
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["MCPServerObject", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"My MCP Server\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"My MCP Server\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                DynamicModuleBox[
                                 {boxObj, cellObj},
                                 TagBox[
                                  TagBox[
                                   ButtonBox[
                                    TagBox[
                                     "\"{\[Ellipsis]}\"",
                                     BoxForm`Undeploy,
                                     DefaultBaseStyle -> {Deployed -> False}
                                    ],
                                    ButtonFunction :> {
                                     CopyToClipboard[
                                      "{\n\t\"mcpServers\":{\n\t\t\"My MCP Server\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"My MCP Server\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                     ],
                                     NotebookDelete[cellObj],
                                     FrontEndExecute[
                                      FrontEnd`AttachCell[
                                       boxObj,
                                       Cell[
                                        BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                       ],
                                       {1, {Center, Bottom}},
                                       {Center, Top},
                                       "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                      ]
                                     ]
                                    },
                                    Evaluator -> Automatic,
                                    Appearance -> {
                                     "Default" -> None,
                                     "Hover" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Hover.9.png"
                                      ],
                                     "Pressed" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Pressed.9.png"
                                      ]
                                    },
                                    BaseStyle -> { },
                                    DefaultBaseStyle -> { },
                                    BaselinePosition -> Baseline,
                                    FrameMargins -> 2,
                                    Method -> "Preemptive"
                                   ],
                                   EventHandlerTag[
                                    {
                                     "MouseEntered" :>
                                      (cellObj = 
                                       MathLink`CallFrontEnd[
                                        FrontEnd`AttachCell[
                                         boxObj,
                                         Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                         {1, {Center, Bottom}},
                                         {Center, Top},
                                         "ClosingActions" -> {"ParentChanged"}
                                        ]
                                       ]),
                                     "MouseExited" :> NotebookDelete[cellObj],
                                     PassEventsDown -> True,
                                     Method -> "Preemptive",
                                     PassEventsUp -> True
                                    }
                                   ]
                                  ],
                                  MouseAppearanceTag["LinkHand"]
                                 ],
                                 Initialization :> (boxObj = EvaluationBox[]),
                                 DynamicModuleValues :> { },
                                 UnsavedVariables :> {boxObj, cellObj},
                                 BaseStyle -> {Editable -> False}
                                ],
                                Deploy,
                                DefaultBaseStyle -> "Deploy"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                GridBox[
                                 {{"\"PrimeFinder\"", "", "", "", ""}},
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                ],
                                "Grid"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Location: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\\\\ApplicationData\\\\Wolfram\\\\MCPServer\\\\Servers\\\\My%20MCP%20Server\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Wolfram`MCPServer`MCPServerObject[
               <|
                "Name" -> "My MCP Server",
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "PrimeFinder",
                    "Description" -> "",
                    "Parameters" -> {
                     "n" -> <|
                      "Interpreter" -> "Integer",
                      "Help" -> Missing["NotSpecified"],
                      "Required" -> True
                     |>
                    },
                    "Function" -> (Prime[#n] &),
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>,
                "Location" ->
                 File[
                  "C:\\Users\\rhennigan\\AppData\\Roaming\\Wolfram\\ApplicationData\\Wolfram\\MCPServer\\Servers\\My%20MCP%20Server"
                 ],
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 366691072
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"MCPServerObject", "[", "\"My MCP Server\"", "]"}]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 95282960
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["MCPServerObject", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                             {
                              {
                               {25.0, 97.147},
                               {92.882, 165.03},
                               {102.25, 174.4},
                               {117.45, 174.4},
                               {126.82, 165.03},
                               {136.2, 155.66},
                               {136.2, 140.46},
                               {126.82, 131.09},
                               {75.558, 79.823}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           },
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {1, 3, 3},
                               {0, 1, 0},
                               {1, 3, 3},
                               {0, 1, 0},
                               {1, 3, 3},
                               {0, 1, 0}
                              }
                             },
                             {
                              {
                               {76.265, 80.53},
                               {126.82, 131.09},
                               {136.2, 140.46},
                               {151.39, 140.46},
                               {160.76, 131.09},
                               {161.12, 130.73},
                               {170.49, 121.36},
                               {170.49, 106.17},
                               {161.12, 96.794},
                               {99.725, 35.4},
                               {96.601, 32.276},
                               {96.601, 27.211},
                               {99.725, 24.087},
                               {112.33, 11.48}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           },
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                             {
                              {
                               {109.85, 148.06},
                               {59.648, 97.854},
                               {50.276, 88.482},
                               {50.276, 73.286},
                               {59.648, 63.913},
                               {69.021, 54.541},
                               {84.217, 54.541},
                               {93.589, 63.913},
                               {143.79, 114.12}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           }
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"My MCP Server\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                             {
                              {
                               {25.0, 97.147},
                               {92.882, 165.03},
                               {102.25, 174.4},
                               {117.45, 174.4},
                               {126.82, 165.03},
                               {136.2, 155.66},
                               {136.2, 140.46},
                               {126.82, 131.09},
                               {75.558, 79.823}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           },
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {
                              {
                               {0, 2, 0},
                               {1, 3, 3},
                               {0, 1, 0},
                               {1, 3, 3},
                               {0, 1, 0},
                               {1, 3, 3},
                               {0, 1, 0}
                              }
                             },
                             {
                              {
                               {76.265, 80.53},
                               {126.82, 131.09},
                               {136.2, 140.46},
                               {151.39, 140.46},
                               {160.76, 131.09},
                               {161.12, 130.73},
                               {170.49, 121.36},
                               {170.49, 106.17},
                               {161.12, 96.794},
                               {99.725, 35.4},
                               {96.601, 32.276},
                               {96.601, 27.211},
                               {99.725, 24.087},
                               {112.33, 11.48}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           },
                           {
                            Thickness[0.071749],
                            CapForm["Round"],
                            JoinForm[{"Miter", 1.0}],
                            JoinedCurveBox[
                             {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                             {
                              {
                               {109.85, 148.06},
                               {59.648, 97.854},
                               {50.276, 88.482},
                               {50.276, 73.286},
                               {59.648, 63.913},
                               {69.021, 54.541},
                               {84.217, 54.541},
                               {93.589, 63.913},
                               {143.79, 114.12}
                              }
                             },
                             CurveClosed -> {0}
                            ]
                           }
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"My MCP Server\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                DynamicModuleBox[
                                 {boxObj, cellObj},
                                 TagBox[
                                  TagBox[
                                   ButtonBox[
                                    TagBox[
                                     "\"{\[Ellipsis]}\"",
                                     BoxForm`Undeploy,
                                     DefaultBaseStyle -> {Deployed -> False}
                                    ],
                                    Appearance -> {
                                     "Default" -> None,
                                     "Hover" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Hover.9.png"
                                      ],
                                     "Pressed" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Pressed.9.png"
                                      ]
                                    },
                                    BaseStyle -> { },
                                    BaselinePosition -> Baseline,
                                    ButtonFunction :> {
                                     CopyToClipboard[
                                      "{\n\t\"mcpServers\":{\n\t\t\"My MCP Server\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"My MCP Server\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                     ],
                                     NotebookDelete[cellObj],
                                     FrontEndExecute[
                                      FrontEnd`AttachCell[
                                       boxObj,
                                       Cell[
                                        BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                       ],
                                       {1, {Center, Bottom}},
                                       {Center, Top},
                                       "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                      ]
                                     ]
                                    },
                                    DefaultBaseStyle -> { },
                                    Evaluator -> Automatic,
                                    FrameMargins -> 2,
                                    Method -> "Preemptive"
                                   ],
                                   EventHandlerTag[
                                    {
                                     "MouseEntered" :>
                                      (cellObj = 
                                       MathLink`CallFrontEnd[
                                        FrontEnd`AttachCell[
                                         boxObj,
                                         Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                         {1, {Center, Bottom}},
                                         {Center, Top},
                                         "ClosingActions" -> {"ParentChanged"}
                                        ]
                                       ]),
                                     "MouseExited" :> NotebookDelete[cellObj],
                                     PassEventsDown -> True,
                                     Method -> "Preemptive",
                                     PassEventsUp -> True
                                    }
                                   ]
                                  ],
                                  MouseAppearanceTag["LinkHand"]
                                 ],
                                 BaseStyle -> {Editable -> False},
                                 DynamicModuleValues :> { },
                                 Initialization :> (boxObj = EvaluationBox[]),
                                 UnsavedVariables :> {boxObj, cellObj}
                                ],
                                Deploy,
                                DefaultBaseStyle -> "Deploy"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                GridBox[
                                 {{"\"PrimeFinder\"", "", "", "", ""}},
                                 AutoDelete -> False,
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                ],
                                "Grid"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Location: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               RowBox[
                                {
                                 "File",
                                 "[",
                                 TemplateBox[
                                  {
                                   "\"C:\\\\Users\\\\rhennigan\\\\AppData\\\\Roaming\\\\Wolfram\\\\ApplicationData\\\\Wolfram\\\\MCPServer\\\\Servers\\\\My%20MCP%20Server\""
                                  },
                                  "FileArgument"
                                 ],
                                 "]"
                                }
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Wolfram`MCPServer`MCPServerObject[
               <|
                "Name" -> "My MCP Server",
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "PrimeFinder",
                    "Description" -> "",
                    "Parameters" -> {
                     "n" -> <|
                      "Interpreter" -> "Integer",
                      "Help" -> Missing["NotSpecified"],
                      "Required" -> True
                     |>
                    },
                    "Function" -> (Prime[#n] &),
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>,
                "Location" ->
                 File[
                  "C:\\Users\\rhennigan\\AppData\\Roaming\\Wolfram\\ApplicationData\\Wolfram\\MCPServer\\Servers\\My%20MCP%20Server"
                 ],
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 259402010
           ]
          },
          Open
         ]
        ],
        Cell[
         BoxData[RowBox[{"DeleteObject", "[", "%", "]"}]],
         "Input",
         CellLabel -> "In[3]:=",
         CellID -> 273523327
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 13421464
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Scope", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 235304446
        ],
        Cell[
         TextData[
          {
           "Get an ",
           Cell[
            BoxData[
             ButtonBox[
              "MCPServerObject",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObject"
             ]
            ],
            "InlineFormula"
           ],
           ":"
          }
         ],
         "ExampleText",
         CellID -> 167855219
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "server",
               "=",
               RowBox[{"MCPServerObject", "[", "\"Wolfram\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 248247119
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["MCPServerObject", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"Wolfram\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"Wolfram\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                DynamicModuleBox[
                                 {boxObj, cellObj},
                                 TagBox[
                                  TagBox[
                                   ButtonBox[
                                    TagBox[
                                     "\"{\[Ellipsis]}\"",
                                     BoxForm`Undeploy,
                                     DefaultBaseStyle -> {Deployed -> False}
                                    ],
                                    ButtonFunction :> {
                                     CopyToClipboard[
                                      "{\n\t\"mcpServers\":{\n\t\t\"Wolfram\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"Wolfram\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                     ],
                                     NotebookDelete[cellObj],
                                     FrontEndExecute[
                                      FrontEnd`AttachCell[
                                       boxObj,
                                       Cell[
                                        BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                       ],
                                       {1, {Center, Bottom}},
                                       {Center, Top},
                                       "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                      ]
                                     ]
                                    },
                                    Evaluator -> Automatic,
                                    Appearance -> {
                                     "Default" -> None,
                                     "Hover" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Hover.9.png"
                                      ],
                                     "Pressed" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Pressed.9.png"
                                      ]
                                    },
                                    BaseStyle -> { },
                                    DefaultBaseStyle -> { },
                                    BaselinePosition -> Baseline,
                                    FrameMargins -> 2,
                                    Method -> "Preemptive"
                                   ],
                                   EventHandlerTag[
                                    {
                                     "MouseEntered" :>
                                      (cellObj = 
                                       MathLink`CallFrontEnd[
                                        FrontEnd`AttachCell[
                                         boxObj,
                                         Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                         {1, {Center, Bottom}},
                                         {Center, Top},
                                         "ClosingActions" -> {"ParentChanged"}
                                        ]
                                       ]),
                                     "MouseExited" :> NotebookDelete[cellObj],
                                     PassEventsDown -> True,
                                     Method -> "Preemptive",
                                     PassEventsUp -> True
                                    }
                                   ]
                                  ],
                                  MouseAppearanceTag["LinkHand"]
                                 ],
                                 Initialization :> (boxObj = EvaluationBox[]),
                                 DynamicModuleValues :> { },
                                 UnsavedVariables :> {boxObj, cellObj},
                                 BaseStyle -> {Editable -> False}
                                ],
                                Deploy,
                                DefaultBaseStyle -> "Deploy"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                GridBox[
                                 {
                                  {
                                   "\"WolframContext\"",
                                   "\"WolframLanguageEvaluator\"",
                                   "\"WolframAlpha\"",
                                   "",
                                   ""
                                  }
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                ],
                                "Grid"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Location: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"BuiltIn\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Wolfram`MCPServer`MCPServerObject[
               <|
                "Name" -> "Wolfram",
                "Location" -> "BuiltIn",
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1,
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "WolframContext",
                    "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                    "Parameters" -> {
                     "context" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                      "Required" -> True
                     |>
                    },
                    "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframContext,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframLanguageEvaluator",
                    "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "code" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "The Wolfram Language code to evaluate.",
                      "Required" -> True
                     |>,
                     "timeConstraint" -> <|
                      "Interpreter" -> "Integer",
                      "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                      "Required" -> False
                     |>
                    },
                    "Function" -> Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframAlpha",
                    "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "query" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "the input",
                      "Required" -> True
                     |>,
                     "steps" -> <|
                      "Interpreter" -> "Boolean",
                      "Help" -> "whether to show step-by-step solution",
                      "Required" -> False
                     |>
                    },
                    "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 48578679
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "Get the ",
           Cell[
            BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
            "InlineFormula"
           ],
           ":"
          }
         ],
         "ExampleText",
         CellID -> 635623345
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"LLMConfiguration", "[", "server", "]"}]],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 763685971
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["LLMConfiguration", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = True, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = True),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Model: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["Automatic", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"],
                            ImageSizeCache -> {10.0329, {0.0, 10.0329}}
                           ],
                           Appearance -> None,
                           BaseStyle -> { },
                           ButtonFunction :> (Typeset`open$$ = False),
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Model: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["Automatic", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Tools: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                GridBox[
                                 {
                                  {
                                   TemplateBox[
                                    {
                                     TagBox[
                                      TooltipBox[
                                       "\"WolframContext\"",
                                       "\"Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.\"",
                                       TooltipStyle -> "TextStyling"
                                      ],
                                      Function[
                                       Annotation[
                                        #1,
                                        "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                        "Tooltip"
                                       ]
                                      ]
                                     ],
                                     InterpretationBox[
                                      RowBox[
                                       {
                                        TagBox["LLMTool", "SummaryHead"],
                                        "[",
                                        DynamicModuleBox[
                                         {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                         TemplateBox[
                                          {
                                           PaneSelectorBox[
                                            {
                                             False ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = True),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframContext\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Uses semantic search to retrieve any relevant information from Wolfram. Always\\nuse this tool at the start of new conversations or if the topic changes to\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ],
                                             True ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = False),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframContext\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Uses semantic search to retrieve any relevant information from Wolfram. Always\\nuse this tool at the start of new conversations or if the topic changes to\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "Wolfram`MCPServer`DefaultServers`Private`relatedWolframContext",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       TagBox[
                                                        GridBox[
                                                         {
                                                          {
                                                           TagBox[
                                                            TooltipBox[
                                                             "\"context\"",
                                                             "\"\\\"Help\\\" description sent to the LLM: \\\"A detailed summary of what the user is trying to achieve or learn about.\\\"\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Function[
                                                             Annotation[
                                                              #1,
                                                              "\"Help\" description sent to the LLM: \"A detailed summary of what the user is trying to achieve or learn about.\"",
                                                              "Tooltip"
                                                             ]
                                                            ]
                                                           ],
                                                           TagBox[
                                                            TooltipBox[
                                                             TemplateBox[
                                                              {
                                                               "\"String\"",
                                                               RowBox[{"Interpreter", "[", "\"String\"", "]"}]
                                                              },
                                                              "ClickToCopy2"
                                                             ],
                                                             "\"parameter interpreter\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                           ],
                                                           "\"\""
                                                          }
                                                         },
                                                         GridBoxAlignment -> {"Columns" -> {{Left}}},
                                                         AutoDelete -> False,
                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                         BaselinePosition -> {{1, 1}, Axis},
                                                         BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                                        ],
                                                        "Grid"
                                                       ],
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ]
                                            },
                                            Dynamic[Typeset`open$$],
                                            ImageSize -> Automatic
                                           ]
                                          },
                                          "SummaryPanel"
                                         ],
                                         DynamicModuleValues :> { }
                                        ],
                                        "]"
                                       }
                                      ],
                                      LLMTool[
                                       <|
                                        "Name" -> "WolframContext",
                                        "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                                        "Parameters" -> {
                                         "context" -> <|
                                          "Interpreter" -> "String",
                                          "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                                          "Required" -> True
                                         |>
                                        },
                                        "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframContext,
                                        "Options" -> { },
                                        "LLMPacletVersion" -> "1.6.10"
                                       |>
                                      ],
                                      Selectable -> False,
                                      Editable -> False,
                                      SelectWithContents -> True
                                     ]
                                    },
                                    "ClickToCopy2"
                                   ]
                                  },
                                  {
                                   TemplateBox[
                                    {
                                     TagBox[
                                      TooltipBox[
                                       "\"WolframLanguageEvaluator\"",
                                       "\"Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\\nParse natural language input with `\[FreeformPrompt][\\\"query\\\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\\n\\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.\"",
                                       TooltipStyle -> "TextStyling"
                                      ],
                                      Function[
                                       Annotation[
                                        #1,
                                        "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                        "Tooltip"
                                       ]
                                      ]
                                     ],
                                     InterpretationBox[
                                      RowBox[
                                       {
                                        TagBox["LLMTool", "SummaryHead"],
                                        "[",
                                        DynamicModuleBox[
                                         {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                         TemplateBox[
                                          {
                                           PaneSelectorBox[
                                            {
                                             False ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = True),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframLanguageEvaluator\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Evaluate Wolfram Language code for the user in a separate kernel. The user does\\nnot automatically see the result. Do not ask permission to evaluate code. You mu\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ],
                                             True ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = False),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframLanguageEvaluator\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Evaluate Wolfram Language code for the user in a separate kernel. The user does\\nnot automatically see the result. Do not ask permission to evaluate code. You mu\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       TagBox[
                                                        GridBox[
                                                         {
                                                          {
                                                           TagBox[
                                                            TooltipBox[
                                                             "\"code\"",
                                                             "\"\\\"Help\\\" description sent to the LLM: \\\"The Wolfram Language code to evaluate.\\\"\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Function[
                                                             Annotation[
                                                              #1,
                                                              "\"Help\" description sent to the LLM: \"The Wolfram Language code to evaluate.\"",
                                                              "Tooltip"
                                                             ]
                                                            ]
                                                           ],
                                                           TagBox[
                                                            TooltipBox[
                                                             TemplateBox[
                                                              {
                                                               "\"String\"",
                                                               RowBox[{"Interpreter", "[", "\"String\"", "]"}]
                                                              },
                                                              "ClickToCopy2"
                                                             ],
                                                             "\"parameter interpreter\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                           ],
                                                           "\"\""
                                                          },
                                                          {
                                                           TagBox[
                                                            TooltipBox[
                                                             "\"timeConstraint\"",
                                                             "\"\\\"Help\\\" description sent to the LLM: \\\"The time constraint for the evaluation (default is 60 seconds).\\\"\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Function[
                                                             Annotation[
                                                              #1,
                                                              "\"Help\" description sent to the LLM: \"The time constraint for the evaluation (default is 60 seconds).\"",
                                                              "Tooltip"
                                                             ]
                                                            ]
                                                           ],
                                                           TagBox[
                                                            TooltipBox[
                                                             TemplateBox[
                                                              {
                                                               "\"Integer\"",
                                                               RowBox[{"Interpreter", "[", "\"Integer\"", "]"}]
                                                              },
                                                              "ClickToCopy2"
                                                             ],
                                                             "\"parameter interpreter\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                           ],
                                                           "\"(optional)\""
                                                          }
                                                         },
                                                         GridBoxAlignment -> {"Columns" -> {{Left}}},
                                                         AutoDelete -> False,
                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                         BaselinePosition -> {{1, 1}, Axis},
                                                         BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                                        ],
                                                        "Grid"
                                                       ],
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ]
                                            },
                                            Dynamic[Typeset`open$$],
                                            ImageSize -> Automatic
                                           ]
                                          },
                                          "SummaryPanel"
                                         ],
                                         DynamicModuleValues :> { }
                                        ],
                                        "]"
                                       }
                                      ],
                                      LLMTool[
                                       <|
                                        "Name" -> "WolframLanguageEvaluator",
                                        "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                        "Parameters" -> {
                                         "code" -> <|
                                          "Interpreter" -> "String",
                                          "Help" -> "The Wolfram Language code to evaluate.",
                                          "Required" -> True
                                         |>,
                                         "timeConstraint" -> <|
                                          "Interpreter" -> "Integer",
                                          "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                                          "Required" -> False
                                         |>
                                        },
                                        "Function" -> Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                                        "Options" -> { },
                                        "LLMPacletVersion" -> "1.6.10"
                                       |>
                                      ],
                                      Selectable -> False,
                                      Editable -> False,
                                      SelectWithContents -> True
                                     ]
                                    },
                                    "ClickToCopy2"
                                   ]
                                  },
                                  {
                                   TemplateBox[
                                    {
                                     TagBox[
                                      TooltipBox[
                                       "\"WolframAlpha\"",
                                       "\"Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.\"",
                                       TooltipStyle -> "TextStyling"
                                      ],
                                      Function[
                                       Annotation[
                                        #1,
                                        "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                        "Tooltip"
                                       ]
                                      ]
                                     ],
                                     InterpretationBox[
                                      RowBox[
                                       {
                                        TagBox["LLMTool", "SummaryHead"],
                                        "[",
                                        DynamicModuleBox[
                                         {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                                         TemplateBox[
                                          {
                                           PaneSelectorBox[
                                            {
                                             False ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = True),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframAlpha\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Use natural language queries with Wolfram|Alpha to get up-to-date computational\\nresults about entities in chemistry, physics, geography, history, art, astronomy\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ],
                                             True ->
                                              GridBox[
                                               {
                                                {
                                                 PaneBox[
                                                  ButtonBox[
                                                   DynamicBox[
                                                    FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                                                   ],
                                                   ButtonFunction :> (Typeset`open$$ = False),
                                                   Appearance -> None,
                                                   BaseStyle -> { },
                                                   Evaluator -> Automatic,
                                                   Method -> "Preemptive"
                                                  ],
                                                  Alignment -> {Center, Center},
                                                  ImageSize ->
                                                   Dynamic[
                                                    {
                                                     Automatic,
                                                     Times[
                                                      3.5,
                                                      Times[
                                                       CurrentValue["FontCapHeight"],
                                                       AbsoluteCurrentValue[Magnification]^(-1)
                                                      ]
                                                     ]
                                                    }
                                                   ]
                                                 ],
                                                 GridBox[
                                                  {
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Name: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox["\"WolframAlpha\"", "SummaryItem"]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Description: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "\"Use natural language queries with Wolfram|Alpha to get up-to-date computational\\nresults about entities in chemistry, physics, geography, history, art, astronomy\"",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Function: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       "Wolfram`Chatbook`Common`getWolframAlphaText",
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   },
                                                   {
                                                    RowBox[
                                                     {
                                                      TagBox["\"Parameters: \"", "SummaryItemAnnotation"],
                                                      "\[InvisibleSpace]",
                                                      TagBox[
                                                       TagBox[
                                                        GridBox[
                                                         {
                                                          {
                                                           TagBox[
                                                            TooltipBox[
                                                             "\"query\"",
                                                             "\"\\\"Help\\\" description sent to the LLM: \\\"the input\\\"\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Function[
                                                             Annotation[
                                                              #1,
                                                              "\"Help\" description sent to the LLM: \"the input\"",
                                                              "Tooltip"
                                                             ]
                                                            ]
                                                           ],
                                                           TagBox[
                                                            TooltipBox[
                                                             TemplateBox[
                                                              {
                                                               "\"String\"",
                                                               RowBox[{"Interpreter", "[", "\"String\"", "]"}]
                                                              },
                                                              "ClickToCopy2"
                                                             ],
                                                             "\"parameter interpreter\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                           ],
                                                           "\"\""
                                                          },
                                                          {
                                                           TagBox[
                                                            TooltipBox[
                                                             "\"steps\"",
                                                             "\"\\\"Help\\\" description sent to the LLM: \\\"whether to show step-by-step solution\\\"\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Function[
                                                             Annotation[
                                                              #1,
                                                              "\"Help\" description sent to the LLM: \"whether to show step-by-step solution\"",
                                                              "Tooltip"
                                                             ]
                                                            ]
                                                           ],
                                                           TagBox[
                                                            TooltipBox[
                                                             TemplateBox[
                                                              {
                                                               "\"Boolean\"",
                                                               RowBox[{"Interpreter", "[", "\"Boolean\"", "]"}]
                                                              },
                                                              "ClickToCopy2"
                                                             ],
                                                             "\"parameter interpreter\"",
                                                             TooltipStyle -> "TextStyling"
                                                            ],
                                                            Annotation[#1, "parameter interpreter", "Tooltip"] &
                                                           ],
                                                           "\"(optional)\""
                                                          }
                                                         },
                                                         GridBoxAlignment -> {"Columns" -> {{Left}}},
                                                         AutoDelete -> False,
                                                         GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                         BaselinePosition -> {{1, 1}, Axis},
                                                         BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}}
                                                        ],
                                                        "Grid"
                                                       ],
                                                       "SummaryItem"
                                                      ]
                                                     }
                                                    ]
                                                   }
                                                  },
                                                  GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                                                  AutoDelete -> False,
                                                  GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                                  GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                                                  BaseStyle -> {
                                                   ShowStringCharacters -> False,
                                                   NumberMarks -> False,
                                                   PrintPrecision -> 3,
                                                   ShowSyntaxStyles -> False
                                                  }
                                                 ]
                                                }
                                               },
                                               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                                               AutoDelete -> False,
                                               GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                                               BaselinePosition -> {1, 1}
                                              ]
                                            },
                                            Dynamic[Typeset`open$$],
                                            ImageSize -> Automatic
                                           ]
                                          },
                                          "SummaryPanel"
                                         ],
                                         DynamicModuleValues :> { }
                                        ],
                                        "]"
                                       }
                                      ],
                                      LLMTool[
                                       <|
                                        "Name" -> "WolframAlpha",
                                        "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                                        "Parameters" -> {
                                         "query" -> <|
                                          "Interpreter" -> "String",
                                          "Help" -> "the input",
                                          "Required" -> True
                                         |>,
                                         "steps" -> <|
                                          "Interpreter" -> "Boolean",
                                          "Help" -> "whether to show step-by-step solution",
                                          "Required" -> False
                                         |>
                                        },
                                        "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                                        "Options" -> { },
                                        "LLMPacletVersion" -> "1.6.10"
                                       |>
                                      ],
                                      Selectable -> False,
                                      Editable -> False,
                                      SelectWithContents -> True
                                     ]
                                    },
                                    "ClickToCopy2"
                                   ]
                                  }
                                 },
                                 BaseStyle -> {ButtonBoxOptions -> {ImageSize -> Automatic}},
                                 BaselinePosition -> {{1, 1}, Axis},
                                 DefaultBaseStyle -> "Column",
                                 GridBoxAlignment -> {"Columns" -> {{Left}}},
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                ],
                                "Column"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           }
                          },
                          AutoDelete -> False,
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}}
                         ]
                        }
                       },
                       AutoDelete -> False,
                       BaselinePosition -> {1, 1},
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              LLMConfiguration[
               <|
                "Model" -> Automatic,
                "MaxTokens" -> Automatic,
                "Temperature" -> Automatic,
                "TotalProbabilityCutoff" -> Automatic,
                "Prompts" -> Automatic,
                "PromptDelimiter" -> Automatic,
                "StopTokens" -> Automatic,
                "ToolMethod" -> Automatic,
                "Tools" -> {
                 LLMTool[
                  <|
                   "Name" -> "WolframContext",
                   "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                   "Parameters" -> {
                    "context" -> <|
                     "Interpreter" -> "String",
                     "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                     "Required" -> True
                    |>
                   },
                   "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframContext,
                   "Options" -> { },
                   "LLMPacletVersion" -> "1.6.10"
                  |>
                 ],
                 LLMTool[
                  <|
                   "Name" -> "WolframLanguageEvaluator",
                   "Description" -> "Evaluate Wolfram Language code for the user in a separate kernel. The user does not automatically see the result. Do not ask permission to evaluate code. You must include the result in your response in order for them to see it. If a formatted result is provided as a markdown link, use that in your response instead of typing out the output. The evaluator supports interactive content such as Manipulate. You have read access to local files.\nParse natural language input with `\[FreeformPrompt][\"query\"]`, which is analogous to ctrl-= input in notebooks. Natural language input is parsed before evaluation, so it works like macro expansion. You should ALWAYS use this natural language input to obtain things like `Quantity`, `DateObject`, `Entity`, etc.\n\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                   "Parameters" -> {
                    "code" -> <|
                     "Interpreter" -> "String",
                     "Help" -> "The Wolfram Language code to evaluate.",
                     "Required" -> True
                    |>,
                    "timeConstraint" -> <|
                     "Interpreter" -> "Integer",
                     "Help" -> "The time constraint for the evaluation (default is 60 seconds).",
                     "Required" -> False
                    |>
                   },
                   "Function" -> Wolfram`MCPServer`DefaultServers`Private`evaluateWolframLanguage,
                   "Options" -> { },
                   "LLMPacletVersion" -> "1.6.10"
                  |>
                 ],
                 LLMTool[
                  <|
                   "Name" -> "WolframAlpha",
                   "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                   "Parameters" -> {
                    "query" -> <|
                     "Interpreter" -> "String",
                     "Help" -> "the input",
                     "Required" -> True
                    |>,
                    "steps" -> <|
                     "Interpreter" -> "Boolean",
                     "Help" -> "whether to show step-by-step solution",
                     "Required" -> False
                    |>
                   },
                   "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                   "Options" -> { },
                   "LLMPacletVersion" -> "1.6.10"
                  |>
                 ]
                },
                "LLMPacletVersion" -> "1.6.10"
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 163820367
           ]
          },
          Open
         ]
        ],
        Cell[
         "See where the server has been installed:",
         "ExampleText",
         CellID -> 34177191
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"server", "[", "\"Installations\"", "]"}]],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 15390740
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {
                     "\"C:/Users/rhennigan/AppData/Roaming/Claude/claude_desktop_config.json\""
                    },
                    "FileArgument"
                   ],
                   "]"
                  }
                 ],
                 ",",
                 RowBox[
                  {
                   "File",
                   "[",
                   TemplateBox[
                    {"\"C:/Users/rhennigan/.cursor/mcp.json\""},
                    "FileArgument"
                   ],
                   "]"
                  }
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 260730800
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Generalizations & Extensions", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 166107764
        ],
        Cell[
         TextData[
          {
           "Use an ",
           Cell[
            BoxData[
             ButtonBox[
              "MCPServerObject",
              BaseStyle -> "Link",
              ButtonData -> "paclet:Wolfram/MCPServer/ref/MCPServerObject"
             ]
            ],
            "InlineFormula"
           ],
           " as an ",
           Cell[
            BoxData[ButtonBox["LLMConfiguration", BaseStyle -> "Link"]],
            "InlineFormula"
           ],
           " in ",
           Cell[
            BoxData[ButtonBox["LLMSynthesize", BaseStyle -> "Link"]],
            "InlineFormula"
           ],
           ":"
          }
         ],
         "ExampleText",
         CellID -> 522656092
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "server",
               "=",
               RowBox[{"MCPServerObject", "[", "\"WolframAlpha\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 236140536
           ],
           Cell[
            BoxData[
             InterpretationBox[
              RowBox[
               {
                TagBox["MCPServerObject", "SummaryHead"],
                "[",
                DynamicModuleBox[
                 {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                 TemplateBox[
                  {
                   PaneSelectorBox[
                    {
                     False ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = True),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"WolframAlpha\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ],
                     True ->
                      GridBox[
                       {
                        {
                         PaneBox[
                          ButtonBox[
                           DynamicBox[
                            FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                           ],
                           ButtonFunction :> (Typeset`open$$ = False),
                           Appearance -> None,
                           BaseStyle -> { },
                           Evaluator -> Automatic,
                           Method -> "Preemptive"
                          ],
                          Alignment -> {Center, Center},
                          ImageSize ->
                           Dynamic[
                            {
                             Automatic,
                             Times[
                              3.5,
                              Times[
                               CurrentValue["FontCapHeight"],
                               AbsoluteCurrentValue[Magnification]^(-1)
                              ]
                             ]
                            }
                           ]
                         ],
                         GraphicsBox[
                          {
                           Thickness[0.005979],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {25.0, 97.147},
                                {92.882, 165.03},
                                {102.25, 174.4},
                                {117.45, 174.4},
                                {126.82, 165.03},
                                {136.2, 155.66},
                                {136.2, 140.46},
                                {126.82, 131.09},
                                {75.558, 79.823}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {
                               {
                                {0, 2, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0},
                                {1, 3, 3},
                                {0, 1, 0}
                               }
                              },
                              {
                               {
                                {76.265, 80.53},
                                {126.82, 131.09},
                                {136.2, 140.46},
                                {151.39, 140.46},
                                {160.76, 131.09},
                                {161.12, 130.73},
                                {170.49, 121.36},
                                {170.49, 106.17},
                                {161.12, 96.794},
                                {99.725, 35.4},
                                {96.601, 32.276},
                                {96.601, 27.211},
                                {99.725, 24.087},
                                {112.33, 11.48}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ],
                           StyleBox[
                            {
                             JoinedCurveBox[
                              {{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                              {
                               {
                                {109.85, 148.06},
                                {59.648, 97.854},
                                {50.276, 88.482},
                                {50.276, 73.286},
                                {59.648, 63.913},
                                {69.021, 54.541},
                                {84.217, 54.541},
                                {93.589, 63.913},
                                {143.79, 114.12}
                               }
                              },
                              CurveClosed -> {0}
                             ]
                            },
                            {
                             CapForm["Round"],
                             JoinForm[{"Miter", 1.0}],
                             Thickness[0.071749]
                            },
                            StripOnInput -> False
                           ]
                          },
                          ImageSize -> 24
                         ],
                         GridBox[
                          {
                           {
                            RowBox[
                             {
                              TagBox["\"Name: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"WolframAlpha\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Transport: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"StandardInputOutput\"", "SummaryItem"]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"JSON Configuration: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                DynamicModuleBox[
                                 {boxObj, cellObj},
                                 TagBox[
                                  TagBox[
                                   ButtonBox[
                                    TagBox[
                                     "\"{\[Ellipsis]}\"",
                                     BoxForm`Undeploy,
                                     DefaultBaseStyle -> {Deployed -> False}
                                    ],
                                    ButtonFunction :> {
                                     CopyToClipboard[
                                      "{\n\t\"mcpServers\":{\n\t\t\"WolframAlpha\":{\n\t\t\t\"command\":\"wolfram\",\n\t\t\t\"args\":[\n\t\t\t\t\"-run\",\n\t\t\t\t\"Wolfram`MCPServer`StartMCPServer[]\",\n\t\t\t\t\"-noinit\",\n\t\t\t\t\"-noprompt\"\n\t\t\t],\n\t\t\t\"env\":{\n\t\t\t\t\"MCP_SERVER_NAME\":\"WolframAlpha\"\n\t\t\t}\n\t\t}\n\t}\n}"
                                     ],
                                     NotebookDelete[cellObj],
                                     FrontEndExecute[
                                      FrontEnd`AttachCell[
                                       boxObj,
                                       Cell[
                                        BoxData[TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]
                                       ],
                                       {1, {Center, Bottom}},
                                       {Center, Top},
                                       "ClosingActions" -> {"ParentChanged", "MouseExit"}
                                      ]
                                     ]
                                    },
                                    Evaluator -> Automatic,
                                    Appearance -> {
                                     "Default" -> None,
                                     "Hover" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Hover.9.png"
                                      ],
                                     "Pressed" ->
                                      FrontEnd`FileName[
                                       {"Typeset", "ClickToCopy"},
                                       "Pressed.9.png"
                                      ]
                                    },
                                    BaseStyle -> { },
                                    DefaultBaseStyle -> { },
                                    BaselinePosition -> Baseline,
                                    FrameMargins -> 2,
                                    Method -> "Preemptive"
                                   ],
                                   EventHandlerTag[
                                    {
                                     "MouseEntered" :>
                                      (cellObj = 
                                       MathLink`CallFrontEnd[
                                        FrontEnd`AttachCell[
                                         boxObj,
                                         Cell[BoxData[TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]],
                                         {1, {Center, Bottom}},
                                         {Center, Top},
                                         "ClosingActions" -> {"ParentChanged"}
                                        ]
                                       ]),
                                     "MouseExited" :> NotebookDelete[cellObj],
                                     PassEventsDown -> True,
                                     Method -> "Preemptive",
                                     PassEventsUp -> True
                                    }
                                   ]
                                  ],
                                  MouseAppearanceTag["LinkHand"]
                                 ],
                                 Initialization :> (boxObj = EvaluationBox[]),
                                 DynamicModuleValues :> { },
                                 UnsavedVariables :> {boxObj, cellObj},
                                 BaseStyle -> {Editable -> False}
                                ],
                                Deploy,
                                DefaultBaseStyle -> "Deploy"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Tool Names: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox[
                               TagBox[
                                GridBox[
                                 {
                                  {"\"WolframAlphaContext\"", "\"WolframAlpha\"", "", "", ""}
                                 },
                                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                                 AutoDelete -> False,
                                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
                                ],
                                "Grid"
                               ],
                               "SummaryItem"
                              ]
                             }
                            ]
                           },
                           {
                            RowBox[
                             {
                              TagBox["\"Location: \"", "SummaryItemAnnotation"],
                              "\[InvisibleSpace]",
                              TagBox["\"BuiltIn\"", "SummaryItem"]
                             }
                            ]
                           }
                          },
                          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                          AutoDelete -> False,
                          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                          GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                          BaseStyle -> {
                           ShowStringCharacters -> False,
                           NumberMarks -> False,
                           PrintPrecision -> 3,
                           ShowSyntaxStyles -> False
                          }
                         ]
                        }
                       },
                       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                       AutoDelete -> False,
                       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                       BaselinePosition -> {1, 1}
                      ]
                    },
                    Dynamic[Typeset`open$$],
                    ImageSize -> Automatic
                   ]
                  },
                  "SummaryPanel"
                 ],
                 DynamicModuleValues :> { }
                ],
                "]"
               }
              ],
              Wolfram`MCPServer`MCPServerObject[
               <|
                "Name" -> "WolframAlpha",
                "Location" -> "BuiltIn",
                "Transport" -> "StandardInputOutput",
                "ServerVersion" -> "1.0.0",
                "ObjectVersion" -> 1,
                "LLMEvaluator" -> <|
                 "Tools" -> {
                  LLMTool[
                   <|
                    "Name" -> "WolframAlphaContext",
                    "Description" -> "Uses semantic search to retrieve any relevant information from Wolfram Alpha. Always use this tool at the start of new conversations or if the topic changes to ensure you have up-to-date relevant information. This uses semantic search, so the context argument should be written in natural language (not a search query) and contain as much detail as possible.",
                    "Parameters" -> {
                     "context" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "A detailed summary of what the user is trying to achieve or learn about.",
                      "Required" -> True
                     |>
                    },
                    "Function" -> Wolfram`MCPServer`DefaultServers`Private`relatedWolframAlphaResults,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ],
                  LLMTool[
                   <|
                    "Name" -> "WolframAlpha",
                    "Description" -> "Use natural language queries with Wolfram|Alpha to get up-to-date computational results about entities in chemistry, physics, geography, history, art, astronomy, and more.\nAlways use the Wolfram context tool before using this tool to make sure you have the most up-to-date information.",
                    "Parameters" -> {
                     "query" -> <|
                      "Interpreter" -> "String",
                      "Help" -> "the input",
                      "Required" -> True
                     |>,
                     "steps" -> <|
                      "Interpreter" -> "Boolean",
                      "Help" -> "whether to show step-by-step solution",
                      "Required" -> False
                     |>
                    },
                    "Function" -> Wolfram`Chatbook`Common`getWolframAlphaText,
                    "Options" -> { },
                    "LLMPacletVersion" -> "1.6.10"
                   |>
                  ]
                 }
                |>
               |>
              ],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 252819182
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "LLMSynthesize",
               "[",
               RowBox[
                {
                 "\"Which generates more geothermal? New Zealand or Iceland?\"",
                 ",",
                 RowBox[
                  {
                   "LLMEvaluator",
                   "->",
                   RowBox[{"LLMConfiguration", "[", "server", "]"}]
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 391730515
           ],
           Cell[
            BoxData[
             "\"In 2022, New Zealand generated approximately **6.194 billion kWh** of geothermal energy, which is equivalent to about **707.1 MW**. In contrast, Iceland produced around **5.209 billion kWh** of geothermal energy, or about **594.6 MW**.\\n\\nThus, based on these figures, New Zealand generates more geothermal energy than Iceland.\\n\\nFor more detailed information, you can refer to the sources: [Geothermal Energy Generation in New Zealand](https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+New+Zealand) and [Geothermal Energy Generation in Iceland](https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+Iceland).\""
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 122502525
           ]
          },
          Open
         ]
        ],
        Cell[
         "Format the result:",
         "ExampleText",
         CellID -> 606998422
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {"ResourceFunction", "[", "\"ImportMarkdownString\"", "]"}
               ],
               "[",
               "%",
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[7]:=",
            CellID -> 277463255
           ],
           Cell[
            BoxData[
             Cell[
              TextData[
               {
                "In 2022, New Zealand generated approximately ",
                StyleBox["6.194 billion kWh", FontWeight -> Bold],
                " of geothermal energy, which is equivalent to about ",
                StyleBox["707.1 MW", FontWeight -> Bold],
                ". In contrast, Iceland produced around ",
                StyleBox["5.209 billion kWh", FontWeight -> Bold],
                " of geothermal energy, or about ",
                StyleBox["594.6 MW", FontWeight -> Bold],
                ".\n\nThus, based on these figures, New Zealand generates more geothermal energy than Iceland.\n\nFor more detailed information, you can refer to the sources: ",
                ButtonBox[
                 "Geothermal Energy Generation in New Zealand",
                 BaseStyle -> "Hyperlink",
                 ButtonData -> {
                  URL[
                   "https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+New+Zealand"
                  ],
                  None
                 },
                 ButtonNote -> "https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+New+Zealand"
                ],
                " and ",
                ButtonBox[
                 "Geothermal Energy Generation in Iceland",
                 BaseStyle -> "Hyperlink",
                 ButtonData -> {
                  URL[
                   "https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+Iceland"
                  ],
                  None
                 },
                 ButtonNote -> "https://www.wolframalpha.com/input?i=geothermal+energy+generation+in+Iceland"
                ],
                "."
               }
              ],
              "Text",
              Background -> None
             ]
            ],
            "Output",
            CellLabel -> "Out[7]=",
            CellID -> 440457516
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 21191711
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 94724105
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 635781998
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Applications", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 164377662
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Properties & Relations", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 7012883
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Possible Issues", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 98847445
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 563343696
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 370199806
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 104083968],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["XX", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 433987609
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 633890588
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 38817823
        ],
        Cell[
         "Wolfram/MCPServer",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 148705287
        ],
        Cell[
         "Wolfram`MCPServer`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 186913036
        ],
        Cell[
         "Wolfram/MCPServer/ref/MCPServerObject",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 1009719
        ]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 8134633],
        Cell["XXXX", "Keywords", CellID -> 22423304]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 85435895
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 281157942
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 115842
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 6626821
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 433569035
        ]
       },
       Closed
      ]
     ]
    },
    Open
   ]
  ]
 },
 TaggingRules -> <|"Paclet" -> "Wolfram/MCPServer", "TryRealOnly" -> False|>,
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ]
]